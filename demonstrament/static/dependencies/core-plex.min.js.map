{"version":3,"file":"core-plex.min.js","sources":["../development/coutil/accessors/index.js","../development/coutil/pand-events/index.js","../development/coutil/property-directory/index.js","../development/coutil/type-of/index.js","../development/coutil/recursive-assign/index.js","../development/coutil/variables/index.js","../development/coutil/is-property-definition/index.js","../development/coutil/recursive-assign-concat/index.js","../development/coutil/recursive-freeze/index.js","../development/coutil/regular-expressions/index.js","../development/coutil/typedObjectLiteral/index.js","../node_modules/outmatch/build/index.es.mjs","../development/core/event-definition/index.js","../development/core/event-definition/settings/index.js","../development/core/index.js","../development/core/settings/index.js"],"sourcesContent":["const defaultAccessor = ($target, $property) => {\n  if($property === undefined) { return $target }\n  else { return $target[$property] }\n}\nconst getAccessor = ($target, $property) => {\n  if($property === undefined) { return $target }\n  else { return $target.get($property) }\n}\nexport default {\n  default: defaultAccessor,\n  get: getAccessor,\n}","function impandEvents($propEvents) {\n  if(!Array.isArray($propEvents)) { return $propEvents }\n  const propEvents = {}\n  iteratePropEvents: \n  for(const $propEvent of $propEvents) {\n    const { path, type, listener, options } = $propEvent\n    const propEventSettings = `${$path} ${$type}`\n    if(options !== undefined) {\n      propEvents[propEventSettings] = [listener, options]\n    }\n    else {\n      propEvents[propEventSettings] = listener\n    }\n  }\n  return propEvents\n}\n\nfunction expandEvents($propEvents, $scopeKey = ':scope') {\n  if(\n    Array.isArray($propEvents) ||\n    $propEvents === undefined\n  ) { return $propEvents }\n  const propEvents = []\n  iteratePropEvents:\n  for(const [\n    $propEventSettings, $propEventListener\n  ] of Object.entries($propEvents)) {\n    const propEventSettings = $propEventSettings.trim().split(' ')\n    let path, type, listener, options\n    if(propEventSettings.length === 1) {\n      path = $scopeKey\n      type = propEventSettings[0]\n    }\n    else if(propEventSettings.length > 1) {\n      path = propEventSettings[0]\n      type = propEventSettings[1]\n    }\n    if(Array.isArray($propEventListener)) {\n      listener = $propEventListener[0]\n      options = $propEventListener[1]\n    }\n    else {\n      listener = $propEventListener\n    }\n    const propEvent = {\n      type,\n      path,\n      listener,\n      enable: false,\n    }\n    propEvents.push(propEvent)\n  }\n  return propEvents\n}\n\nexport { impandEvents, expandEvents }","import Accessors from '../accessors/index.js'\nconst Options = {\n  depth: 0,\n  maxDepth: 10,\n  accessors: [Accessors.default],\n}\nexport default function propertyDirectory($object, $options) {\n  const _propertyDirectory = []\n  const options = Object.assign({}, Options, $options)\n  options.depth++\n  if(options.depth > options.maxDepth) { return _propertyDirectory }\n  iterateAccessors: \n  for(const $accessor of options.accessors) {\n    const object = $accessor($object)\n    if(!object) continue iterateAccessors\n    iterateObjectProperties: \n    for(const [$key, $value] of Object.entries(object)) {\n      _propertyDirectory.push($key)\n      if(\n        typeof $value === 'object' &&\n        $value !== null &&\n        $value !== object\n      ) {\n        const subtarget = propertyDirectory($value, options)\n        for(const $subtarget of subtarget) {\n          let path\n          if(typeof $subtarget === 'object') {\n            path = [$key, ...$subtarget].join('.')\n          }\n          else {\n            path = [$key, $subtarget].join('.')\n          }\n          _propertyDirectory.push(path)\n        }\n      }\n    }\n  }\n  return _propertyDirectory\n}","const typeOf = ($data) => Object\n  .prototype\n  .toString\n  .call($data).slice(8, -1).toLowerCase()\n\nexport default typeOf","import typeOf from '../type-of/index.js'\nexport default function recursiveAssign($target, ...$sources) {\n  if(!$target) { return $target}\n  iterateSources: \n  for(const $source of $sources) {\n    if(!$source) continue iterateSources\n    iterateSourceEntries: \n    for(const [\n      $sourcePropertyKey, $sourcePropertyValue\n    ] of Object.entries($source)) {\n      const typeOfTargetPropertyValue = typeOf($target[$sourcePropertyKey])\n      const typeOfSourcePropertyValue = typeOf($sourcePropertyValue)\n      if(\n        typeOfTargetPropertyValue === 'object' &&\n        typeOfSourcePropertyValue === 'object'\n      ) {\n        $target[$sourcePropertyKey] = recursiveAssign($target[$sourcePropertyKey], $sourcePropertyValue)\n      }\n      else {\n        $target[$sourcePropertyKey] = $sourcePropertyValue\n      }\n    }\n  }\n  return $target\n}","const Primitives = {\n  'string': String, \n  'number': Number, \n  'boolean': Boolean, \n  'bigint': BigInt, \n  'undefined': undefined,\n  'null': null,\n}\nconst PrimitiveKeys = Object.keys(Primitives)\nconst PrimitiveValues = Object.values(Primitives)\nconst Objects = {\n  'object': Object,\n  'array': Array,\n}\nconst ObjectKeys = Object.keys(Objects)\nconst ObjectValues = Object.values(Objects)\nconst Types = Object.assign({}, Primitives, Objects)\nconst TypeKeys = Object.keys(Types)\nconst TypeValues = Object.values(Types)\nconst TypeMethods = [\n Primitives.String, Primitives.Number, Primitives.Boolean, \n Objects.Object, Objects.Array\n]\nexport {\n  Primitives, PrimitiveKeys, PrimitiveValues, \n  Objects, ObjectKeys, ObjectValues,\n  Types, TypeKeys, TypeValues, TypeMethods\n}\n","import { variables } from '../index.js'\nexport default function isPropertyDefinition($propertyDefinition) {\n  if(\n    Object.getOwnPropertyDescriptor($propertyDefinition, 'type') &&\n    (\n      variables.TypeValues.includes($propertyDefinition.type) ||\n      variables.TypeKeys.includes($propertyDefinition.type)\n    ) || (\n      typeof $propertyDefinition.type === 'object' &&\n      Object.getOwnPropertyDescriptor($propertyDefinition.type, 'value') &&\n      (\n        variables.TypeValues.includes($propertyDefinition.type.value) ||\n        variables.TypeKeys.includes($propertyDefinition.type.value)\n      )\n    )\n  ) { return true } \n  else { return false }\n}","import typeOf from '../type-of/index.js'\nexport default function recursiveAssignConcat($target, ...$sources) {\n  if(!$target) { return $target}\n  iterateSources: \n  for(const $source of $sources) {\n    if(!$source) continue iterateSources\n    iterateSourceEntries: \n    for(const [\n      $sourcePropertyKey, $sourcePropertyValue\n    ] of Object.entries($source)) {\n      const typeOfTargetPropertyValue = typeOf($target[$sourcePropertyKey])\n      const typeOfSourcePropertyValue = typeOf($sourcePropertyValue)\n      if( \n        typeOfTargetPropertyValue === 'object' &&\n        typeOfSourcePropertyValue === 'object'\n      ) {\n        $target[$sourcePropertyKey] = recursiveAssignConcat($target[$sourcePropertyKey], $sourcePropertyValue)\n      }\n      else if(\n        typeOfTargetPropertyValue === 'array' &&\n        typeOfSourcePropertyValue === 'array'\n      ) {\n        $target[$sourcePropertyKey] = $target[$sourcePropertyKey].concat($sourcePropertyValue)\n      }\n      else {\n        $target[$sourcePropertyKey] = $sourcePropertyValue\n      }\n    }\n  }\n  return $target\n}","function recursiveFreeze($target) {\n  for(const [$propertyKey, $propertyValue] of Object.entries($target)) {\n    if($propertyValue && typeof $propertyValue === 'object') {\n      recursiveFreeze($propertyValue)\n    }\n  }\n  return Object.freeze($target)\n}\nexport default recursiveFreeze","export default {\n  quotationEscape: /\\.(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/,\n}","import typeOf from '../type-of/index.js'\nexport default function typedObjectLiteral($value) {\n  let _typedObjectLiteral\n  const typeOfValue = typeOf($value)\n  if(typeOfValue === 'object') { _typedObjectLiteral = {} }\n  else if(typeOfValue === 'array') { _typedObjectLiteral = [] }\n  else if(typeOfValue === 'string') {\n    if($value === 'object') { _typedObjectLiteral = {} }\n    else if($value === 'array') { _typedObjectLiteral = [] }\n  }\n  else { _typedObjectLiteral = undefined }\n  return _typedObjectLiteral\n}","function handleNoCommaBraces(span) {\n    if (span.length < 3) {\n        return \"{\" + span + \"}\";\n    }\n    var separatorI = -1;\n    for (var i = 2; i < span.length; i++) {\n        if (span[i] === '.' && span[i - 1] === '.' && (i < 2 || span[i - 2] !== '\\\\')) {\n            if (separatorI > -1) {\n                return \"{\" + span + \"}\";\n            }\n            separatorI = i - 1;\n        }\n    }\n    if (separatorI > -1) {\n        var rangeStart = span.substr(0, separatorI);\n        var rangeEnd = span.substr(separatorI + 2);\n        if (rangeStart.length > 0 && rangeEnd.length > 0) {\n            return \"[\" + span.substr(0, separatorI) + \"-\" + span.substr(separatorI + 2) + \"]\";\n        }\n    }\n    return \"{\" + span + \"}\";\n}\nfunction expand(pattern) {\n    if (typeof pattern !== 'string') {\n        throw new TypeError(\"A pattern must be a string, but \" + typeof pattern + \" given\");\n    }\n    var scanning = false;\n    var openingBraces = 0;\n    var closingBraces = 0;\n    var handledUntil = -1;\n    var results = [''];\n    var alternatives = [];\n    var span;\n    for (var i = 0; i < pattern.length; i++) {\n        var char = pattern[i];\n        if (char === '\\\\') {\n            i++;\n            continue;\n        }\n        if (char === '{') {\n            if (scanning) {\n                openingBraces++;\n            }\n            else if (i > handledUntil && !openingBraces) {\n                span = pattern.substring(handledUntil + 1, i);\n                for (var j = 0; j < results.length; j++) {\n                    results[j] += span;\n                }\n                alternatives = [];\n                handledUntil = i;\n                scanning = true;\n                openingBraces++;\n            }\n            else {\n                openingBraces--;\n            }\n        }\n        else if (char === '}') {\n            if (scanning) {\n                closingBraces++;\n            }\n            else if (closingBraces === 1) {\n                span = pattern.substring(handledUntil + 1, i);\n                if (alternatives.length > 0) {\n                    var newResults = [];\n                    alternatives.push(expand(span));\n                    for (var j = 0; j < results.length; j++) {\n                        for (var k = 0; k < alternatives.length; k++) {\n                            for (var l = 0; l < alternatives[k].length; l++) {\n                                newResults.push(results[j] + alternatives[k][l]);\n                            }\n                        }\n                    }\n                    results = newResults;\n                }\n                else {\n                    span = handleNoCommaBraces(span);\n                    for (var j = 0; j < results.length; j++) {\n                        results[j] += span;\n                    }\n                }\n                handledUntil = i;\n                closingBraces--;\n            }\n            else {\n                closingBraces--;\n            }\n        }\n        else if (!scanning && char === ',' && closingBraces - openingBraces === 1) {\n            span = pattern.substring(handledUntil + 1, i);\n            alternatives.push(expand(span));\n            handledUntil = i;\n        }\n        if (scanning && (closingBraces === openingBraces || i === pattern.length - 1)) {\n            scanning = false;\n            i = handledUntil - 1;\n        }\n    }\n    if (handledUntil === -1) {\n        return [pattern];\n    }\n    var unhandledFrom = pattern[handledUntil] === '{' ? handledUntil : handledUntil + 1;\n    if (unhandledFrom < pattern.length) {\n        span = pattern.substr(unhandledFrom);\n        for (var j = 0; j < results.length; j++) {\n            results[j] += span;\n        }\n    }\n    return results;\n}\n\nfunction negate(pattern, options) {\n    var supportNegation = options['!'] !== false;\n    var supportParens = options['()'] !== false;\n    var isNegated = false;\n    var i;\n    if (supportNegation) {\n        for (i = 0; i < pattern.length && pattern[i] === '!'; i++) {\n            if (supportParens && pattern[i + 1] === '(') {\n                i--;\n                break;\n            }\n            isNegated = !isNegated;\n        }\n        if (i > 0) {\n            pattern = pattern.substr(i);\n        }\n    }\n    return { pattern: pattern, isNegated: isNegated };\n}\n\nfunction escapeRegExpChar(char) { if (char === '-' ||\n    char === '^' ||\n    char === '$' ||\n    char === '+' ||\n    char === '.' ||\n    char === '(' ||\n    char === ')' ||\n    char === '|' ||\n    char === '[' ||\n    char === ']' ||\n    char === '{' ||\n    char === '}' ||\n    char === '*' ||\n    char === '?' ||\n    char === '\\\\') {\n    return \"\\\\\" + char;\n}\nelse {\n    return char;\n} }\nfunction escapeRegExpString(str) {\n    var result = '';\n    for (var i = 0; i < str.length; i++) {\n        result += escapeRegExpChar(str[i]);\n    }\n    return result;\n}\n\nfunction Pattern(source, options, excludeDot) {\n    var separator = typeof options.separator === 'undefined' ? true : options.separator;\n    var separatorSplitter = '';\n    var separatorMatcher = '';\n    var wildcard = '.';\n    if (separator === true) {\n        separatorSplitter = '/';\n        separatorMatcher = '[/\\\\\\\\]';\n        wildcard = '[^/\\\\\\\\]';\n    }\n    else if (separator) {\n        separatorSplitter = separator;\n        separatorMatcher = escapeRegExpString(separatorSplitter);\n        if (separatorMatcher.length > 1) {\n            separatorMatcher = \"(?:\" + separatorMatcher + \")\";\n            wildcard = \"((?!\" + separatorMatcher + \").)\";\n        }\n        else {\n            wildcard = \"[^\" + separatorMatcher + \"]\";\n        }\n    }\n    else {\n        wildcard = '.';\n    }\n    var requiredSeparator = separator ? separatorMatcher + \"+?\" : '';\n    var optionalSeparator = separator ? separatorMatcher + \"*?\" : '';\n    var segments = separator ? source.split(separatorSplitter) : [source];\n    var support = {\n        qMark: options['?'] !== false,\n        star: options['*'] !== false,\n        globstar: separator && options['**'] !== false,\n        brackets: options['[]'] !== false,\n        extglobs: options['()'] !== false,\n        excludeDot: excludeDot && options.excludeDot !== false,\n    };\n    return {\n        source: source,\n        segments: segments,\n        options: options,\n        separator: separator,\n        separatorSplitter: separatorSplitter,\n        separatorMatcher: separatorMatcher,\n        optionalSeparator: optionalSeparator,\n        requiredSeparator: requiredSeparator,\n        wildcard: wildcard,\n        support: support,\n    };\n}\nfunction Segment(source, pattern, isFirst, isLast) { return {\n    source: source,\n    isFirst: isFirst,\n    isLast: isLast,\n    end: source.length - 1,\n}; }\nfunction Result() {\nreturn {\n    match: '',\n    unmatch: '',\n    useUnmatch: false,\n}; }\nfunction State(pattern, segment, result) { return {\n    pattern: pattern,\n    segment: segment,\n    result: result,\n    openingBracket: segment.end + 1,\n    closingBracket: -1,\n    openingParens: 0,\n    closingParens: 0,\n    parensHandledUntil: -1,\n    extglobModifiers: [],\n    scanningForParens: false,\n    escapeChar: false,\n    addToMatch: true,\n    addToUnmatch: pattern.support.extglobs,\n    dotHandled: false,\n    i: -1,\n    char: '',\n    nextChar: '',\n}; }\n\nvar EXCLUDE_DOT_PATTERN = '(?!\\\\.)';\nfunction add(state, addition, excludeDot) {\n    if (state.addToUnmatch) {\n        state.result.unmatch += addition;\n    }\n    if (state.addToMatch) {\n        if (excludeDot && !state.dotHandled) {\n            addition = EXCLUDE_DOT_PATTERN + addition;\n        }\n        state.dotHandled = true;\n        state.result.match += addition;\n    }\n    return state.result;\n}\nfunction convertSegment(pattern, segment, result) {\n    var support = pattern.support;\n    var state = State(pattern, segment, result);\n    var separatorMatcher = segment.isLast\n        ? pattern.optionalSeparator\n        : pattern.requiredSeparator;\n    if (!support.excludeDot) {\n        state.dotHandled = true;\n    }\n    if (segment.end === -1) {\n        return segment.isLast && !segment.isFirst ? result : add(state, separatorMatcher);\n    }\n    if (support.globstar && segment.source === '**') {\n        var prefix = !state.dotHandled ? EXCLUDE_DOT_PATTERN : '';\n        var globstarSegment = prefix + pattern.wildcard + \"*?\" + separatorMatcher;\n        return add(state, \"(?:\" + globstarSegment + \")*?\");\n    }\n    while (++state.i <= segment.end) {\n        state.char = state.segment.source[state.i];\n        state.nextChar = state.i < segment.end ? segment.source[state.i + 1] : '';\n        if (state.char === '\\\\') {\n            if (state.i < state.segment.end) {\n                state.escapeChar = true;\n                continue;\n            }\n            else {\n                state.char = '';\n            }\n        }\n        var pattern = state.pattern, segment = state.segment, char = state.char, i = state.i;\n        if (pattern.support.brackets && !state.scanningForParens) {\n            if (i > state.openingBracket && i <= state.closingBracket) {\n                if (state.escapeChar) {\n                    add(state, escapeRegExpChar(char));\n                }\n                else if (i === state.closingBracket) {\n                    add(state, ']');\n                    state.openingBracket = segment.source.length;\n                }\n                else if (char === '-' && i === state.closingBracket - 1) {\n                    add(state, '\\\\-');\n                }\n                else if (char === '!' && i === state.openingBracket + 1) {\n                    add(state, '^');\n                }\n                else if (char === ']') {\n                    add(state, '\\\\]');\n                }\n                else {\n                    add(state, char);\n                }\n                state.escapeChar = false;\n                continue;\n            }\n            if (i > state.openingBracket) {\n                if (char === ']' &&\n                    !state.escapeChar &&\n                    i > state.openingBracket + 1 &&\n                    i > state.closingBracket) {\n                    state.closingBracket = i;\n                    state.i = state.openingBracket;\n                    if (pattern.separator) {\n                        add(state, \"(?!\" + pattern.separatorMatcher + \")[\", true);\n                    }\n                    else {\n                        add(state, '[', true);\n                    }\n                }\n                else if (i === segment.end) {\n                    add(state, '\\\\[');\n                    state.i = state.openingBracket;\n                    state.openingBracket = segment.source.length;\n                    state.closingBracket = segment.source.length;\n                }\n                state.escapeChar = false;\n                continue;\n            }\n            if (char === '[' &&\n                !state.escapeChar &&\n                i > state.closingBracket &&\n                i < segment.end) {\n                state.openingBracket = i;\n                state.escapeChar = false;\n                continue;\n            }\n        }\n        if (state.pattern.support.extglobs) {\n            var extglobModifiers = state.extglobModifiers, char = state.char, nextChar = state.nextChar, i = state.i;\n            if (nextChar === '(' &&\n                !state.escapeChar &&\n                (char === '@' || char === '?' || char === '*' || char === '+' || char === '!')) {\n                if (state.scanningForParens) {\n                    state.openingParens++;\n                }\n                else if (i > state.parensHandledUntil && !state.closingParens) {\n                    state.parensHandledUntil = i;\n                    state.scanningForParens = true;\n                    state.openingParens++;\n                }\n                else if (state.closingParens >= state.openingParens) {\n                    if (char === '!') {\n                        state.addToMatch = true;\n                        state.addToUnmatch = false;\n                        add(state, state.pattern.wildcard + \"*?\", true);\n                        state.addToMatch = false;\n                        state.addToUnmatch = true;\n                        state.result.useUnmatch = true;\n                    }\n                    extglobModifiers.push(char);\n                    add(state, '(?:', true);\n                    state.openingParens--;\n                    state.i++;\n                    continue;\n                }\n                else {\n                    state.openingParens--;\n                }\n            }\n            else if (char === ')' && !state.escapeChar) {\n                if (state.scanningForParens) {\n                    state.closingParens++;\n                }\n                else if (extglobModifiers.length) {\n                    var modifier_1 = extglobModifiers.pop();\n                    if (modifier_1 === '!' && extglobModifiers.indexOf('!') !== -1) {\n                        throw new Error(\"Nested negated extglobs aren't supported\");\n                    }\n                    modifier_1 = modifier_1 === '!' || modifier_1 === '@' ? '' : modifier_1;\n                    add(state, \")\" + modifier_1);\n                    state.addToMatch = true;\n                    state.addToUnmatch = true;\n                    state.closingParens--;\n                    continue;\n                }\n            }\n            else if (char === '|' && state.closingParens &&\n                !state.scanningForParens &&\n                !state.escapeChar) {\n                add(state, '|');\n                continue;\n            }\n            if (state.scanningForParens) {\n                if (state.closingParens === state.openingParens || i === state.segment.end) {\n                    state.scanningForParens = false;\n                    state.i = state.parensHandledUntil - 1;\n                }\n                state.escapeChar = false;\n                continue;\n            }\n        }\n        var pattern = state.pattern;\n        var support = pattern.support;\n        if (!state.escapeChar && support.star && state.char === '*') {\n            if (state.i === state.segment.end || state.nextChar !== '*') {\n                add(state, pattern.wildcard + \"*?\", true);\n            }\n        }\n        else if (!state.escapeChar && support.qMark && state.char === '?') {\n            add(state, pattern.wildcard, true);\n        }\n        else {\n            add(state, escapeRegExpChar(state.char));\n        }\n        state.escapeChar = false;\n    }\n    return add(state, separatorMatcher);\n}\nfunction convert(source, options, excludeDot) {\n    var pattern = Pattern(source, options, excludeDot);\n    var result = Result();\n    var segments = pattern.segments;\n    for (var i = 0; i < segments.length; i++) {\n        var segment = Segment(segments[i], pattern, i === 0, i === segments.length - 1);\n        convertSegment(pattern, segment, result);\n    }\n    if (result.useUnmatch) {\n        return \"(?!^\" + result.unmatch + \"$)\" + result.match;\n    }\n    else {\n        return result.match;\n    }\n}\n\nfunction flatMap(array, predicate) {\n    var results = [];\n    for (var i = 0; i < array.length; i++) {\n        var mappedValue = predicate(array[i]);\n        for (var j = 0; j < mappedValue.length; j++) {\n            results.push(mappedValue[j]);\n        }\n    }\n    return results;\n}\nfunction compile(patterns, options) {\n    patterns = Array.isArray(patterns) ? patterns : [patterns];\n    if (options['{}'] !== false) {\n        patterns = flatMap(patterns, expand);\n    }\n    var positiveResults = [];\n    var negativeResults = [];\n    var result = '';\n    for (var i = 0; i < patterns.length; i++) {\n        var negatedPattern = negate(patterns[i], options);\n        var convertedPattern = convert(negatedPattern.pattern, options, !negatedPattern.isNegated);\n        if (negatedPattern.isNegated) {\n            negativeResults.push(convertedPattern);\n        }\n        else {\n            positiveResults.push(convertedPattern);\n        }\n    }\n    if (negativeResults.length) {\n        result = \"(?!(?:\" + negativeResults.join('|') + \")$)\";\n    }\n    if (positiveResults.length > 1) {\n        result += \"(?:\" + positiveResults.join('|') + \")\";\n    }\n    else if (positiveResults.length === 1) {\n        result += positiveResults[0];\n    }\n    else if (result.length) {\n        result += convert('**', options, true);\n    }\n    return \"^\" + result + \"$\";\n}\nfunction isMatch(regexp, sample) { if (typeof sample !== 'string') {\n    throw new TypeError(\"Sample must be a string, but \" + typeof sample + \" given\");\n} return regexp.test(sample); }\n/**\n * Compiles one or more glob patterns into a RegExp and returns an isMatch function.\n * The isMatch function takes a sample string as its only argument and returns true\n * if the string matches the pattern(s).\n *\n * ```js\n * outmatch('src/*.js')('src/index.js') //=> true\n * ```\n *\n * ```js\n * const isMatch = outmatch('*.example.com', '.')\n * isMatch('foo.example.com') //=> true\n * isMatch('foo.bar.com') //=> false\n * ```\n */\nfunction outmatch(pattern, options) {\n    if (typeof pattern !== 'string' && !Array.isArray(pattern)) {\n        throw new TypeError(\"The first argument must be a single pattern string or an array of patterns, but \" + typeof pattern + \" given\");\n    }\n    if (typeof options === 'string' || typeof options === 'boolean') {\n        options = { separator: options };\n    }\n    if (arguments.length === 2 &&\n        !(typeof options === 'undefined' ||\n            (typeof options === 'object' && options !== null && !Array.isArray(options)))) {\n        throw new TypeError(\"The second argument must be an options object or a string/boolean separator, but \" + typeof options + \" given\");\n    }\n    options = options || {};\n    if (options.separator === '\\\\') {\n        throw new Error('\\\\ is not a valid separator');\n    }\n    var regexpPattern = compile(pattern, options);\n    var regexp = new RegExp(regexpPattern, options.flags);\n    var fn = isMatch.bind(null, regexp);\n    fn.options = options;\n    fn.pattern = pattern;\n    fn.regexp = regexp;\n    return fn;\n}\n\nexport { outmatch as default };\n//# sourceMappingURL=index.es.mjs.map\n","import outmatch from 'outmatch'\nimport Settings from './settings/index.js'\nimport { typeOf, propertyDirectory } from '../../coutil/index.js'\nexport default class EventDefinition {\n  #settings\n  #context\n  #listener\n  #enable = false\n  #path\n  #assigned = []\n  #deassigned = []\n  #transsigned = []\n  #nontranssigned = []\n  #_targets = []\n  #_assign\n  #_deassign\n  #_transsign\n  constructor($settings, $context) { \n    if(!$settings || !$context) { return this }\n    this.#settings = Settings($settings)\n    this.#context = $context\n    this.enable = this.settings.enable\n  }\n  get settings() { return this.#settings }\n  get path() { return this.settings.path }\n  get type() { return this.settings.type }\n  get listener() {\n    if(this.#listener !== undefined) { return this.#listener }\n    const listener = this.settings.listener\n    if(this.settings.bindListener === true) {\n      this.#listener = listener.bind(this.#context)\n    }\n    else { this.#listener = listener }\n    return this.#listener\n  }\n  get enable() { return this.#enable }\n  set enable($enable) {\n    const targets = this.#targets\n    const assigned = this.#assigned\n    const deassigned = this.#deassigned\n    assigned.length = 0\n    deassigned.length = 0\n    iterateTargetElements: \n    for(const $targetElement of targets) {\n      const { path, target, enable } = $targetElement\n      const settings = this.settings\n      if(enable === $enable) { continue iterateTargetElements }\n      if($enable === true) {\n        try {\n          this.#assign(target)\n          $targetElement.enable = $enable\n          assigned.push($targetElement)\n          \n        }\n        catch($err) { console.error($err) }\n      }\n      else if($enable === false) {\n        try {\n          this.#deassign(target)\n          $targetElement.enable = $enable\n          deassigned.push($targetElement)\n        }\n        catch($err) { console.error($err) }\n      }\n    }\n    this.#enable = $enable\n  }\n  get assigned() { return this.#assigned }\n  get deassigned() { return this.#deassigned }\n  get #target() { return this.settings.target }\n  get #targets() {\n    const pretargets = this.#_targets\n    const targets = []\n    if(this.#target) {\n      for(const $target of [].concat(this.#target)) {\n        const pretargetElement = pretargets.find(\n          ($pretarget) => $pretarget?.path === this.path\n        )\n        if(pretargetElement !== undefined) {\n          targets.push(pretargetElement)\n        }\n        else if(pretargetElement === undefined) {\n          targets.push({\n            path: this.path,\n            target: $target,\n            enable: false,\n          })\n        }\n      }\n    }\n    else if(typeOf(this.path) === 'string') {\n      const targetPaths = []\n      if(this.path === this.#scopeKey) {\n        const targetElement = {\n          path: this.path,\n          target: this.#context,\n          enable: false,\n        }\n        targets.push(targetElement)\n      }\n      else {\n        if(this.settings.propertyDirectory) {\n          const propertyDirectory = this.#propertyDirectory\n          const propertyPathMatcher = outmatch(this.path, {\n            separator: '.',\n          })\n          iteratePropertyPaths: \n          for(const $propertyPath of propertyDirectory) {\n            const propertyPathMatch = propertyPathMatcher($propertyPath)\n            if(propertyPathMatch === true) { targetPaths.push($propertyPath) }\n          }\n          if(this.path.charAt(0) === '*') {\n            targetPaths.unshift(this.#scopeKey)\n          }\n        }\n        else {\n          targetPaths.push(this.path)\n        }\n        iterateTargetPaths: \n        for(const $targetPath of targetPaths) {\n          const pretargetElement = pretargets.find(\n            ($pretarget) => $pretarget.path === $targetPath\n          )\n          let target = this.#context\n          let targetElement\n          const pathKeys = $targetPath.split('.')\n          let pathKeysIndex = 0\n          iterateTargetPathKeys: \n          while(pathKeysIndex < pathKeys.length) {\n            let pathKey = pathKeys[pathKeysIndex]\n            if(pathKey === this.#scopeKey) { break iterateTargetPathKeys }\n            iterateTargetAccessors: \n            for(const $targetAccessor of this.settings.accessors) {\n              target = $targetAccessor(target, pathKey)\n              if(target !== undefined) { break iterateTargetAccessors }\n            }\n            pathKeysIndex++\n          }\n          if(target !== undefined) {\n            if(target === pretargetElement?.target) {\n              targetElement = pretargetElement\n            }\n            else if(typeof target === 'object') {\n              targetElement = {\n                path: $targetPath,\n                target: target,\n                enable: false,\n              }\n            }\n          }\n          if(targetElement !== undefined) { targets.push(targetElement) }\n        }\n      }\n    }\n    this.#_targets = targets\n    return this.#_targets\n  }\n  get #scopeKey() { return this.settings.scopeKey }\n  get #assign() {\n    if(this.#_assign !== undefined) { return this.#_assign }\n    this.#_assign = this.settings.methods.assign[this.settings.assign].bind(null, this)\n    return this.#_assign\n  }\n  get #deassign() {\n    if(this.#_deassign !== undefined) { return this.#_deassign }\n    this.#_deassign = this.settings.methods.deassign[this.settings.deassign].bind(null, this)\n    return this.#_deassign\n  }\n  get #transsign() {\n    if(this.#_transsign !== undefined) { return this.#_transsign }\n    this.#_transsign = this.settings.methods.transsign[this.settings.transsign].bind(null, this)\n    return this.#_transsign\n  }\n  get #methods() { return this.settings.methods }\n  get #propertyDirectory() {\n    if(!this.settings.propertyDirectory) { return null }\n    const propertyDirectorySettings = ({\n      accessors: this.settings.accessors\n    }, this.settings.propertyDirectory)\n    return propertyDirectory(this.#context, propertyDirectorySettings)\n  }\n  emit() {\n    const targets = this.#targets\n    const transsigned = this.#transsigned\n    const nontranssigned = this.#nontranssigned\n    transsigned.length = 0\n    nontranssigned.length = 0\n    iterateTargetElements: \n    for(const $targetElement of targets) {\n      const { target } = $targetElement\n      try {\n        this.#transsign(target, ...arguments)\n        transsigned.push($targetElement)\n      }\n      catch($err) { nontranssigned.push($targetElement) }\n    }\n    return this\n  }\n}","import { accessors, recursiveAssign, typeOf } from '../../../coutil/index.js'\nexport default ($settings = {}) => {\n  const Settings = {\n    enable: false,\n    accessors: [accessors.default],\n    propertyDirectory: { scopeKey: $settings.scopeKey, maxDepth: 10 },\n    assign: 'addEventListener', deassign: 'removeEventListener', transsign: 'dispatchEvent',\n    bindListener: true,\n    scopeKey: ':scope',\n    methods: {\n      assign: {\n        // Event Target Add Event Listener\n        addEventListener: function addEventListener($eventDefinition, $target) {\n          const { type, listener, settings } = $eventDefinition\n          const { options, useCapture } = settings\n          return $target['addEventListener'](type, listener, options || useCapture)\n        },\n        // Event Emitter On\n        on: function on($eventDefinition, $target) {\n          const { type, listener } = $eventDefinition\n          return $target['on'](type, listener)\n        },\n        // Event Emitter Once\n        once: function once($eventDefinition, $target) {\n          const { type, listener } = $eventDefinition\n          return $target['once'](type, listener)\n        },\n      },  \n      deassign: {\n        // Event Target Remove Event Listener\n        removeEventListener: function removeEventListener($eventDefinition, $target) {\n          const { type, listener, settings } = $eventDefinition\n          const { options, useCapture } = settings\n          return $target['removeEventListener'](type, listener, options || useCapture)\n        },\n        // Event Emitter Off\n        off: function off($eventDefinition, $target) {\n          const { type, listener } = $eventDefinition\n          return $target['off'](type, listener)\n        },\n      },\n      transsign: {\n        // Event Target Dispatch Event\n        dispatchEvent: function dispatchEvent($eventDefinition, $target, $event) {\n          return $target['dispatchEvent']($event)\n        },\n        // Event Emitter Emit\n        emit: function emit($eventDefinition, $target, $type, ...$arguments) {\n          return $target['emit']($type, ...$arguments)\n        },\n      },\n    },\n  }\n  for(const [$settingKey, $settingValue] of Object.entries($settings)) {\n    switch($settingKey) {\n      case 'propertyDirectory':\n        Settings[$settingKey] = Object.assign(Settings[$settingKey], $settingValue)\n        break\n      case 'accessors':\n        Settings[$settingKey] = $settingValue\n        Settings.propertyDirectory[$settingKey] = $settingValue\n        break\n      case 'methods': \n        Settings[$settingKey] = recursiveAssign(Settings[$settingKey], $settingValue)\n        break\n      case 'enableEvents': break\n      default: \n        Settings[$settingKey] = $settingValue\n        break\n    }\n  }\n  return Settings\n}","import { expandEvents, recursiveAssign } from '../coutil/index.js'\nimport Settings from './settings/index.js'\nimport EventDefinition from './event-definition/index.js'\nexport default class Core extends EventTarget {\n  static implement = function ($target, $settings) {\n    if(!$target || !$settings) { return undefined }\n    const settings = Settings($settings)\n    const events = []\n    Object.defineProperties($target, {\n      // Get Events\n      [settings.propertyDefinitions.getEvents]: {\n        enumerable: false, writable: false, \n        value: function getEvents() {\n          if(!arguments[0]) { return events }\n          const getEvents = []\n          const $filterEvents = [].concat(arguments[0])\n          iterateFilterEvents: \n          for(const $filterEvent of $filterEvents) {\n            iterateEvents: \n            for(const $event of events) {\n              let match\n              iterateEventFilterProperties: \n              for(const [\n                $filterEventPropertyKey, $filterEventPropertyValue\n              ] of Object.entries($filterEvent)) {\n                let eventFilterMatch\n                if($filterEventPropertyKey === 'listener') {\n                  eventFilterMatch = (\n                    $event.settings[$filterEventPropertyKey] === $filterEventPropertyValue\n                  )\n                }\n                else {\n                  eventFilterMatch = (\n                    $event[$filterEventPropertyKey] === $filterEventPropertyValue\n                  )\n                }\n                if(match !== false) { match = eventFilterMatch }\n                else { break iterateEventFilterProperties }\n              }\n              if(match === true) { getEvents.push($event) }\n            }\n          }\n          return getEvents\n        }\n      },\n      // Add Events\n      [settings.propertyDefinitions.addEvents]: {\n        enumerable: false, writable: false, \n        value: function addEvents() {\n          if(!arguments.length) { return $target }\n          let $addEvents = expandEvents(arguments[0], settings.scopeKey)\n          iterateAddEvents: \n          for(let $addEvent of $addEvents) {\n            const event = {}\n            for(const $settingKey of [\n              'accessors', 'assign', 'deassign', 'transsign', 'propertyDirectory'\n            ]) {\n              const settingValue = settings[$settingKey]\n              if(settingValue !== undefined) { event[$settingKey] = settingValue }\n            }\n            recursiveAssign(event, $addEvent)\n            const eventDefinition = new EventDefinition(event, $target)\n            events.push(eventDefinition)\n          }\n          return $target\n        },\n      },\n      // Remove Events\n      [settings.propertyDefinitions.removeEvents]: {\n        enumerable: false, writable: false, \n        value: function removeEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0])\n          if($events.length === 0) return $target\n          let eventsIndex = events.length - 1\n          while(eventsIndex > -1) {\n            const event = events[eventsIndex]\n            if($events.includes(event)) {\n              event.enable = false\n              events.splice(eventsIndex, 1)\n            }\n            eventsIndex--\n          }\n          return $target\n        }\n      },\n      // Enable Events\n      [settings.propertyDefinitions.enableEvents]: {\n        enumerable: false, writable: false, \n        value: function enableEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0])\n          if($events.length === 0) return $target\n          iterateEvents: for(const $event of $events) { $event.enable = true }\n          return $target\n        },\n      },\n      // Disable Events\n      [settings.propertyDefinitions.disableEvents]: {\n        enumerable: false, writable: false, \n        value: function disableEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0])\n          if($events.length === 0) return $target\n          iterateEvents: for(const $event of $events) { $event.enable = false }\n          return $target\n        },\n      },\n      // Reenable Events\n      [settings.propertyDefinitions.reenableEvents]: {\n        enumerable: false, writable: false, \n        value: function reenableEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0])\n          for(const $event of $events) {\n            $event.enable = false\n            $event.enable = true\n          }\n          return $target\n        },\n      },\n      // Emit Events\n      [settings.propertyDefinitions.emitEvents]: {\n        enumerable: false, writable: false, \n        value: function emitEvents($filterEvents, ...$eventParameters) {\n          const $events = $target[settings.propertyDefinitions.getEvents]($filterEvents)\n          for(const $event of $events) {\n            $event.emit(...$eventParameters)\n          }\n          return $target\n        },\n      },\n    })\n    if(settings.events) { $target[settings.propertyDefinitions.addEvents](settings.events) }\n    if(settings.enableEvents === true) { $target[settings.propertyDefinitions.enableEvents]() }\n    return $target\n  }\n  constructor($settings = {}) {\n    super()\n    return Core.implement(this, $settings)\n  }\n}","export default ($settings = {}) => {\n  const Settings = {\n    events: {},\n    enableEvents: false,\n    propertyDefinitions: {\n      getEvents: 'getEvents',\n      addEvents: 'addEvents',\n      removeEvents: 'removeEvents',\n      enableEvents: 'enableEvents',\n      disableEvents: 'disableEvents',\n      reenableEvents: 'reenableEvents',\n      emitEvents: 'emitEvents',\n    },\n  }\n  for(const [$settingKey, $settingValue] of Object.entries($settings)) {\n    switch($settingKey) {\n      case 'propertyDefinitions':\n        Settings[$settingKey] = Object.assign(Settings[$settingKey], $settingValue)\n        break\n      default: \n        Settings[$settingKey] = $settingValue\n        break\n    }\n  }\n  return Settings\n}"],"names":["accessors","default","$target","$property","undefined","get","expandEvents","$propEvents","$scopeKey","Array","isArray","propEvents","$propEventSettings","$propEventListener","Object","entries","propEventSettings","trim","split","path","type","listener","options","length","propEvent","enable","push","Options","depth","maxDepth","Accessors","propertyDirectory","$object","$options","_propertyDirectory","assign","$accessor","object","$key","$value","subtarget","$subtarget","join","typeOf","$data","prototype","toString","call","slice","toLowerCase","recursiveAssign","$sources","$source","$sourcePropertyKey","$sourcePropertyValue","typeOfTargetPropertyValue","typeOfSourcePropertyValue","Primitives","string","String","number","Number","boolean","Boolean","bigint","BigInt","null","PrimitiveKeys","keys","PrimitiveValues","values","Objects","array","ObjectKeys","ObjectValues","Types","TypeKeys","TypeValues","TypeMethods","$propEvent","$path","$type","$propertyDefinition","getOwnPropertyDescriptor","variables.TypeValues","includes","variables.TypeKeys","value","recursiveAssignConcat","concat","recursiveFreeze","$propertyKey","$propertyValue","freeze","quotationEscape","_typedObjectLiteral","typeOfValue","handleNoCommaBraces","span","separatorI","i","rangeStart","substr","rangeEnd","expand","pattern","TypeError","scanning","openingBraces","closingBraces","handledUntil","results","alternatives","char","substring","j","newResults","k","l","unhandledFrom","negate","supportNegation","supportParens","isNegated","escapeRegExpChar","Pattern","source","excludeDot","separator","separatorSplitter","separatorMatcher","wildcard","str","result","escapeRegExpString","requiredSeparator","optionalSeparator","segments","support","qMark","star","globstar","brackets","extglobs","Segment","isFirst","isLast","end","EXCLUDE_DOT_PATTERN","add","state","addition","addToUnmatch","unmatch","addToMatch","dotHandled","match","convertSegment","segment","openingBracket","closingBracket","openingParens","closingParens","parensHandledUntil","extglobModifiers","scanningForParens","escapeChar","nextChar","State","modifier_1","pop","indexOf","Error","useUnmatch","convert","isMatch","regexp","sample","test","outmatch","arguments","regexpPattern","patterns","predicate","mappedValue","flatMap","positiveResults","negativeResults","negatedPattern","convertedPattern","compile","RegExp","flags","fn","bind","EventDefinition","settings","context","assigned","deassigned","transsigned","nontranssigned","_targets","_assign","_deassign","_transsign","constructor","$settings","$context","this","Settings","scopeKey","deassign","transsign","bindListener","methods","addEventListener","$eventDefinition","useCapture","on","once","removeEventListener","off","dispatchEvent","$event","emit","$arguments","$settingKey","$settingValue","$enable","targets","$targetElement","target","$err","console","error","pretargets","pretargetElement","find","$pretarget","targetPaths","targetElement","propertyPathMatcher","$propertyPath","charAt","unshift","$targetPath","pathKeys","pathKeysIndex","iterateTargetPathKeys","pathKey","iterateTargetAccessors","$targetAccessor","propertyDirectorySettings","Core","EventTarget","static","events","enableEvents","propertyDefinitions","getEvents","addEvents","removeEvents","disableEvents","reenableEvents","emitEvents","defineProperties","enumerable","writable","$filterEvents","$filterEvent","iterateEventFilterProperties","$filterEventPropertyKey","$filterEventPropertyValue","eventFilterMatch","$addEvents","$addEvent","event","settingValue","eventDefinition","$events","eventsIndex","splice","$eventParameters","super","implement"],"mappings":"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","x_google_ignoreList":[11]}