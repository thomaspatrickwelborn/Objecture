{"version":3,"file":"objecture.min.js","sources":["../../../../Core-Plex/distributement/core-plex.js","../../../development/schema/verification/index.js","../../../development/schema/validator/index.js","../../../development/schema/validators/RequiredValidator/index.js","../../../development/schema/validators/TypeValidator/index.js","../../../development/schema/validators/RangeValidator/index.js","../../../development/schema/validators/LengthValidator/index.js","../../../development/schema/validators/EnumValidator/index.js","../../../development/schema/validators/MatchValidator/index.js","../../../development/schema/context/handler/index.js","../../../development/schema/context/index.js","../../../development/schema/validation/index.js","../../../development/schema/index.js","../../../development/schema/options/index.js","../../../development/content/options/index.js","../../../development/content/events/content/index.js","../../../development/content/change/index.js","../../../development/content/events/validator/index.js","../../../development/content/methods/object/assign/index.js","../../../development/content/methods/object/defineProperties/index.js","../../../development/content/methods/object/defineProperty/index.js","../../../development/content/methods/object/index.js","../../../development/content/methods/object/freeze/index.js","../../../development/content/methods/object/seal/index.js","../../../development/content/methods/array/index.js","../../../development/content/methods/array/concat/index.js","../../../development/content/methods/array/copyWithin/index.js","../../../development/content/methods/array/fill/index.js","../../../development/content/methods/array/pop/index.js","../../../development/content/methods/array/push/index.js","../../../development/content/methods/array/reverse/index.js","../../../development/content/methods/array/shift/index.js","../../../development/content/methods/array/splice/index.js","../../../development/content/methods/array/unshift/index.js","../../../development/content/methods/accessor/getProperty/getContentProperty/index.js","../../../development/content/methods/accessor/getProperty/index.js","../../../development/content/methods/accessor/setProperty/setContentProperty/index.js","../../../development/content/methods/accessor/setProperty/index.js","../../../development/content/methods/accessor/deleteProperty/deleteContentProperty/index.js","../../../development/content/methods/accessor/deleteProperty/index.js","../../../development/content/methods/accessor/index.js","../../../development/content/methods/accessor/getProperty/getContent/index.js","../../../development/content/methods/accessor/setProperty/setContent/index.js","../../../development/content/methods/accessor/deleteProperty/deleteContent/index.js","../../../development/content/methods/index.js","../../../development/content/index.js"],"sourcesContent":["const defaultAccessor = ($target, $property) => {\n  if($property === undefined) { return $target }\n  else { return $target[$property] }\n};\nvar accessors = {\n  default: defaultAccessor,\n};\n\nfunction impandEvents($propEvents) {\n  if(!Array.isArray($propEvents)) { return $propEvents }\n  const propEvents = {};\n  iteratePropEvents: \n  for(const $propEvent of $propEvents) {\n    const { path, type, listener, options } = $propEvent;\n    const propEventSettings = `${$path} ${$type}`;\n    if(options !== undefined) {\n      propEvents[propEventSettings] = [listener, options];\n    }\n    else {\n      propEvents[propEventSettings] = listener;\n    }\n  }\n  return propEvents\n}\n\nfunction expandEvents($propEvents) {\n  if(\n    Array.isArray($propEvents) ||\n    $propEvents === undefined\n  ) { return $propEvents }\n  const propEvents = [];\n  iteratePropEvents:\n  for(const [\n    $propEventSettings, $propEventListener\n  ] of Object.entries($propEvents)) {\n    const propEventSettings = $propEventSettings.split(' ');\n    let path, type, listener, options;\n    if(propEventSettings.length === 1) {\n      path = ':scope';\n      type = propEventSettings[0];\n    }\n    else if(propEventSettings.length > 1) {\n      path = propEventSettings[0];\n      type = propEventSettings[1];\n    }\n    if(Array.isArray($propEventListener)) {\n      listener = $propEventListener[0];\n      options = $propEventListener[1];\n    }\n    else {\n      listener = $propEventListener;\n    }\n    const propEvent = {\n      type,\n      path,\n      listener,\n      enable: false,\n    };\n    propEvents.push(propEvent);\n  }\n  return propEvents\n}\n\nfunction isPropertyDefinition($propertyDefinition) {\n  if(\n    Object.getOwnPropertyDescriptor($propertyDefinition, 'type') &&\n    (\n      TypeValues.includes($propertyDefinition.type) ||\n      TypeKeys.includes($propertyDefinition.type)\n    ) || (\n      typeof $propertyDefinition.type === 'object' &&\n      Object.getOwnPropertyDescriptor($propertyDefinition.type, 'value') &&\n      (\n        TypeValues.includes($propertyDefinition.type.value) ||\n        TypeKeys.includes($propertyDefinition.type.value)\n      )\n    )\n  ) { return true } \n  else { return false }\n}\n\nconst Options = {\n  depth: 0,\n  maxDepth: 10,\n  accessors: [accessors.default],\n};\nfunction propertyDirectory($object, $options) {\n  const _propertyDirectory = [];\n  const options = Object.assign({}, Options, $options);\n  options.depth++;\n  if(options.depth > options.maxDepth) { return _propertyDirectory }\n  iterateAccessors: \n  for(const $accessor of options.accessors) {\n    const object = $accessor($object);\n    if(!object) continue iterateAccessors\n    iterateObjectProperties: \n    for(const [$key, $value] of Object.entries(object)) {\n      _propertyDirectory.push($key);\n      if(\n        typeof $value === 'object' &&\n        $value !== null &&\n        $value !== object\n      ) {\n        const subtarget = propertyDirectory($value, options);\n        for(const $subtarget of subtarget) {\n          let path;\n          if(typeof $subtarget === 'object') {\n            path = [$key, ...$subtarget].join('.');\n          }\n          else {\n            path = [$key, $subtarget].join('.');\n          }\n          _propertyDirectory.push(path);\n        }\n      }\n    }\n  }\n  return _propertyDirectory\n}\n\nconst typeOf = ($data) => Object\n  .prototype\n  .toString\n  .call($data).slice(8, -1).toLowerCase();\n\nfunction recursiveAssign($target, ...$sources) {\n  if(!$target) { return $target}\n  iterateSources: \n  for(const $source of $sources) {\n    if(!$source) continue iterateSources\n    iterateSourceEntries: \n    for(const [\n      $sourcePropertyKey, $sourcePropertyValue\n    ] of Object.entries($source)) {\n      const typeOfTargetPropertyValue = typeOf($target[$sourcePropertyKey]);\n      const typeOfSourcePropertyValue = typeOf($sourcePropertyValue);\n      if(\n        typeOfTargetPropertyValue === 'object' &&\n        typeOfSourcePropertyValue === 'object'\n      ) {\n        $target[$sourcePropertyKey] = recursiveAssign($target[$sourcePropertyKey], $sourcePropertyValue);\n      }\n      else {\n        $target[$sourcePropertyKey] = $sourcePropertyValue;\n      }\n    }\n  }\n  return $target\n}\n\nfunction recursiveAssignConcat($target, ...$sources) {\n  if(!$target) { return $target}\n  iterateSources: \n  for(const $source of $sources) {\n    if(!$source) continue iterateSources\n    iterateSourceEntries: \n    for(const [\n      $sourcePropertyKey, $sourcePropertyValue\n    ] of Object.entries($source)) {\n      const typeOfTargetPropertyValue = typeOf($target[$sourcePropertyKey]);\n      const typeOfSourcePropertyValue = typeOf($sourcePropertyValue);\n      if( \n        typeOfTargetPropertyValue === 'object' &&\n        typeOfSourcePropertyValue === 'object'\n      ) {\n        $target[$sourcePropertyKey] = recursiveAssignConcat($target[$sourcePropertyKey], $sourcePropertyValue);\n      }\n      else if(\n        typeOfTargetPropertyValue === 'array' &&\n        typeOfSourcePropertyValue === 'array'\n      ) {\n        $target[$sourcePropertyKey] = $target[$sourcePropertyKey].concat($sourcePropertyValue);\n      }\n      else {\n        $target[$sourcePropertyKey] = $sourcePropertyValue;\n      }\n    }\n  }\n  return $target\n}\n\nvar index$2 = {\n  quotationEscape: /\\.(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/,\n};\n\nfunction recursiveFreeze($target) {\n  for(const [$propertyKey, $propertyValue] of Object.entries($target)) {\n    if($propertyValue && typeof $propertyValue === 'object') {\n      recursiveFreeze($propertyValue);\n    }\n  }\n  return Object.freeze($target)\n}\n\nfunction typedObjectLiteral($object) {\n  if(typeOf($object) === 'object') { return {} }\n  else if(typeOf($object) === 'array') { return [] }\n  else if(typeOf($object) === 'string') { return (\n    $object === 'object'\n  ) ? {} : (\n    $object === 'array'\n  ) ? []\n    : undefined\n  }\n  else { return undefined }\n}\n\nconst Primitives = {\n  'string': String, \n  'number': Number, \n  'boolean': Boolean, \n  'bigint': BigInt, \n  'undefined': undefined,\n  'null': null,\n};\nconst PrimitiveKeys = Object.keys(Primitives);\nconst PrimitiveValues = Object.values(Primitives);\nconst Objects = {\n  'object': Object,\n  'array': Array,\n};\nconst ObjectKeys = Object.keys(Objects);\nconst ObjectValues = Object.values(Objects);\nconst Types = Object.assign({}, Primitives, Objects);\nconst TypeKeys = Object.keys(Types);\nconst TypeValues = Object.values(Types);\nconst TypeMethods = [\n Primitives.String, Primitives.Number, Primitives.Boolean, \n Objects.Object, Objects.Array\n];\n\nvar index$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ObjectKeys: ObjectKeys,\n  ObjectValues: ObjectValues,\n  Objects: Objects,\n  PrimitiveKeys: PrimitiveKeys,\n  PrimitiveValues: PrimitiveValues,\n  Primitives: Primitives,\n  TypeKeys: TypeKeys,\n  TypeMethods: TypeMethods,\n  TypeValues: TypeValues,\n  Types: Types\n});\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  accessors: accessors,\n  expandEvents: expandEvents,\n  impandEvents: impandEvents,\n  isPropertyDefinition: isPropertyDefinition,\n  propertyDirectory: propertyDirectory,\n  recursiveAssign: recursiveAssign,\n  recursiveAssignConcat: recursiveAssignConcat,\n  recursiveFreeze: recursiveFreeze,\n  regularExpressions: index$2,\n  typeOf: typeOf,\n  typedObjectLiteral: typedObjectLiteral,\n  variables: index$1\n});\n\nvar Settings$1 = ($settings = {}) => {\n  const Settings = {\n    events: {},\n    enableEvents: false,\n    propertyDefinitions: {\n      getEvents: 'getEvents',\n      addEvents: 'addEvents',\n      removeEvents: 'removeEvents',\n      enableEvents: 'enableEvents',\n      disableEvents: 'disableEvents',\n      reenableEvents: 'reenableEvents',\n    },\n  };\n  for(const [$settingKey, $settingValue] of Object.entries($settings)) {\n    switch($settingKey) {\n      case 'propertyDefinitions':\n        Settings[$settingKey] = Object.assign(Settings[$settingKey], $settingValue);\n        break\n      default: \n        Settings[$settingKey] = $settingValue;\n        break\n    }\n  }\n  return Settings\n};\n\nfunction handleNoCommaBraces(span) {\n    if (span.length < 3) {\n        return \"{\" + span + \"}\";\n    }\n    var separatorI = -1;\n    for (var i = 2; i < span.length; i++) {\n        if (span[i] === '.' && span[i - 1] === '.' && (i < 2 || span[i - 2] !== '\\\\')) {\n            if (separatorI > -1) {\n                return \"{\" + span + \"}\";\n            }\n            separatorI = i - 1;\n        }\n    }\n    if (separatorI > -1) {\n        var rangeStart = span.substr(0, separatorI);\n        var rangeEnd = span.substr(separatorI + 2);\n        if (rangeStart.length > 0 && rangeEnd.length > 0) {\n            return \"[\" + span.substr(0, separatorI) + \"-\" + span.substr(separatorI + 2) + \"]\";\n        }\n    }\n    return \"{\" + span + \"}\";\n}\nfunction expand(pattern) {\n    if (typeof pattern !== 'string') {\n        throw new TypeError(\"A pattern must be a string, but \" + typeof pattern + \" given\");\n    }\n    var scanning = false;\n    var openingBraces = 0;\n    var closingBraces = 0;\n    var handledUntil = -1;\n    var results = [''];\n    var alternatives = [];\n    var span;\n    for (var i = 0; i < pattern.length; i++) {\n        var char = pattern[i];\n        if (char === '\\\\') {\n            i++;\n            continue;\n        }\n        if (char === '{') {\n            if (scanning) {\n                openingBraces++;\n            }\n            else if (i > handledUntil && !openingBraces) {\n                span = pattern.substring(handledUntil + 1, i);\n                for (var j = 0; j < results.length; j++) {\n                    results[j] += span;\n                }\n                alternatives = [];\n                handledUntil = i;\n                scanning = true;\n                openingBraces++;\n            }\n            else {\n                openingBraces--;\n            }\n        }\n        else if (char === '}') {\n            if (scanning) {\n                closingBraces++;\n            }\n            else if (closingBraces === 1) {\n                span = pattern.substring(handledUntil + 1, i);\n                if (alternatives.length > 0) {\n                    var newResults = [];\n                    alternatives.push(expand(span));\n                    for (var j = 0; j < results.length; j++) {\n                        for (var k = 0; k < alternatives.length; k++) {\n                            for (var l = 0; l < alternatives[k].length; l++) {\n                                newResults.push(results[j] + alternatives[k][l]);\n                            }\n                        }\n                    }\n                    results = newResults;\n                }\n                else {\n                    span = handleNoCommaBraces(span);\n                    for (var j = 0; j < results.length; j++) {\n                        results[j] += span;\n                    }\n                }\n                handledUntil = i;\n                closingBraces--;\n            }\n            else {\n                closingBraces--;\n            }\n        }\n        else if (!scanning && char === ',' && closingBraces - openingBraces === 1) {\n            span = pattern.substring(handledUntil + 1, i);\n            alternatives.push(expand(span));\n            handledUntil = i;\n        }\n        if (scanning && (closingBraces === openingBraces || i === pattern.length - 1)) {\n            scanning = false;\n            i = handledUntil - 1;\n        }\n    }\n    if (handledUntil === -1) {\n        return [pattern];\n    }\n    var unhandledFrom = pattern[handledUntil] === '{' ? handledUntil : handledUntil + 1;\n    if (unhandledFrom < pattern.length) {\n        span = pattern.substr(unhandledFrom);\n        for (var j = 0; j < results.length; j++) {\n            results[j] += span;\n        }\n    }\n    return results;\n}\n\nfunction negate(pattern, options) {\n    var supportNegation = options['!'] !== false;\n    var supportParens = options['()'] !== false;\n    var isNegated = false;\n    var i;\n    if (supportNegation) {\n        for (i = 0; i < pattern.length && pattern[i] === '!'; i++) {\n            if (supportParens && pattern[i + 1] === '(') {\n                i--;\n                break;\n            }\n            isNegated = !isNegated;\n        }\n        if (i > 0) {\n            pattern = pattern.substr(i);\n        }\n    }\n    return { pattern: pattern, isNegated: isNegated };\n}\n\nfunction escapeRegExpChar(char) { if (char === '-' ||\n    char === '^' ||\n    char === '$' ||\n    char === '+' ||\n    char === '.' ||\n    char === '(' ||\n    char === ')' ||\n    char === '|' ||\n    char === '[' ||\n    char === ']' ||\n    char === '{' ||\n    char === '}' ||\n    char === '*' ||\n    char === '?' ||\n    char === '\\\\') {\n    return \"\\\\\" + char;\n}\nelse {\n    return char;\n} }\nfunction escapeRegExpString(str) {\n    var result = '';\n    for (var i = 0; i < str.length; i++) {\n        result += escapeRegExpChar(str[i]);\n    }\n    return result;\n}\n\nfunction Pattern(source, options, excludeDot) {\n    var separator = typeof options.separator === 'undefined' ? true : options.separator;\n    var separatorSplitter = '';\n    var separatorMatcher = '';\n    var wildcard = '.';\n    if (separator === true) {\n        separatorSplitter = '/';\n        separatorMatcher = '[/\\\\\\\\]';\n        wildcard = '[^/\\\\\\\\]';\n    }\n    else if (separator) {\n        separatorSplitter = separator;\n        separatorMatcher = escapeRegExpString(separatorSplitter);\n        if (separatorMatcher.length > 1) {\n            separatorMatcher = \"(?:\" + separatorMatcher + \")\";\n            wildcard = \"((?!\" + separatorMatcher + \").)\";\n        }\n        else {\n            wildcard = \"[^\" + separatorMatcher + \"]\";\n        }\n    }\n    else {\n        wildcard = '.';\n    }\n    var requiredSeparator = separator ? separatorMatcher + \"+?\" : '';\n    var optionalSeparator = separator ? separatorMatcher + \"*?\" : '';\n    var segments = separator ? source.split(separatorSplitter) : [source];\n    var support = {\n        qMark: options['?'] !== false,\n        star: options['*'] !== false,\n        globstar: separator && options['**'] !== false,\n        brackets: options['[]'] !== false,\n        extglobs: options['()'] !== false,\n        excludeDot: excludeDot && options.excludeDot !== false,\n    };\n    return {\n        source: source,\n        segments: segments,\n        options: options,\n        separator: separator,\n        separatorSplitter: separatorSplitter,\n        separatorMatcher: separatorMatcher,\n        optionalSeparator: optionalSeparator,\n        requiredSeparator: requiredSeparator,\n        wildcard: wildcard,\n        support: support,\n    };\n}\nfunction Segment(source, pattern, isFirst, isLast) { return {\n    source: source,\n    isFirst: isFirst,\n    isLast: isLast,\n    end: source.length - 1,\n}; }\nfunction Result() {\nreturn {\n    match: '',\n    unmatch: '',\n    useUnmatch: false,\n}; }\nfunction State(pattern, segment, result) { return {\n    pattern: pattern,\n    segment: segment,\n    result: result,\n    openingBracket: segment.end + 1,\n    closingBracket: -1,\n    openingParens: 0,\n    closingParens: 0,\n    parensHandledUntil: -1,\n    extglobModifiers: [],\n    scanningForParens: false,\n    escapeChar: false,\n    addToMatch: true,\n    addToUnmatch: pattern.support.extglobs,\n    dotHandled: false,\n    i: -1,\n    char: '',\n    nextChar: '',\n}; }\n\nvar EXCLUDE_DOT_PATTERN = '(?!\\\\.)';\nfunction add(state, addition, excludeDot) {\n    if (state.addToUnmatch) {\n        state.result.unmatch += addition;\n    }\n    if (state.addToMatch) {\n        if (excludeDot && !state.dotHandled) {\n            addition = EXCLUDE_DOT_PATTERN + addition;\n        }\n        state.dotHandled = true;\n        state.result.match += addition;\n    }\n    return state.result;\n}\nfunction convertSegment(pattern, segment, result) {\n    var support = pattern.support;\n    var state = State(pattern, segment, result);\n    var separatorMatcher = segment.isLast\n        ? pattern.optionalSeparator\n        : pattern.requiredSeparator;\n    if (!support.excludeDot) {\n        state.dotHandled = true;\n    }\n    if (segment.end === -1) {\n        return segment.isLast && !segment.isFirst ? result : add(state, separatorMatcher);\n    }\n    if (support.globstar && segment.source === '**') {\n        var prefix = !state.dotHandled ? EXCLUDE_DOT_PATTERN : '';\n        var globstarSegment = prefix + pattern.wildcard + \"*?\" + separatorMatcher;\n        return add(state, \"(?:\" + globstarSegment + \")*?\");\n    }\n    while (++state.i <= segment.end) {\n        state.char = state.segment.source[state.i];\n        state.nextChar = state.i < segment.end ? segment.source[state.i + 1] : '';\n        if (state.char === '\\\\') {\n            if (state.i < state.segment.end) {\n                state.escapeChar = true;\n                continue;\n            }\n            else {\n                state.char = '';\n            }\n        }\n        var pattern = state.pattern, segment = state.segment, char = state.char, i = state.i;\n        if (pattern.support.brackets && !state.scanningForParens) {\n            if (i > state.openingBracket && i <= state.closingBracket) {\n                if (state.escapeChar) {\n                    add(state, escapeRegExpChar(char));\n                }\n                else if (i === state.closingBracket) {\n                    add(state, ']');\n                    state.openingBracket = segment.source.length;\n                }\n                else if (char === '-' && i === state.closingBracket - 1) {\n                    add(state, '\\\\-');\n                }\n                else if (char === '!' && i === state.openingBracket + 1) {\n                    add(state, '^');\n                }\n                else if (char === ']') {\n                    add(state, '\\\\]');\n                }\n                else {\n                    add(state, char);\n                }\n                state.escapeChar = false;\n                continue;\n            }\n            if (i > state.openingBracket) {\n                if (char === ']' &&\n                    !state.escapeChar &&\n                    i > state.openingBracket + 1 &&\n                    i > state.closingBracket) {\n                    state.closingBracket = i;\n                    state.i = state.openingBracket;\n                    if (pattern.separator) {\n                        add(state, \"(?!\" + pattern.separatorMatcher + \")[\", true);\n                    }\n                    else {\n                        add(state, '[', true);\n                    }\n                }\n                else if (i === segment.end) {\n                    add(state, '\\\\[');\n                    state.i = state.openingBracket;\n                    state.openingBracket = segment.source.length;\n                    state.closingBracket = segment.source.length;\n                }\n                state.escapeChar = false;\n                continue;\n            }\n            if (char === '[' &&\n                !state.escapeChar &&\n                i > state.closingBracket &&\n                i < segment.end) {\n                state.openingBracket = i;\n                state.escapeChar = false;\n                continue;\n            }\n        }\n        if (state.pattern.support.extglobs) {\n            var extglobModifiers = state.extglobModifiers, char = state.char, nextChar = state.nextChar, i = state.i;\n            if (nextChar === '(' &&\n                !state.escapeChar &&\n                (char === '@' || char === '?' || char === '*' || char === '+' || char === '!')) {\n                if (state.scanningForParens) {\n                    state.openingParens++;\n                }\n                else if (i > state.parensHandledUntil && !state.closingParens) {\n                    state.parensHandledUntil = i;\n                    state.scanningForParens = true;\n                    state.openingParens++;\n                }\n                else if (state.closingParens >= state.openingParens) {\n                    if (char === '!') {\n                        state.addToMatch = true;\n                        state.addToUnmatch = false;\n                        add(state, state.pattern.wildcard + \"*?\", true);\n                        state.addToMatch = false;\n                        state.addToUnmatch = true;\n                        state.result.useUnmatch = true;\n                    }\n                    extglobModifiers.push(char);\n                    add(state, '(?:', true);\n                    state.openingParens--;\n                    state.i++;\n                    continue;\n                }\n                else {\n                    state.openingParens--;\n                }\n            }\n            else if (char === ')' && !state.escapeChar) {\n                if (state.scanningForParens) {\n                    state.closingParens++;\n                }\n                else if (extglobModifiers.length) {\n                    var modifier_1 = extglobModifiers.pop();\n                    if (modifier_1 === '!' && extglobModifiers.indexOf('!') !== -1) {\n                        throw new Error(\"Nested negated extglobs aren't supported\");\n                    }\n                    modifier_1 = modifier_1 === '!' || modifier_1 === '@' ? '' : modifier_1;\n                    add(state, \")\" + modifier_1);\n                    state.addToMatch = true;\n                    state.addToUnmatch = true;\n                    state.closingParens--;\n                    continue;\n                }\n            }\n            else if (char === '|' && state.closingParens &&\n                !state.scanningForParens &&\n                !state.escapeChar) {\n                add(state, '|');\n                continue;\n            }\n            if (state.scanningForParens) {\n                if (state.closingParens === state.openingParens || i === state.segment.end) {\n                    state.scanningForParens = false;\n                    state.i = state.parensHandledUntil - 1;\n                }\n                state.escapeChar = false;\n                continue;\n            }\n        }\n        var pattern = state.pattern;\n        var support = pattern.support;\n        if (!state.escapeChar && support.star && state.char === '*') {\n            if (state.i === state.segment.end || state.nextChar !== '*') {\n                add(state, pattern.wildcard + \"*?\", true);\n            }\n        }\n        else if (!state.escapeChar && support.qMark && state.char === '?') {\n            add(state, pattern.wildcard, true);\n        }\n        else {\n            add(state, escapeRegExpChar(state.char));\n        }\n        state.escapeChar = false;\n    }\n    return add(state, separatorMatcher);\n}\nfunction convert(source, options, excludeDot) {\n    var pattern = Pattern(source, options, excludeDot);\n    var result = Result();\n    var segments = pattern.segments;\n    for (var i = 0; i < segments.length; i++) {\n        var segment = Segment(segments[i], pattern, i === 0, i === segments.length - 1);\n        convertSegment(pattern, segment, result);\n    }\n    if (result.useUnmatch) {\n        return \"(?!^\" + result.unmatch + \"$)\" + result.match;\n    }\n    else {\n        return result.match;\n    }\n}\n\nfunction flatMap(array, predicate) {\n    var results = [];\n    for (var i = 0; i < array.length; i++) {\n        var mappedValue = predicate(array[i]);\n        for (var j = 0; j < mappedValue.length; j++) {\n            results.push(mappedValue[j]);\n        }\n    }\n    return results;\n}\nfunction compile(patterns, options) {\n    patterns = Array.isArray(patterns) ? patterns : [patterns];\n    if (options['{}'] !== false) {\n        patterns = flatMap(patterns, expand);\n    }\n    var positiveResults = [];\n    var negativeResults = [];\n    var result = '';\n    for (var i = 0; i < patterns.length; i++) {\n        var negatedPattern = negate(patterns[i], options);\n        var convertedPattern = convert(negatedPattern.pattern, options, !negatedPattern.isNegated);\n        if (negatedPattern.isNegated) {\n            negativeResults.push(convertedPattern);\n        }\n        else {\n            positiveResults.push(convertedPattern);\n        }\n    }\n    if (negativeResults.length) {\n        result = \"(?!(?:\" + negativeResults.join('|') + \")$)\";\n    }\n    if (positiveResults.length > 1) {\n        result += \"(?:\" + positiveResults.join('|') + \")\";\n    }\n    else if (positiveResults.length === 1) {\n        result += positiveResults[0];\n    }\n    else if (result.length) {\n        result += convert('**', options, true);\n    }\n    return \"^\" + result + \"$\";\n}\nfunction isMatch(regexp, sample) { if (typeof sample !== 'string') {\n    throw new TypeError(\"Sample must be a string, but \" + typeof sample + \" given\");\n} return regexp.test(sample); }\n/**\n * Compiles one or more glob patterns into a RegExp and returns an isMatch function.\n * The isMatch function takes a sample string as its only argument and returns true\n * if the string matches the pattern(s).\n *\n * ```js\n * outmatch('src/*.js')('src/index.js') //=> true\n * ```\n *\n * ```js\n * const isMatch = outmatch('*.example.com', '.')\n * isMatch('foo.example.com') //=> true\n * isMatch('foo.bar.com') //=> false\n * ```\n */\nfunction outmatch(pattern, options) {\n    if (typeof pattern !== 'string' && !Array.isArray(pattern)) {\n        throw new TypeError(\"The first argument must be a single pattern string or an array of patterns, but \" + typeof pattern + \" given\");\n    }\n    if (typeof options === 'string' || typeof options === 'boolean') {\n        options = { separator: options };\n    }\n    if (arguments.length === 2 &&\n        !(typeof options === 'undefined' ||\n            (typeof options === 'object' && options !== null && !Array.isArray(options)))) {\n        throw new TypeError(\"The second argument must be an options object or a string/boolean separator, but \" + typeof options + \" given\");\n    }\n    options = options || {};\n    if (options.separator === '\\\\') {\n        throw new Error('\\\\ is not a valid separator');\n    }\n    var regexpPattern = compile(pattern, options);\n    var regexp = new RegExp(regexpPattern, options.flags);\n    var fn = isMatch.bind(null, regexp);\n    fn.options = options;\n    fn.pattern = pattern;\n    fn.regexp = regexp;\n    return fn;\n}\n\nvar Settings = ($settings = {}) => {\n  const Settings = {\n    enable: false,\n    accessors: [accessors.default],\n    propertyDirectory: { maxDepth: 10 },\n    assign: 'addEventListener', deassign: 'removeEventListener', transsign: 'dispatchEvent',\n    bindListener: true,\n    methods: {\n      assign: {\n        // Event Target Add Event Listener\n        addEventListener: function addEventListener($eventDefinition, $target) {\n          const { type, listener, settings } = $eventDefinition;\n          const { options, useCapture } = settings;\n          return $target['addEventListener'](type, listener, options || useCapture)\n        },\n        // Event Emitter On\n        on: function on($eventDefinition, $target) {\n          const { type, listener } = $eventDefinition;\n          return $target['on'](type, listener)\n        },\n        // Event Emitter Once\n        once: function once($eventDefinition, $target) {\n          const { type, listener } = $eventDefinition;\n          return $target['once'](type, listener)\n        },\n      },  \n      deassign: {\n        // Event Target Remove Event Listener\n        removeEventListener: function removeEventListener($eventDefinition, $target) {\n          const { type, listener, settings } = $eventDefinition;\n          const { options, useCapture } = settings;\n          return $target['removeEventListener'](type, listener, options || useCapture)\n        },\n        // Event Emitter Off\n        off: function off($eventDefinition, $target) {\n          const { type, listener } = $eventDefinition;\n          return $target['off'](type, listener)\n        },\n      },\n      transsign: {\n        // Event Target Dispatch Event\n        dispatchEvent: function dispatchEvent($eventDefinition, $target, $event) {\n          return $target['dispatchEvent']($event)\n        },\n        // Event Emitter Emit\n        emit: function emit($eventDefinition, $target, $type, ...$arguments) {\n          return $target['emit']($type, ...$arguments)\n        },\n      },\n    },\n  };\n  for(const [$settingKey, $settingValue] of Object.entries($settings)) {\n    switch($settingKey) {\n      case 'propertyDirectory':\n        Settings[$settingKey] = Object.assign(Settings[$settingKey], $settingValue);\n        break\n      case 'accessors':\n        Settings[$settingKey] = $settingValue;\n        Settings.propertyDirectory[$settingKey] = $settingValue;\n        break\n      case 'methods': \n        Settings[$settingKey] = recursiveAssign(Settings[$settingKey], $settingValue);\n        break\n      case 'enableEvents': break\n      default: \n        Settings[$settingKey] = $settingValue;\n        break\n    }\n  }\n  return Settings\n};\n\nclass EventDefinition {\n  #settings\n  #context\n  #listener\n  #enable = false\n  #path\n  #enabled = []\n  #disabled = []\n  #_targets = []\n  #_assign\n  #_deassign\n  #_transsign\n  constructor($settings, $context) { \n    if(!$settings || !$context) { return this }\n    this.#settings = Settings($settings);\n    this.#context = $context;\n    this.enable = this.settings.enable;\n  }\n  get settings() { return this.#settings }\n  get path() { return this.settings.path }\n  get type() { return this.settings.type }\n  get listener() {\n    if(this.#listener !== undefined) { return this.#listener }\n    const listener = this.settings.listener;\n    if(this.settings.bindListener === true) {\n      this.#listener = listener.bind(this.#context);\n    }\n    else { this.#listener = listener; }\n    return this.#listener\n  }\n  get enable() { return this.#enable }\n  set enable($enable) {\n    if(![true, false].includes($enable)) { return }\n    const targets = this.#targets;\n    const enabled = this.#enabled;\n    const disabled = this.#disabled;\n    enabled.length = 0;\n    disabled.length = 0;\n    iterateTargetElements: \n    for(const $targetElement of targets) {\n      const { path, target, enable } = $targetElement;\n      const settings = this.settings;\n      if(enable === $enable) { continue iterateTargetElements }\n      if($enable === true) {\n        try {\n          this.#assign(target);\n          $targetElement.enable = $enable;\n          enabled.push($targetElement);\n        }\n        catch($err) {\n          throw $err\n          disabled.push($targetElement);\n        }\n      }\n      else if($enable === false) {\n        try {\n          this.#deassign(target);\n          $targetElement.enable = $enable;\n          disabled.push($targetElement);\n        }\n        catch($err) { enabled.push($targetElement); }\n      }\n    }\n    this.#enable = $enable;\n  }\n  get enabled() { return this.#enabled }\n  get disabled() { return this.#disabled }\n  get #target() { return this.settings.target }\n  get #targets() {\n    const pretargets = this.#_targets;\n    let propertyDirectory = this.#propertyDirectory;\n    const targetPaths = [];\n    const targets = [];\n    if(this.path === ':scope') {\n      const pretargetElement = pretargets.find(\n        ($pretarget) => $pretarget?.path === this.path\n      );\n      if(pretargetElement !== undefined) {\n        targets.push(pretargetElement);\n      }\n      else if(pretargetElement === undefined) {\n        targets.push({\n          path: this.path,\n          target: this.#context,\n          enable: false,\n        });\n      }\n    }\n    else if(this.#target !== undefined) {\n      for(const $target of [].concat(this.#target)) {\n        const pretargetElement = pretargets.find(\n          ($pretarget) => $pretarget?.path === this.path\n        );\n        if(pretargetElement !== undefined) {\n          targets.push(pretargetElement);\n        }\n        else if(pretargetElement === undefined) {\n          targets.push({\n            path: this.path,\n            target: $target,\n            enable: false,\n          });\n        }\n      }\n    }\n    else if(typeOf(this.path) === 'string') {\n      const propertyPathMatcher = outmatch(this.path, {\n        separator: '.',\n      });\n      iteratePropertyPaths: \n      for(const $propertyPath of propertyDirectory) {\n        const propertyPathMatch = propertyPathMatcher($propertyPath);\n        if(propertyPathMatch === true) { targetPaths.push($propertyPath); }\n      }\n      iterateTargetPaths: \n      for(const $targetPath of targetPaths) {\n        const pretargetElement = pretargets.find(\n          ($pretarget) => $pretarget.path === $targetPath\n        );\n        let target = this.#context;\n        let targetElement;\n        const pathKeys = $targetPath.split('.');\n        let pathKeysIndex = 0;\n        iterateTargetPathKeys: \n        while(pathKeysIndex < pathKeys.length) {\n          let pathKey = pathKeys[pathKeysIndex];\n          iterateTargetAccessors: \n          for(const $targetAccessor of this.settings.accessors) {\n            if(target === undefined) { break iterateTargetAccessors }\n            target = $targetAccessor(target, pathKey);\n            if(target !== undefined) { break iterateTargetAccessors }\n          }\n          pathKeysIndex++;\n        }\n        if(target !== undefined) {\n          if(target === pretargetElement?.target) {\n            targetElement = pretargetElement;\n          }\n          else {\n            targetElement = {\n              path: $targetPath,\n              target: target,\n              enable: false,\n            };\n          }\n        }\n        if(targetElement !== undefined) { targets.push(targetElement); }\n      }\n    }\n    this.#_targets = targets;\n    return this.#_targets\n  }\n  get #assign() {\n    if(this.#_assign !== undefined) { return this.#_assign }\n    this.#_assign = this.settings.methods.assign[this.settings.assign].bind(null, this);\n    return this.#_assign\n  }\n  get #deassign() {\n    if(this.#_deassign !== undefined) { return this.#_deassign }\n    this.#_deassign = this.settings.methods.deassign[this.settings.deassign].bind(null, this);\n    return this.#_deassign\n  }\n  get #transsign() {\n    if(this.#_transsign !== undefined) { return this.#_transsign }\n    this.#_transsign = this.settings.methods.transsign[this.settings.transsign].bind(null, this);\n    return this.#_transsign\n  }\n  get #methods() { return this.settings.methods }\n  get #propertyDirectory() {\n    const propertyDirectorySettings = ({\n      accessors: this.settings.accessors\n    }, this.settings.propertyDirectory);\n    return propertyDirectory(this.#context, propertyDirectorySettings)\n  }\n  emit() {\n    const targets = this.#targets;\n    iterateTargetElements: \n    for(const $targetElement of targets) {\n      const { target } = $targetElement;\n      this.#transsign(target, ...arguments);\n    }\n    return this\n  }\n}\n\nclass Core extends EventTarget {\n  static implement = function ($target, $settings) {\n    if(!$target || !$settings) { return undefined }\n    const settings = Settings$1($settings);\n    const events = [];\n    Object.defineProperties($target, {\n      // Get Events\n      [settings.propertyDefinitions.getEvents]: {\n        enumerable: false, writable: false, \n        value: function getEvents() {\n          if(arguments[1] === undefined) { return events }\n          const getEvents = [];\n          const $filterEvents = [].concat(arguments[0]);\n          iterateFilterEvents: \n          for(const $filterEvent of $filterEvents) {\n            iterateEvents: \n            for(const $event of events) {\n              let match;\n              iterateEventFilterProperties: \n              for(const [\n                $filterEventPropertyKey, $filterEventPropertyValue\n              ] of Object.entries($filterEvent)) {\n                let eventFilterMatch;\n                if($filterEventPropertyKey === 'listener') {\n                  eventFilterMatch = (\n                    $event.settings[$filterEventPropertyKey] === $filterEventPropertyValue\n                  );\n                }\n                else {\n                  eventFilterMatch = (\n                    $event[$filterEventPropertyKey] === $filterEventPropertyValue\n                  );\n                }\n                if(match !== false) { match = eventFilterMatch; }\n                else { break iterateEventFilterProperties }\n              }\n              if(match === true) { getEvents.push($event); }\n            }\n          }\n          return getEvents\n        }\n      },\n      // Add Events\n      [settings.propertyDefinitions.addEvents]: {\n        enumerable: false, writable: false, \n        value: function addEvents() {\n          if(!arguments.length) { return $target }\n          let $addEvents = expandEvents(arguments[0]);\n          iterateAddEvents: \n          for(let $addEvent of $addEvents) {\n            const event = {};\n            for(const $settingKey of [\n              'accessors', 'assign', 'deassign', 'transsign', 'propertyDirectory'\n            ]) {\n              const settingValue = settings[$settingKey];\n              if(settingValue !== undefined) { event[$settingKey] = settingValue; }\n            }\n            recursiveAssign(event, $addEvent);\n            const eventDefinition = new EventDefinition(event, $target);\n            events.push(eventDefinition);\n          }\n          return $target\n        },\n      },\n      // Remove Events\n      [settings.propertyDefinitions.removeEvents]: {\n        enumerable: false, writable: false, \n        value: function removeEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0]);\n          if($events.length === 0) return $target\n          let eventsIndex = events.length - 1;\n          while(eventsIndex > -1) {\n            const event = events[eventsIndex];\n            if($events.includes(event)) {\n              event.enable = false;\n              events.splice(eventsIndex, 1);\n            }\n            eventsIndex--;\n          }\n          return $target\n        }\n      },\n      // Enable Events\n      [settings.propertyDefinitions.enableEvents]: {\n        enumerable: false, writable: false, \n        value: function enableEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0]);\n          if($events.length === 0) return $target\n          iterateEvents: for(const $event of $events) { $event.enable = true; }\n          return $target\n        },\n      },\n      // Disable Events\n      [settings.propertyDefinitions.disableEvents]: {\n        enumerable: false, writable: false, \n        value: function disableEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0]);\n          if($events.length === 0) return $target\n          iterateEvents: for(const $event of $events) { $event.enable = false; }\n          return $target\n        },\n      },\n      // Reenable Events\n      [settings.propertyDefinitions.reenableEvents]: {\n        enumerable: false, writable: false, \n        value: function reenableEvents() {\n          const reenableEventFilters = [].concat(arguments[0]);\n          for(const $reenableEventFilter of reenableEventFilters) {\n            $reenableEventFilter.enable = true;\n          }\n          const $events = $target[settings.propertyDefinitions.getEvents](reenableEventFilters);\n          for(const $event of $events) {\n            $event.enable = false;\n            $event.enable = true;\n          }\n          return $target\n        },\n      },\n    });\n    if(settings.events) { $target[settings.propertyDefinitions.addEvents](settings.events); }\n    if(settings.enableEvents === true) {\n      $target[settings.propertyDefinitions.enableEvents]();\n    }\n    else if(typeof settings.enableEvents === 'object') {\n      $target[settings.propertyDefinitions.enableEvents](settings.enableEvents);\n    }\n    return $target\n  }\n  constructor($settings = {}) {\n    super();\n    return Core.implement(this, $settings)\n  }\n}\n\nexport { Core, index as Coutil };\n//# sourceMappingURL=core-plex.js.map\n","export default class Verification extends EventTarget {\n  #settings\n  #message\n  #pass\n  constructor($settings) {\n    super()\n    this.#settings = $settings\n  }\n  get type() { return this.#settings.type }\n  get definition() { return this.#settings.definition }\n  get key() { return this.#settings.key }\n  get value() { return this.#settings.value }\n  get message() {\n    if(this.#message !== undefined) return this.#message\n    if(\n      this.pass !== undefined &&\n      this.#message === undefined\n    ) {\n      this.#message = this.#settings.messages[String(this.pass)](this)\n    }\n    return this.#message\n  }\n  get pass() { return this.#pass }\n  set pass($pass) {\n    if(this.#pass === undefined) {\n      this.#pass = $pass\n    }\n  }\n}","import { Coutil } from 'core-plex'\nconst { recursiveAssign } = Coutil\nimport Verification from '../verification/index.js'\nconst Messages = {\n  'true': ($verification) => `${$verification.pass}`,\n  'false': ($verification) => `${$verification.pass}`,\n}\nexport default class Validator extends EventTarget {\n  #boundValidate\n  #definition\n  #schema\n  constructor($definition = {}, $schema) {\n    super()\n    this.definition = Object.freeze(\n      Object.assign({ messages: Messages }, $definition)\n    )\n    this.schema = $schema\n  }\n  get definition() { return this.#definition }\n  set definition($definition) { this.#definition = $definition }\n  get schema() { return this.#schema }\n  set schema($schema) {\n    if(this.#schema !== undefined) { return this.#schema }\n    this.#schema = $schema\n    return this.#schema\n  }\n  get type() { return this.definition.type }\n  get messages() { return this.definition.messages }\n  get validate() {\n    function validate($key, $value, $source, $target) {\n      const definition = this.definition\n      const verification = new Verification({\n        type: this.type,\n        definition: definition,\n        key: $key,\n        value: $value,\n        messages: recursiveAssign({}, this.messages, definition.messages),\n      })\n      verification.pass = definition.validate(...arguments)\n      return verification\n    }\n    this.#boundValidate = validate.bind(this)\n    return this.#boundValidate\n  }\n}","import { Coutil } from 'core-plex'\nconst { recursiveAssign, typedObjectLiteral } = Coutil\nimport Schema from '../../index.js'\nimport Validator from '../../validator/index.js'\nexport default class RequiredValidator extends Validator {\n  constructor($definition, $schema) {\n    super(Object.assign($definition, {\n      type: 'required',\n      validate: ($key, $value, $source, $target) => {\n        const definition = this.definition\n        let pass\n        const { requiredProperties, requiredPropertiesSize, type } = this.schema\n        if(requiredPropertiesSize === 0/* || definition.value === false*/) { pass = true }\n        else if(type === 'object') {\n          const corequiredContextProperties = typedObjectLiteral(type)\n          const corequiredContentProperties = typedObjectLiteral(type)\n          iterateRequiredProperties: \n          for(const [\n            $requiredPropertyName, $requiredProperty\n          ] of Object.entries(requiredProperties)) {\n            const requiredProperty = recursiveAssign({}, $requiredProperty)\n            // ?:START\n            requiredProperty.required.value = false\n            // ?:STOP\n            if($requiredPropertyName === $key) { continue iterateRequiredProperties }\n            const sourcePropertyDescriptor = Object.getOwnPropertyDescriptor($source, $requiredPropertyName)\n            if(sourcePropertyDescriptor !== undefined) {\n              corequiredContextProperties[$requiredPropertyName] = requiredProperty\n              corequiredContentProperties[$requiredPropertyName] = sourcePropertyDescriptor.value\n            }\n            else if($target) {\n              const targetPropertyDescriptor = Object.getOwnPropertyDescriptor($target, $requiredPropertyName)\n              if(targetPropertyDescriptor !== undefined) { continue iterateRequiredProperties }\n              else { corequiredContextProperties[$requiredPropertyName] = requiredProperty }\n            }\n            else {\n              corequiredContextProperties[$requiredPropertyName] = requiredProperty\n            }\n          }\n          const corequiredContextPropertiesSize = Object.keys(corequiredContextProperties).length\n          const corequiredContentPropertiesSize = Object.keys(corequiredContentProperties).length\n          if(corequiredContextPropertiesSize === 0 && corequiredContentPropertiesSize === 0) { pass = true }\n          else if(corequiredContextPropertiesSize !== corequiredContentPropertiesSize) { pass = false }\n          else {\n            const coschema = new Schema(corequiredContextProperties, Object.assign({}, this.schema.options, {\n              required: false \n            }))\n            const validations = []\n            for(const [\n              $corequiredContextPropertyName, $corequiredContextProperty\n            ] of Object.entries(corequiredContentProperties)) {\n              const corequiredContentPropertyName = $corequiredContextPropertyName\n              const corequiredContentProperty = corequiredContentProperties[corequiredContentPropertyName]\n              const coschemaPropertyValidation = coschema.validateProperty(\n                $corequiredContextPropertyName, corequiredContentProperty,\n                $source, $target\n              )\n              validations.push(coschemaPropertyValidation)\n            }\n            const nonvalidValidation = (validations.find(($validation) => $validation.valid === false))\n            if(nonvalidValidation) { pass = false }\n            else { pass = true }\n          }\n        }\n        else if(type === 'array') {\n          pass = true\n        }\n        return pass\n      }\n    }), $schema)\n  }\n}","import { Coutil } from 'core-plex'\nconst {\n  typeOf, variables\n} = Coutil\nimport Validator from '../../validator/index.js'\nconst { PrimitiveKeys, PrimitiveValues } = variables\nexport default class TypeValidator extends Validator {\n  constructor($definition = {}, $schema) {\n    super(Object.assign($definition, {\n      type: 'type',\n      validate: ($key, $value) => {\n        const definition = this.definition\n        let pass\n        let typeOfDefinitionValue = typeOf(definition.value)\n        typeOfDefinitionValue = (typeOfDefinitionValue === 'function')\n          ? typeOf(definition.value())\n          : typeOfDefinitionValue\n        const typeOfContentValue = typeOf($value)\n        if(typeOfContentValue === 'undefined') { pass = false }\n        else if(typeOfDefinitionValue === 'undefined') { pass = true }\n        else { pass = (typeOfDefinitionValue === typeOfContentValue) }\n        return pass\n      },\n    }), $schema)\n  }\n}","import Validator from '../../validator/index.js'\nexport default class RangeValidator extends Validator {\n  constructor($definition = {}, $schema) {\n    super(Object.assign($definition, {\n      type: 'range',\n      validate: ($key, $value) => {\n        const definition = this.definition\n        let pass\n        if(typeof $value !== 'number') { pass = false }\n        else {\n          const { min, max } = definition\n          let validMin, validMax\n          if(min !== undefined) { validMin = ($value >= min.value) }\n          else { validMin = true }\n          if(max !== undefined) { validMax = ($value <= max.value) }\n          else { validMax = true }\n          if(validMin && validMax) { pass = true }\n          else { pass = false}\n        }\n        return pass\n      }\n    }), $schema)\n  }\n}","import Validator from '../../validator/index.js'\nexport default class LengthValidator extends Validator {\n  constructor($definition = {}, $schema) {\n    super(Object.assign($definition, {\n      type: 'length',\n      validate: ($key, $value) => {\n        const definition = this.definition\n        let pass\n        if(typeof $value !== 'string') { pass = false }\n        else {\n          const { min, max } = definition\n          let validMin, validMax\n          if(min !== undefined) {\n            validMin = ($value.length >= min.value)\n          }\n          else { validMin = true }\n          if(max !== undefined) {\n            validMax = ($value.length <= max.value)\n          }\n          else { validMax = true }\n          if(validMin && validMax) { pass = true }          \n          else { pass = false}\n        }\n        return pass\n      },\n    }), $schema)\n  }\n}","import Validator from '../../validator/index.js'\nexport default class EnumValidator extends Validator {\n  constructor($definition = {}, $schema) {\n    super(Object.assign($definition, {\n      type: 'enum',\n      validate: ($key, $value) => {\n        const definition = this.definition\n        let pass\n        if(![\n          'string', 'number', 'boolean'\n        ].includes(typeof $value)) { pass = false}\n        else {\n          const enumeration = definition.value\n          pass = enumeration.includes($value)\n        }\n        return pass\n      },\n    }), $schema)\n  }\n}","import Validator from '../../validator/index.js'\nexport default class MatchValidator extends Validator {\n  constructor($settings = {}, $schema) {\n    super(Object.assign($settings, {\n      type: 'match',\n      validate: ($key, $value) => {\n        const definition = this.settings\n        let pass\n        if(![\n          'string', 'number', 'boolean'\n        ].includes(typeof $value)) { pass = false}\n        else {\n          const match = definition\n          const valueMatch = (match.value.exec($value) !== null)\n        }\n        return pass ? true : false\n      },\n    }), $schema)\n  }\n}","export default class Handler {\n  #context\n  constructor($context) {\n    this.#context = $context\n  }\n}","import { Coutil } from 'core-plex'\nconst {\n  expandTree, isPropertyDefinition, typedObjectLiteral, typeOf, variables\n} = Coutil\nimport {\n  RequiredValidator, TypeValidator, RangeValidator, LengthValidator, EnumValidator, MatchValidator\n} from '../validators/index.js'\nimport Schema from '../index.js'\nimport Handler from './handler/index.js'\nexport default class Context extends EventTarget {\n  #properties\n  #schema\n  #type\n  #proxy\n  #target\n  #_handler\n  constructor($properties, $schema) {\n    super()\n    this.#properties = $properties\n    this.schema = $schema\n    return this.proxy\n  }\n  get required() { return this.schema.options.required }\n  get schema() { return this.#schema }\n  set schema($schema) {\n    if(this.#schema !== undefined) return\n    this.#schema = $schema\n    return this.#schema\n  }\n  get type() {\n    if(this.#type !== undefined) return this.#type\n    this.#type = typeOf(typedObjectLiteral(this.#properties))\n    return this.#type\n  }\n  get proxy() {\n    if(this.#proxy !== undefined) return this.#proxy\n    this.#proxy = new Proxy(this.target, this.#handler)\n    return this.#proxy\n  }\n  get #handler() {\n    if(this.#_handler !== undefined) return this.#_handler\n    this.#_handler = new Handler(this)\n    return this.#_handler\n  }\n  get target() {\n    if(this.#target !== undefined) return this.#target\n    let properties\n    const target = typedObjectLiteral(this.type)\n    if(this.type === 'array') {\n      properties = this.#properties.slice(0, 1)\n    }\n    else if(this.type === 'object') {\n      properties = this.#properties\n    }\n    iterateProperties: \n    for(const [\n      $propertyKey, $propertyDefinition\n    ] of Object.entries(properties)) {\n      const typeOfPropertyDefinition = typeOf($propertyDefinition)\n      let propertyDefinition\n      // Property Definition: Schema\n      if($propertyDefinition instanceof Schema) {\n        propertyDefinition = $propertyDefinition\n      }\n      // Property Definition: String, Number, Boolean, Object, Array, null, undefined\n      else if(Variables.TypeValues.includes($propertyDefinition)) {\n        propertyDefinition = expandTree($propertyDefinition, 'type.value')\n      }\n      // Property Definition: 'string', 'number', 'bigint', 'boolean', 'object', 'array', 'null', 'undefined'\n      else if(Variables.TypeKeys.includes($propertyDefinition)) {\n        propertyDefinition = expandTree(Variables.TypeValues[\n          Variables.TypeKeys.indexOf($propertyDefinition)\n        ], 'type.value')\n      }\n      // Property Definition: Object Literal\n      else if(\n        typeOfPropertyDefinition === 'object' || \n        typeOfPropertyDefinition === 'array'\n      ) {\n        let propertyDefinitionIsPropertyDefinition = isPropertyDefinition($propertyDefinition)\n        if(propertyDefinitionIsPropertyDefinition === false) {\n          const { path } = this.schema\n          const schemaPath = (path)\n            ? [path, $propertyKey].join('.')\n            : String($propertyKey)\n          const parent = this.schema\n          propertyDefinition = new Schema($propertyDefinition, Object.assign({}, this.schema.options, {\n            path: schemaPath,\n            parent: parent,\n          }))\n        }\n        else if(propertyDefinitionIsPropertyDefinition === true) {\n          propertyDefinition = { validators: [] }\n          // Property Definition: \n          iteratePropertyValidators: \n          for(const [\n            $propertyValidatorName, $propertyValidator\n          ] of Object.entries($propertyDefinition)) {\n            if($propertyValidatorName === 'validators') { continue iteratePropertyValidators }\n            const typeOfPropertyValidator = typeOf($propertyValidator)\n            let propertyValidator\n            if(typeOfPropertyValidator && typeOfPropertyValidator === 'object') {\n              propertyValidator = $propertyValidator\n            }\n            else {\n              propertyValidator = {\n                value: $propertyValidator\n              }\n            }\n            propertyDefinition[$propertyValidatorName] = propertyValidator\n          }\n          $propertyDefinition.validators = $propertyDefinition.validators || []\n          iterateAlterPropertyValidators: \n          for(const $propertyDefinitionValidator of $propertyDefinition.validators) {\n            for(const $Validator of [\n              RequiredValidator, TypeValidator, RangeValidator, LengthValidator, EnumValidator, MatchValidator\n            ]) {\n              if($propertyDefinitionValidator instanceof $Validator === false) {\n                propertyDefinition.validators.push($propertyDefinitionValidator)\n              }\n            }\n          }\n        }\n      }\n      if(propertyDefinition instanceof Schema === false) {\n        propertyDefinition = this.#parsePropertyDefinition(propertyDefinition)\n      }\n      target[$propertyKey] = propertyDefinition\n    }\n    this.#target = target\n    return this.#target\n  }\n  #parsePropertyDefinition($propertyDefinition) {\n    const propertyDefinition = $propertyDefinition\n    propertyDefinition.validators = []\n    const validators = new Map()\n    const contextRequired = this.required\n    const {\n      required,\n      type,\n      range, min, max, \n      length, minLength, maxLength, \n      match,\n    } = propertyDefinition\n    // Required\n    if(contextRequired === true) { validators.set('required', Object.assign({}, propertyDefinition.required, {\n      type: 'required', value: true, validator: RequiredValidator \n    })) }\n    else if(required?.value === true) { validators.set('required', Object.assign({}, propertyDefinition.required, {\n      type: 'required', value: true, validator: RequiredValidator  }))\n    }\n    else { validators.set('required', Object.assign({}, propertyDefinition.required, {\n      type: 'required', value: false, validator: RequiredValidator \n    })) }\n    // Type\n    if(type) { validators.set('type', Object.assign({}, type, {\n      type: 'type', validator: TypeValidator\n    })) }\n    else { validators.set('type', Object.assign({}, type, {\n      type: 'type', value: undefined, validator: TypeValidator\n    })) }\n    // Range\n    if(range) { validators.set('range', Object.assign({}, range, {\n      type: 'range', validator: RangeValidator\n    })) }\n    else if(min || max) { validators.set('range', Object.assign({}, {\n      type: 'range', min, max, validator: RangeValidator\n    })) }\n    // Length\n    if(length) { validators.set('length', Object.assign({}, length, {\n      type: 'length', validator: LengthValidator\n    })) }\n    else if(minLength || maxLength) { validators.set('length', Object.assign({}, {\n      type: 'length', min: minLength, max: maxLength, validator: LengthValidator\n    })) }\n    // Enum\n    if(propertyDefinition.enum) { validators.set('enum', Object.assign({}, propertyDefinition.enum, {\n      type: 'enum', validator: EnumValidator\n    })) }\n    // Match\n    if(match) { validators.set('match', Object.assign({}, match, {\n      type: 'match', validator: MatchValidator\n    })) }\n    delete propertyDefinition.min\n    delete propertyDefinition.max\n    delete propertyDefinition.minLength\n    delete propertyDefinition.maxLength\n    for(const [\n      $validatorName, $validatorSettings\n    ] of validators.entries()) {\n      const ValidatorClass = $validatorSettings.validator\n      propertyDefinition[$validatorName] = $validatorSettings\n      propertyDefinition.validators.push(new ValidatorClass($validatorSettings, this.schema))\n    }\n    return propertyDefinition\n  }\n}\n","const Messages = {\n  'true': ($validation) => `${$validation.valid}`,\n  'false': ($validation) => `${$validation.valid}`,\n}\nexport default class Validation extends EventTarget {\n  #settings\n  #properties\n  #valid\n  #advance = []\n  #deadvance = []\n  #unadvance = []\n  constructor($settings = {}) {\n    super()\n    this.#settings = Object.assign({ messages: Messages }, $settings)\n  }\n  // get type() { return this.#settings.type }\n  get definition() { return this.#settings.definition }\n  get path() { return this.#settings.path }\n  get key() { return this.#settings.key }\n  get value() { return this.#settings.value }\n  get properties() {\n    if(this.#properties !== undefined) return this.#properties\n    this.#properties = this.#settings.properties\n    return this.#properties\n  }\n  get advance() { return this.#advance }\n  get deadvance() { return this.#deadvance }\n  get unadvance() { return this.#unadvance }\n  get valid() { return this.#valid }\n  set valid($valid) {\n    if(this.#valid === undefined) {\n      this.#valid = $valid\n    }\n  }\n}","import { Coutil } from 'core-plex'\nconst { typedObjectLiteral, typeOf } = Coutil\nimport Content from '../content/index.js'\nimport Context from './context/index.js'\nimport Verification from './verification/index.js'\nimport Validation from './validation/index.js'\nimport { RequiredValidator } from './validators/index.js'\nimport Options from './options/index.js' \n\nexport default class Schema extends EventTarget{\n  #properties\n  options\n  #type\n  #context\n  #parent\n  #key\n  #path\n  #requiredProperties\n  #requiredPropertiesSize\n  constructor($properties = {}, $options = {}) {\n    super()\n    this.#properties = $properties\n    this.options = Options($options)\n  }\n  get type() {\n    if(this.#type !== undefined) return this.#type\n    this.#type = typeOf(this.#properties)\n    return this.#type\n  }\n  get parent() {\n    if(this.#parent !== undefined)  return this.#parent\n    this.#parent = (this.options.parent) ? this.options.parent : null\n    return this.#parent\n  }\n  get root() {\n    let root = this\n    iterateParents: \n    while(root) {\n      if([undefined, null].includes(root.parent)) { break iterateParents }\n      root = root.parent\n    }\n    return root\n  }\n  get key() {\n    if(this.#key !== undefined) { return this.#key }\n    if(this.path) { this.#key = this.path.split('.').pop() }\n    else { this.#key = null }\n    return this.#key\n  }\n  get path() {\n    if(this.#path !== undefined)  return this.#path\n    this.#path = (this.options.path)\n      ? String(this.options.path)\n      : null\n    return this.#path\n  }\n  get required() { return this.options.required }\n  get requiredProperties() {\n    if(this.#requiredProperties !== undefined) return this.#requiredProperties\n    let requiredProperties = typedObjectLiteral(this.type)\n    iterateContextEntries: \n    for(const [$propertyKey, $propertyDefinition] of Object.entries(this.context)) {\n      if($propertyDefinition.required?.value === true) { requiredProperties[$propertyKey] = $propertyDefinition }\n    }\n    this.#requiredProperties = requiredProperties\n    return this.#requiredProperties\n  }\n  get requiredPropertiesSize() {\n    if(this.#requiredPropertiesSize !== undefined) return this.#requiredPropertiesSize\n    this.#requiredPropertiesSize = Object.keys(this.requiredProperties).length\n    return this.#requiredPropertiesSize\n  }\n  get verificationType() { return this.options.verificationType }\n  get context() {\n    if(this.#context !== undefined) return this.#context\n    this.#context = new Context(this.#properties, this)\n    return this.#context\n  }\n  #parseValidateArguments() {\n    let $arguments = [...arguments]\n    let $sourceName, $source, $target\n    if($arguments.length === 1) {\n      $sourceName = null; $source = $arguments.shift(); $target = null\n    }\n    else if($arguments.length === 2 && typeof $arguments[0] === 'string') {\n      $sourceName = $arguments.shift(); $source = $arguments.shift(); $target = null\n    }\n    else if($arguments.length === 2 && typeof $arguments[0] === 'object') {\n      $sourceName = null; $source = $arguments.shift(); $target = $arguments.shift()\n    }\n    else if($arguments.length === 3 && typeof $arguments[0] === 'string') {\n      $sourceName = $arguments.shift(); $source = $arguments.shift(); $target = $arguments.shift()\n    }\n    return { $sourceName, $source, $target }\n  }\n  validate() {\n    const { $sourceName, $source, $target } = this.#parseValidateArguments(...arguments)\n    const validation = new Validation({\n      definition: this.context,\n      path: this.path,\n      key: $sourceName, \n      value: $source,\n      properties: typedObjectLiteral(this.type),\n    })\n    const sourceProperties = Object.entries($source)\n    let sourcePropertyIndex = 0\n    let deadvancedRequiredProperties = []\n    // Iterate Content Properties \n    while(sourcePropertyIndex < sourceProperties.length) {\n      const [$sourceKey, $sourceValue] = sourceProperties[sourcePropertyIndex]\n      const propertyValidation = this.validateProperty($sourceKey, $sourceValue, $source, $target)\n      const deadvancedRequiredPropertyValidation = propertyValidation.deadvance.filter(\n        ($verification) => $verification.type === 'required'\n      )\n      validation.properties[$sourceKey] = propertyValidation\n      if(propertyValidation.valid === true) { validation.advance.push(propertyValidation) } \n      else if(propertyValidation.valid === false) { validation.deadvance.push(propertyValidation) } \n      else if(propertyValidation.valid === undefined) { validation.unadvance.push(propertyValidation )}\n      deadvancedRequiredProperties = deadvancedRequiredProperties.concat(deadvancedRequiredPropertyValidation)\n      sourcePropertyIndex++\n    }\n    if(this.required === true) {\n      if(validation.deadvance.length) { validation.valid = false }\n      else if(validation.advance.length) { validation.valid = true }\n      else if(validation.unadvance.length) { validation.valid = undefined }\n      else { validation.valid = false }\n    }\n    else if(this.required === false) {\n      if(deadvancedRequiredProperties.length) { validation.valid = false }\n      else if(validation.advance.length) { validation.valid = true }\n      else if(validation.deadvance.length) { validation.valid = false }\n      else if(validation.unadvance.length) { validation.valid = undefined }\n      else { validation.valid = false }\n    }\n    return validation\n  }\n  #parseValidatePropertyArguments() {\n    let $arguments = [...arguments]\n    let [$key, $value, $source, $target] = $arguments\n    // const ContentClassString = Content.toString()\n    const sourceIsContentClassInstance = ($source instanceof Content)\n    $source = (sourceIsContentClassInstance) ? $source.valueOf() : $source\n    const $targetIsContentClassInstance = ($target instanceof Content)\n    $target = ($targetIsContentClassInstance) ? $target.valueOf() : $target\n    return { $key, $value, $source, $target }\n  }\n  validateProperty() {\n    const { $key, $value, $source, $target } = this.#parseValidatePropertyArguments(...arguments)\n    let propertyDefinition\n    if(this.type === 'array') { propertyDefinition = this.context[0] }\n    else if(this.type === 'object') { propertyDefinition = this.context[$key] }\n    const { path } = this\n    const propertyValidationPath = (path) ? [path, $key].join('.') : $key\n    const propertyValidation = new Validation({\n      // type: this.required,\n      definition: propertyDefinition,\n      path: propertyValidationPath,\n      key: $key,\n      value: $value,\n    })\n    // Context Value: Undefined\n    if(propertyDefinition === undefined) {\n      const verification = new Verification({\n        type: null,\n        definition: null,\n        key: $key,\n        value: $value,\n      }, this)\n      verification.pass = false\n      propertyValidation.unadvance.push(verification)\n    }\n    // Context Value: Object\n    else if(propertyDefinition instanceof Schema) {\n      let validation\n      if($target && $target[$key]) { validation = propertyDefinition.validate($key, $value, $target[$key]) }\n      else { validation = propertyDefinition.validate($key, $value) }\n      if(validation.valid === true) { propertyValidation.advance.push(validation) }\n      else if(validation.valid === false) { propertyValidation.deadvance.push(validation) }\n      else if(validation.valid === undefined) { propertyValidation.unadvance.push(validation) }\n    }\n    // Context Value: Primitive\n    else {\n      iterateContextValueValidators:\n      for(const [$validatorIndex, $validator] of Object.entries(propertyDefinition.validators)) {\n        const verification = $validator.validate($key, $value, $source, $target)\n        if(verification.pass === true) { propertyValidation.advance.push(verification) }\n        else if(verification.pass === false) { propertyValidation.deadvance.push(verification) }\n        else if(verification.pass === undefined) { propertyValidation.unadvance.push(verification) }\n        if(this.verificationType === 'one' && propertyValidation.deadvance.length) { break iterateContextValueValidators }\n      }\n    }\n    if(propertyValidation.deadvance.length) { propertyValidation.valid = false }\n    else if(propertyValidation.advance.length) { propertyValidation.valid = true }\n    else if(propertyValidation.unadvance.length) { propertyValidation.valid = false }\n    return propertyValidation\n  }\n}","export default (...$options) => Object.assign({\n  required: false,\n  verificationType: 'all', // 'one'\n}, ...$options)","import { Coutil } from 'core-plex'\nconst { recursiveAssign } = Coutil\nexport default ($options) => recursiveAssign({\n  path: null, \n  parent: null, \n  enableValidation: true, \n  validationEvents: {\n    'validProperty:$key': true,\n    'validProperty': true,\n    'nonvalidProperty:$key': true,\n    'nonvalidProperty': true,\n  },\n  pathkey: true,\n  subpathError: false,\n  assignmentMethod: 'set',\n  methods: {\n    accessor: {\n      get: {\n        events: {\n          'get': true,\n          'getProperty': true,\n          'getProperty:$key': true,\n        },\n      },\n      set: {\n        recursive: true,\n        events: {\n          'set': true,\n          'setProperty': true,\n          'setProperty:$key': true,\n        },\n      },\n      delete: {\n        events: {\n          'delete': true,\n          'deleteProperty': true,\n          'deleteProperty:$key': true,\n        },\n      },\n    },\n    array: {\n      concat: {\n        events: {\n          'concatValue:$index': true,\n          'concatValue': true,\n          'concat': true,\n        }\n      },\n      copyWithin: {\n        events: {\n          'copyWithinIndex:$index': true,\n          'copyWithinIndex': true,\n          'copyWithin': true,\n        }\n      },\n      fill: {\n        events: {\n          'fillIndex:$index': true,\n          'fillIndex': true,\n          'fill': true,\n        }\n      },\n      pop: {\n        events: { 'pop': true  },\n      },\n      push: {\n        events: {\n          'pushProp:$index': true,\n          'pushProp': true,\n          'push': true,\n        }\n      },\n      reverse: {\n        events: { 'reverse': true  },\n      },\n      shift: {\n        events: { 'shift': true  },\n      },\n      splice: {\n        events: {\n          'spliceDelete:$index': true,\n          'spliceDelete': true,\n          'spliceAdd:$index': true,\n          'spliceAdd': true,\n          'splice': true,\n        }\n      },\n      unshift: {\n        events: {\n          'unshiftProp:$index': true,\n          'unshiftProp': true,\n          'unshift': true,\n        }\n      },\n    },\n    object: {\n      assign: {\n        sourceTree: true,\n        events: {\n          'assignSourceProperty:$key': true,\n          'assignSourceProperty': true,\n          'assignSource': true,\n          'assign': true,\n        },\n      },\n      defineProperties: {\n        descriptorTree: true,\n        events: { 'defineProperties': true },\n      },\n      defineProperty: {\n        descriptorTree: true,\n        events: {\n          'defineProperty': true,\n          'defineProperty:$key': true,\n        },\n      },\n      freeze: {\n        recursive: true,\n        events: { 'freeze': true  },\n      },\n      seal: {\n        recursive: true,\n        events: { 'seal': true  },\n      },\n    },\n  },\n}, $options)","export default class ContentEvent extends CustomEvent {\n  #settings\n  #content\n  #key\n  constructor($type, $settings, $content) {\n    super($type, $settings)\n    this.#settings = $settings\n    this.#content = $content\n    // if(!this.content.parent) return this\n    // this.content.addEventListener(\n    //   $type, \n    //   ($event) => {\n    //     const { path, value, detail, change } = $event\n    //     this.content.parent.dispatchEvent(\n    //       new ContentEvent(\n    //         this.type, \n    //         { path, value, detail, change },\n    //         this.content.parent\n    //       )\n    //     )\n    //   }, \n    //   {\n    //     once: true\n    //   }\n    // )\n  }\n  get content() { return this.#content }\n  get key() {\n    if(this.#key !== undefined) { return this.#key }\n    if(this.path) { this.#key = this.path.split('.').pop() }\n    else { this.#key = null }\n    return this.#key\n  }\n  get change() { return this.#settings.change }\n  get value() { return this.#settings.value }\n  get path() { return this.#settings.path }\n  get detail() { return this.#settings.detail }\n}","import Content from '../index.js'\nexport default class Change {\n  #_keyter = false \n  #_preter = false \n  #_anter = false \n  #_conter = false\n  #keyter\n  #preter\n  #anter\n  #conter\n  constructor($settings = {}) {\n    for(const [$key, $value] of Object.entries($settings)) { this[$key] = $value }\n  }\n  get preter() { return this.#preter }\n  set preter($preter) {\n    if(this.#_preter === true) { return this.#preter }\n    if($preter instanceof Content) { this.#preter = $preter.valueOf() }\n    else { this.#preter = $preter }\n    this.#_preter = true\n  }\n  get anter() { return this.#anter }\n  set anter($anter) {\n    if(this.#_anter === true) { return this.#anter }\n    if($anter instanceof Content) { this.#anter = $anter.valueOf() }\n    else { this.#anter = $anter }\n    this.#_anter = true\n  }\n  get conter() {\n    if(\n      this.#_conter === true ||\n      [this.#_preter, this.#_anter].includes(false)\n    ) { return this.#conter }\n    const preter = JSON.stringify(this.preter)\n    const anter = JSON.stringify(this.anter)\n    console.log(\"preter\",preter)\n    console.log(\"anter\",anter)\n    let conter\n    if(anter !== preter) { conter = true }\n    else { conter = false }\n    this.#conter = conter\n    this.#_conter = true\n    return this.#conter\n  }\n}","export default class ValidatorEvent extends CustomEvent {\n  #settings\n  #content\n  #key\n  #path\n  #value\n  #valid\n  constructor($type, $settings, $content) {\n    super($type)\n    this.#settings = $settings\n    this.#content = $content\n    this.#content.addEventListener(\n      $type, \n      ($event) => {\n        if(this.#content.parent !== null) {\n          this.#content.parent.dispatchEvent(\n            new ValidatorEvent(\n              this.type, \n              {\n                key: $event.key,\n                path: $event.path,\n                detail: $event.detail,\n              },\n              this.#content.parent\n            )\n          )\n        }\n      }, \n      {\n        once: true\n      }\n    )\n  }\n  get key() {\n    if(this.#key !== undefined) { return this.#key }\n    this.#key = this.#settings.key\n    return this.#key\n  }\n  get path() {\n    if(this.#path !== undefined) { return this.#path }\n    this.#path = this.#settings.path\n    return this.#path\n  }\n  get value() {\n    if(this.#value !== undefined) { return this.#value }\n    this.#value = this.#settings.value\n    return this.#value\n  }\n  get valid() {\n    if(this.#valid !== undefined) { return this.#valid }\n    this.#valid = this.#settings.valid\n    return this.#valid\n  }\n}","import { Coutil } from 'core-plex'\nconst { recursiveAssign, typedObjectLiteral } = Coutil\nimport Content from '../../../index.js'\nimport Change from '../../../change/index.js'\nimport { ContentEvent, ValidatorEvent } from '../../../events/index.js'\nexport default function assign($content, $options, ...$sources) {\n  const { path, target, schema } = $content\n  const { events, sourceTree, enableValidation, validationEvents } = $options\n  const assignedSources = []\n  const assignChange = new Change({ preter: $content })\n  // Iterate Sources\n  iterateAssignSources: \n  for(let $source of $sources) {\n    let assignedSource\n    const assignSourceChange = new Change({ preter: $content })\n    if(Array.isArray($source)) { assignedSource = [] }\n    else if(typeof $source === 'object') { assignedSource = {} }\n    // Iterate Source Props\n    iterateSourceProperties:\n    for(let [$sourceKey, $sourceValue] of Object.entries($source)) {\n      const assignSourcePropertyChange = new Change({ preter: target[$sourceKey] })\n      const assignSourcePropertyKeyChange = new Change({ preter: target[$sourceKey] })\n      // Validation\n      if(schema && enableValidation) {\n        const validSourceProp = schema.validateProperty(\n          $sourceKey, $sourceValue, $source, $content\n        )\n        if(validationEvents) {\n          let type, propertyType\n          const validatorEventPath = (path) ? [path, $sourceKey].join('.') : String($sourceKey)\n          if(validSourceProp.valid) {\n            type = 'validProperty'\n            propertyType = ['validProperty', $sourceKey].join(':')\n          }\n          else {\n            type = 'nonvalidProperty'\n            propertyType = ['nonvalidProperty', $sourceKey].join(':')\n          }\n          $content.reenableEvents({ enable: true })\n          for(const $eventType of [type, propertyType]) {\n            $content.dispatchEvent(new ValidatorEvent($eventType, validSourceProp, $content))\n          }\n        }\n        if(!validSourceProp.valid) { continue iterateSourceProperties }\n      }\n      // Source Prop: Object Type\n      let sourceValue\n      let assignment\n      if($sourceValue && typeof $sourceValue === 'object') {\n        if($sourceValue instanceof Content) {\n          sourceValue = $sourceValue.valueOf()\n        }\n        // Subschema\n        let subschema\n        if(schema?.type === 'array') { subschema = schema.context[0] }\n        else if(schema?.type === 'object') { subschema = schema.context[$sourceKey] }\n        else { subschema = null }\n        // Content\n        const contentPath = (path)\n          ? [path, $sourceKey].join('.')\n          : String($sourceKey)\n        let contentTypedLiteral = typedObjectLiteral($sourceValue)\n        // Assignment\n        // Source Tree: False\n        if(sourceTree === false) {\n          sourceValue = new Content(contentTypedLiteral, subschema, \n            recursiveAssign({}, $content.options, {\n              path: contentPath,\n              parent: $content,\n            })\n          )\n          sourceValue.assign($sourceValue)\n          assignment = { [$sourceKey]: sourceValue }\n        }\n        // Source Tree: true\n        else {\n          // Assignment: Existing Content Instance\n          if(target[$sourceKey] instanceof Content) {\n            target[$sourceKey].assign($sourceValue)\n          }\n          // Assignment: New Content Instance\n          else {\n            sourceValue = new Content(contentTypedLiteral, subschema, \n              recursiveAssign({}, $content.options, {\n                path: contentPath,\n                parent: $content,\n              })\n            )\n            sourceValue.assign($sourceValue)\n          }\n          assignment = { [$sourceKey]: sourceValue }\n        }\n        // Assignment\n      }\n      // Source Prop: Primitive Type\n      else {\n        assignment = { [$sourceKey]: $sourceValue }\n      }\n      Object.assign(target, assignment)\n      Object.assign(assignedSource, assignment)\n      $content.reenableEvents({ enable: true })\n      // Content Event: Assign Source Property\n      if(events) {\n        const contentEventPath = (path) ? [path, $sourceKey].join('.') : String($sourceKey)\n        if(events['assignSourceProperty:$key']) {\n          const type = ['assignSourceProperty', $sourceKey].join(':')\n          assignSourcePropertyKeyChange.anter = target[$sourceKey]\n          $content.dispatchEvent(\n            new ContentEvent(type, {\n              path: contentEventPath,\n              value: sourceValue,\n              change: assignSourcePropertyKeyChange,\n              detail: {\n                source: assignedSource,\n              }\n            }, $content)\n          )\n        }\n        if(events['assignSourceProperty']) {\n          assignSourcePropertyChange.anter = target[$sourceKey]\n          $content.dispatchEvent(\n            new ContentEvent('assignSourceProperty', {\n              path: contentEventPath,\n              value: sourceValue,\n              change: assignSourcePropertyChange,\n              detail: {\n                source: assignedSource,\n              }\n            }, $content)\n          )\n        }\n      }\n    }\n    assignedSources.push(assignedSource)\n    // Content Event: Assign Source\n    if(events && events['assignSource']) {\n      assignSourceChange.anter = $content\n      $content.dispatchEvent(\n        new ContentEvent('assignSource', {\n          path,\n          change: assignSourceChange,\n          detail: {\n            source: assignedSource,\n          },\n        }, $content)\n      )\n    }\n  }\n  // Content Event: Assign\n  if(events && events['assign']) {\n    assignChange.anter = $content\n    $content.dispatchEvent(\n      new ContentEvent('assign', { \n        path,\n        change: assignChange,\n        detail: {\n          sources: assignedSources,\n        },\n      }, $content)\n    )\n  }\n  return $content\n}","import { Coutil } from 'core-plex'\nconst { impandTree, typedObjectLiteral } = Coutil\nimport Content from '../../../index.js'\nimport Change from '../../../change/index.js'\nimport { ContentEvent } from '../../../events/index.js'\nexport default function defineProperties($content, $options, $propertyDescriptors) {\n  const { events } = $options\n  const { path } = $content\n  const propertyDescriptorEntries = Object.entries($propertyDescriptors)\n  const impandPropertyDescriptors = impandTree($propertyDescriptors, 'value')\n  let properties = typedObjectLiteral($content.valueOf())\n  const definePropertiesChange = new Change({ preter: $content })\n  // Iterate Property Descriptors\n  iteratePropertyDescriptors: \n  for(const [\n    $propertyKey, $propertyDescriptor\n  ] of propertyDescriptorEntries) {\n    // Property Descriptor Value Is Direct Instance Of Array/object/Map\n    $content.defineProperty($propertyKey, $propertyDescriptor, impandPropertyDescriptors)\n  }\n  $content.reenableEvents({ enable: true })\n  // Define Properties Event\n  if(events && events['defineProperties']) {\n    // Define Properties Validator Event\n    definePropertiesChange.anter = $content\n    $content.dispatchEvent(\n      new ContentEvent(\n        'defineProperties',\n        {\n          path,\n          value: $content.valueOf(),\n          detail: {\n            descriptors: $propertyDescriptors,\n          },\n        },\n        $content\n      )\n    )\n  }\n  return $content\n}","import { Coutil } from 'core-plex'\nconst { typedObjectLiteral } = Coutil\nimport Content from '../../../index.js'\nimport Change from '../../../change/index.js'\nimport { ContentEvent, ValidatorEvent } from '../../../events/index.js'\nexport default function defineProperty($content, $options, $propertyKey, $propertyDescriptor) {\n  const { descriptorTree, events } = $options\n  const { target, path, schema } = $content\n  const { enableValidation, validationEvents } = $options\n  const propertyValue = $propertyDescriptor.value\n  const targetPropertyDescriptor = Object.getOwnPropertyDescriptor(target, $propertyKey) || {}\n  const targetPropertyValue = targetPropertyDescriptor.value\n  const definePropertyChange = new Change({ preter: targetPropertyValue })\n  const definePropertyKeyChange = new Change({ preter: targetPropertyValue })\n  const targetPropertyValueIsContentInstance = (\n    targetPropertyValue instanceof Content\n  ) ? true : false\n  // Validation\n  if(schema && enableValidation) {\n    const validProperty = schema.validateProperty($propertyKey, propertyValue, $content)\n    if(validationEvents) {\n      let type, propertyType\n      const validatorPath = (path)\n        ? [path, $propertyKey].join('.')\n        : String($propertyKey)\n      if(validProperty.valid) {\n        type = 'validProperty'\n        propertyType = ['validProperty', $propertyKey].join(':')\n      }\n      else {\n        type = 'nonvalidProperty'\n        propertyType = ['nonvalidProperty', $propertyKey].join(':')\n      }\n      for(const $eventType of [type, propertyType]) {\n        $content\n        .reenableEvents({ enable: true })\n        .dispatchEvent(new ValidatorEvent($eventType, validProperty, $content))\n      }\n    }\n    if(!validProperty.valid) { return $content }\n  }\n  // Property Descriptor Value: Object Type\n  if(typeof propertyValue === 'object') {\n    // Subschema\n    let subschema\n    if(schema.type === 'array') { subschema = schema.context[0] }\n    else if(schema.type === 'object') { subschema = schema.context[$propertyKey] }\n    else { subschema = undefined}\n    // Root Property Descriptor Value: Existent Content Instance\n    const contentPath = (path)\n      ? [path, $propertyKey].join('.')\n      : String($propertyKey)\n    if(targetPropertyValueIsContentInstance) {\n      // Descriptor Tree: true\n      if(descriptorTree === true) {\n        // propertyValue = Object.assign(propertyValue, { path: contentPath, parent: $content })\n        targetPropertyValue.defineProperties(propertyValue)\n      }\n      // Descriptor Tree: false\n      else {\n        Object.defineProperty(target, $propertyKey, $propertyDescriptor)\n      }\n    }\n    // Root Property Descriptor Value: New Content Instance\n    else {\n      let _target = typedObjectLiteral(propertyValue)\n      const contentObject = new Content(\n        _target, subschema, {\n          path: contentPath,\n          parent: $content,\n        }\n      )\n      // Root Define Properties, Descriptor Tree\n      if(descriptorTree === true) {\n        contentObject.defineProperties(propertyValue)\n        target[$propertyKey] = contentObject\n      } else \n      // Root Define Properties, No Descriptor Tree\n      if(descriptorTree === false) {\n        Object.defineProperty(target, $propertyKey, $propertyDescriptor)\n      }\n    }\n  }\n  // Property Descriptor Value: Primitive Type\n  else {\n    Object.defineProperty(target, $propertyKey, $propertyDescriptor)\n  }\n  $content.reenableEvents({ enable: true })\n  // Define Property Event\n  if(events) {\n    const contentEventPath = (path)\n      ? [path, $propertyKey].join('.')\n      : String($propertyKey)\n    if(events['defineProperty:$key']) {\n      definePropertyKeyChange.anter = target[$sourceKey]\n      const type = ['defineProperty', $propertyKey].join(':')\n      $content.dispatchEvent(\n        new ContentEvent(type, {\n          path: contentEventPath,\n          value: propertyValue,\n          change: definePropertyKeyChange,\n          detail: {\n            prop: $propertyKey,\n            descriptor: $propertyDescriptor,\n          },\n        }, $content\n      ))\n    }\n    if(events['defineProperty']) {\n      definePropertyChange.anter = target[$sourceKey]\n      $content.dispatchEvent(\n        new ContentEvent('defineProperty', {\n          path: contentEventPath,\n          value: propertyValue,\n          change: definePropertyChange,\n          detail: {\n            prop: $propertyKey,\n            descriptor: $propertyDescriptor,\n          },\n        }, $content\n      ))\n    }\n  }\n  return $content\n}","import assign from './assign/index.js'\nimport defineProperties from './defineProperties/index.js'\nimport defineProperty from './defineProperty/index.js'\nimport freeze from './freeze/index.js'\nimport seal from './seal/index.js'\nexport default {\n  assign,\n  defineProperties,\n  defineProperty,\n  freeze,\n  seal,\n}","import Content from '../../../index.js'\nimport { ContentEvent } from '../../../events/index.js'\nexport default function freeze($content, $options) {\n  const { recursive, events } = $options\n  const { target, path } = $content\n  if(recursive === true) {\n    iterateProperties: \n    for(const [\n      $propertyKey, $propertyValue\n    ] of Object.entries(target)) {\n      if($propertyValue instanceof Content) {\n        $propertyValue.freeze()\n      }\n      else { Object.freeze($propertyValue) }\n      if(events && events['freeze']) {\n        $content.reenableEvents({ enable: true })\n        $content.dispatchEvent(\n          new ContentEvent(\n            'freeze',\n            { path },\n            $content\n          )\n        )\n      }\n    }\n  }\n  Object.freeze(target)\n  return $content\n}","import Content from '../../../index.js'\nimport { ContentEvent } from '../../../events/index.js'\nexport default function seal($content, $options) {\n  const { recursive, events } = $options\n  const { target, path } = $content\n  if(recursive === true) {\n    iterateProperties: \n    for(const [\n      $propertyKey, $propertyValue\n    ] of Object.entries(target)) {\n      if($propertyValue instanceof Content) {\n        $propertyValue.seal()\n      }\n      else { Object.seal($propertyValue) }\n      $content.reenableEvents({ enable: true })\n      if(events && events['seal']) {\n        $content.dispatchEvent(\n          new ContentEvent(\n            'seal',\n            { path },\n            $content\n          )\n        )\n      }\n    }\n  }\n  Object.seal(target)\n  return $content\n}","import Concat from './concat/index.js'\nimport CopyWithin from './copyWithin/index.js'\nimport Fill from './fill/index.js'\nimport Pop from './pop/index.js'\nimport Push from './push/index.js'\nimport Reverse from './reverse/index.js'\nimport Shift from './shift/index.js'\nimport Splice from './splice/index.js'\nimport Unshift from './unshift/index.js'\nexport default {\n  concat: Concat,\n  copyWithin: CopyWithin,\n  fill: Fill,\n  pop: Pop,\n  push: Push,\n  reverse: Reverse,\n  shift: Shift,\n  splice: Splice,\n  unshift: Unshift,\n}","import Content from '../../../index.js'\nimport { ContentEvent } from '../../../events/index.js'\nexport default function concat($content, $options) {\n  const { target, path, schema } = $content\n  const { enableValidation, validationEvents, events } = $options\n  const $arguments = [...arguments].reduce(($arguments, $argument) => {\n    if(Array.isArray($argument)) { $arguments.push(...$argument) }\n    else { $arguments.push($argument) }\n    return $arguments\n  }, [])\n  let valueIndex = target.length\n  const values = []\n  let targetConcat = [...Array.from(target)]\n  let content\n  iterateValues: \n  for(const $value of $arguments) {\n    // Validation: Value\n    if(schema && enableValidation) {\n      const validValue = schema.validateProperty(valueIndex, $subvalue, {}, $content)\n      if(schema &&validationEvents) {\n        let type, propertyType\n        const validatorPath = (path)\n          ? [path, valueIndex].join('.')\n          : String(valueIndex)\n        if(validValue.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', valueIndex].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', valueIndex].join('')\n        }\n        for(const $eventType of [type, propertyType]) {\n          $content.dispatchEvent(new ValidatorEvent($eventType, validValue, $content))\n        }\n      }\n      if(!validValue.valid) { valueIndex++; continue iterateValues }\n    }\n    const contentPath = (path)\n      ? [path, valueIndex].join('.')\n      : String(valueIndex)\n    // Value: Object Type\n    if(typeof $value === 'object') {\n      // Value: Content\n      if($value instanceof Content) { $value = $value.valueOf() }\n      let subschema = schema?.context[0] || null\n      const value = new Content($value, subschema, {\n        path: contentPath,\n        parent: $content,\n      })\n      values[valueIndex] = value\n    }\n    // Value: Primitive Type\n    else {\n      values[valueIndex] = $value\n    }\n    targetConcat = Array.prototype.concat.call(targetConcat, values[valueIndex])\n    $content.reenableEvents({ enable: true })\n    if(events) {\n      const contentEventPath = (path)\n        ? [path, valueIndex].join('.')\n        : String(valueIndex)\n      if(events['concatValue']) {\n        $content.dispatchEvent(\n          new ContentEvent('concatValue', {\n            path: contentEventPath,\n            value: values[valueIndex],\n            detail: {\n              valueIndex,\n              value: values[valueIndex],\n            },\n          }, $content)\n        )\n      }\n      if(events['concatValue:$index']) {\n        const type = ['concatValue', ':', valueIndex].join('')\n        $content.dispatchEvent(\n          new ContentEvent('concatValue', {\n            path: contentEventPath,\n            value: values[valueIndex],\n            detail: {\n              valueIndex,\n              value: values[valueIndex],\n            },\n          }, $content)\n        )\n      }\n    }\n    valueIndex++\n  }\n  content = new Content(targetConcat, schema, $content.options)\n  if(events && events['concat']) {\n    $content.dispatchEvent(\n      new ContentEvent('concat', {\n        path,\n        detail: {\n          values: content,\n        },\n      }, $content)\n    )\n  }\n  return content\n}","import { ContentEvent } from '../../../events/index.js'\nexport default function copyWithin($content, $options) {\n  const { target, path } = $content\n  const { enableValidation, validationEvents, events } = $options\n  const $arguments = [...arguments]\n  const copyTarget = (\n    arguments[0] >= 0\n  ) ? arguments[0]\n    : target.length = arguments[0]\n  const start = (\n    arguments[1] >= 0\n  ) ? arguments[1]\n    : target.length + arguments[1]\n  const end = (\n    arguments[2] === undefined\n  ) ? target.length\n    : (\n    arguments[2] >= 0\n  ) ? arguments[2]\n    : target.length + arguments[2]\n  const copiedItems = []\n  let copyIndex = start\n  let targetIndex = copyTarget\n  iterateCopyIndex: \n  while(copyIndex < end) {\n    const copyItem = target[copyIndex]\n    copiedItems.push(copyItem)\n    Array.prototype.copyWithin.call(\n      target,\n      targetIndex,\n      copyIndex,\n      copyIndex + 1\n    )\n    $content.reenableEvents({ enable: true })\n    // Array Copy Within Index Event Data\n    if(events) {\n      const contentEventPath = (path)\n        ? [path, copyIndex].join('.')\n        : String(copyIndex)\n      if(events['copyWithinIndex']) {\n        $content.dispatchEvent(\n          new ContentEvent(\n            'copyWithinIndex',\n            {\n              path: contentEventPath,\n              value: copyItem,\n              detail: {\n                target: targetIndex,\n                start: copyIndex,\n                end: copyIndex + 1,\n                item: copyItem,\n              },\n            },\n            $content\n          )\n        )\n      }\n      if(events['copyWithinIndex:$index']) {\n        const type  = ['copyWithinIndex', ':', copyIndex].join('')\n        $content.dispatchEvent(\n          new ContentEvent(\n            type,\n            {\n              path: contentEventPath,\n              value: copyItem,\n              detail: {\n                target: targetIndex,\n                start: copyIndex,\n                end: copyIndex + 1,\n                item: copyItem,\n              },\n            },\n            $content\n          )\n        )\n      }\n    }\n    copyIndex++\n    targetIndex++\n  }\n  // Array Copy Within Event\n  if(events && events['copyWithin']) {\n    $content.dispatchEvent(\n      new ContentEvent(\n        'copyWithin',\n        {\n          path,\n          detail: {\n            target: copyTarget,\n            start: start,\n            end: end,\n            items: copiedItems,\n          },\n        },\n        $content\n      )\n    )\n  }\n  return $content\n}","import Content from '../../../index.js'\nimport { ContentEvent } from '../../../events/index.js'\nexport default function fill($content, $options) {\n  const { target, path, schema } = $content\n  const { enableValidation, validationEvents, events } = $options\n  const $arguments = [...arguments]\n  let $start\n  if(typeof $arguments[1] === 'number') {\n    $start = ($arguments[1] >= 0)\n      ? $arguments[1]\n      : target.length + $arguments[1]\n  }\n  else { $start = 0 }\n  let $end\n  if(typeof $arguments[2] === 'number') {\n    $end = ($arguments[2] >= 0)\n      ? $arguments[2]\n      : target.length + $arguments[2]\n  } else { $end = target.length }\n  let fillIndex = $start\n  iterateFillIndexes: \n  while(\n    fillIndex < target.length &&\n    fillIndex < $end\n  ) {\n    if(schema && enableValidation) {\n      let validValue = schema.validate(validValue)\n      if(validationEvents) {\n        let type, propertyType\n        const validatorPath = (path)\n          ? [path, fillIndex].join('.')\n          : String(fillIndex)\n        if(validValue.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', fillIndex].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', fillIndex].join('')\n        }\n        for(const $eventType of [type, propertyType]) {\n          $content.dispatchEvent(new ValidatorEvent($eventType, validValue, $content))\n        }\n      }\n      if(!validValue.valid) { continue iterateFillIndexes }\n    }\n    const contentPath = (path)\n      ? [path, fillIndex].join('.')\n      : String(fillIndex)\n    let value = $arguments[0]\n    if(typeof value === 'object') {\n      if(value instanceof Content) { value = value.valueOf() }\n      const subschema = schema?.context[0] || null\n      value = new Content(value, subschema, {\n        path: contentPath,\n        parent: $content,\n      })\n    }\n    Array.prototype.fill.call(\n      target, value, fillIndex, fillIndex + 1\n    )\n    $content.reenableEvents({ enable: true })\n    // Array Fill Index Event\n    if(events) {\n      const contentEventPath = (path)\n        ? [path, fillIndex].join('.')\n        : String(fillIndex)\n      if(events['fillIndex']) {\n        $content.dispatchEvent(\n          new ContentEvent('fillIndex', {\n            path: contentEventPath, \n            value: value,\n            detail: {\n              start: fillIndex,\n              end: fillIndex + 1,\n              value,\n            },\n          }, $content)\n        )\n      }\n      if(events['fillIndex:$index']) {\n        const type = ['fillIndex', ':', fillIndex].join('')\n        $content.dispatchEvent(\n          new ContentEvent(type, {\n            path: contentEventPath, \n            detail: {\n              start: fillIndex,\n              end: fillIndex + 1,\n              value,\n            },\n          }, $content)\n        )\n      }\n    }\n    fillIndex++\n  }\n  // Array Fill Event\n  if(events && events['fill']) {\n    $content.dispatchEvent(\n      new ContentEvent('fill', {\n        path,\n        detail: {\n          start: $start,\n          end: $end,\n          value,\n        },\n      },\n      $content)\n    )\n  }\n  return $content\n}","import { ContentEvent } from '../../../events/index.js'\nexport default function pop($content, $options) {\n  const { events } = $options\n  const { target, path } = $content\n  const popElement = Array.prototype.pop.call(target)\n  $content.reenableEvents({ enable: true })\n  const popElementIndex = target.length - 1\n  // Array Pop Event\n  if(events && events['pop']) {\n    const contentEventPath = (path)\n      ? [path, popElementIndex].join('.')\n      : String(popElementIndex)\n    $content.dispatchEvent(\n      new ContentEvent(\n        'pop',\n        {\n          path: contentEventPath,\n          value: popElement,\n          detail: {\n            elementIndex: popElementIndex,\n            element: popElement,\n          },\n        },\n        $content\n      )\n    )\n  }\n  return popElement\n}","import Content from '../../../index.js'\nimport { ContentEvent } from '../../../events/index.js'\nexport default function push($content, $options, ...$elements) {\n  const { events } = $options\n  const { target, path, schema } = $content\n  const { enableValidation, validationEvents } = $content.options\n  const elements = []\n  let elementsIndex = 0\n  iterateElements:\n  for(let $element of $elements) {\n    // Validation\n    if(schema && enableValidation) {\n      const validElement = schema.validateProperty(elementsIndex, $element, {}, $content)\n      if(validationEvents) {\n        let type, propertyType\n        const validatorPath = (path)\n          ? [path, elementsIndex].join('.')\n          : String(elementsIndex)\n        if(validElement.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', elementsIndex].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', elementsIndex].join('')\n        }\n        for(const $eventType of [type, propertyType]) {\n          $content.dispatchEvent(new ValidatorEvent($eventType, validElement, $content))\n        }\n      }\n      if(!validElement.valid) { return target.length }\n    }\n    const contentPath = (path)\n      ? [path, elementsIndex].join('.')\n      : String(elementsIndex)\n    if(typeof $element === 'object') {\n      if($element instanceof Content) { $element = $element.valueOf() }\n      const subschema = schema?.context[0] || null\n      $element = new Content($element, subschema, {\n        path: contentPath,\n        parent: $content,\n      })\n      elements.push($element)\n      Array.prototype.push.call(target, $element)\n    } else {\n      elements.push($element)\n      Array.prototype.push.call(target, $element)\n    }\n    $content.reenableEvents({ enable: true })\n    if(events) {\n      const contentEventPath = (path)\n        ? [path, '.', elementsIndex].join('')\n        : String(elementsIndex)\n      if(events['pushProp']) {\n        $content.dispatchEvent(\n          new ContentEvent('pushProp', {\n            path: contentEventPath,\n            value: elements[elementsIndex],\n            detail: {\n              elementsIndex,\n              element: elements[elementsIndex],\n            },\n          }, $content)\n        )\n      }\n      if(events['pushProp:$index']) {\n        const type = ['pushProp', ':', elementsIndex].join('')\n        $content.dispatchEvent(\n          new ContentEvent(type, {\n            path: contentEventPath,\n            value: elements[elementsIndex],\n            detail: {\n              elementsIndex,\n              element: elements[elementsIndex],\n            },\n          }, $content)\n        )\n      }\n    }\n    elementsIndex++\n  }\n  // Push Event\n  if(events && events['push']) {\n    $content.dispatchEvent(\n      new ContentEvent('push', {\n        path,\n        detail: {\n          elements,\n        },\n      }, $content)\n    )\n  }\n  return target.length\n}","import { ContentEvent } from '../../../events/index.js'\nexport default function reverse($content, $options) {\n  const { events } = $options\n  const { target, path } = $content\n  Array.prototype.reverse.call(target, ...arguments)\n  $content.reenableEvents({ enable: true })\n  if(events && events['reverse']) {\n    $content.dispatchEvent(\n      new ContentEvent(\n        'reverse',\n        {\n          path,\n          detail: {\n            reference: target\n          },\n        },\n        $content\n      )\n    )\n  }\n  return $content\n}","import { ContentEvent } from '../../../events/index.js'\nexport default function shift($content, $options) {\n  const { events } = $options\n  const { target, path } = $content\n  const shiftElement = Array.prototype.shift.call(target)\n  $content.reenableEvents({ enable: true })\n  const shiftElementIndex = 0\n  // Array Shift Event\n  if(events && events['shift']) {\n    const contentEventPath = (path)\n      ? [path, shiftElementIndex].join('.')\n      : String(shiftElementIndex)\n    $content.dispatchEvent(\n      new ContentEvent(\n        'shift',\n        {\n          path: contentEventPath,\n          value: shiftElement,\n          detail: {\n            elementIndex: shiftElementIndex,\n            element: shiftElement,\n          },\n        },\n        $content\n      )\n    )\n  }\n  return shiftElement\n}","import Content from '../../../index.js'\nimport { ContentEvent } from '../../../events/index.js'\nexport default function splice($content, $options) {\n  const { events } = $options\n  const { target, path, schema } = $content\n  const { enableValidation, validationEvents } = $options\n  const $arguments = [...arguments]\n  const $start = ($arguments[0] >= 0)\n    ? $arguments[0]\n    : target.length + $arguments[0]\n  const $deleteCount = ($arguments[1] <= 0)\n    ? 0\n    : (\n      $arguments[1] === undefined ||\n      $start + $arguments[1] >= target.length\n    ) ? target.length - $start\n      : $arguments[1]\n  const $addItems = $arguments.slice(2)\n  const addCount = $addItems.length\n  const deleteItems = []\n  let deleteItemsIndex = 0\n  spliceDelete:\n  while(deleteItemsIndex < $deleteCount) {\n    const deleteItem = Array.prototype.splice.call(target, $start, 1)[0]\n    $content.reenableEvents({ enable: true })\n    deleteItems.push(deleteItem)\n    // Array Splice Delete Event\n    if(events) {\n      const contentEventPath = (path)\n        ? [path, deleteItemsIndex].join('.')\n        : String(deleteItemsIndex)\n      if(events['spliceDelete']) {\n        $content.dispatchEvent(\n          new ContentEvent('spliceDelete', {\n            path: contentEventPath,\n            value: deleteItem,\n            detail: {\n              index: $start + deleteItemsIndex,\n              deleteIndex: deleteItemsIndex,\n              deleteItem: deleteItem,\n            },\n          }, $content)\n        )\n      }\n      if(events['spliceDelete:$index']) {\n        const type = ['spliceDelete', ':', deleteItemsIndex].join('')\n        $content.dispatchEvent(\n          new ContentEvent(type, {\n            path: contentEventPath,\n            value: deleteItem,\n            detail: {\n              index: $start + deleteItemsIndex,\n              deleteIndex: deleteItemsIndex,\n              deleteItem: deleteItem,\n            },\n          }, $content)\n        )\n      }\n    }\n    deleteItemsIndex++\n  }\n  let addItemsIndex = 0\n  spliceAdd: \n  while(addItemsIndex < addCount) {\n    let addItem = $addItems[addItemsIndex]\n    // Validation\n    if(schema && enableValidation) {\n      const validAddItem = schema.validateProperty(elementIndex, element, {}, $content)\n      if(validationEvents) {\n        let type, propertyType\n        const validatorEventPath = (path)\n          ? [path, addItemsIndex].join('.')\n          : String(addItemsIndex)\n        $content.reenableEvents({ enable: true })\n        if(validAddItem.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', addItemsIndex].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', addItemsIndex].join('')\n        }\n        for(const $eventType of [type, propertyType]) {\n          $content.dispatchEvent(new ValidatorEvent($eventType, validAddItem, $content))\n        }\n      }\n      if(!validAddItem.valid) { addItemsIndex++; continue spliceAdd }\n    }\n    const contentPath = (path)\n      ? [path, addItemsIndex].join('.')\n      : String(addItemsIndex)\n    let startIndex = $start + addItemsIndex\n    // Add Item: Object Type\n    if(typeof addItem === 'object') {\n      if(addItem instanceof Content) { addItem = addItem.valueOf() }\n      const subschema = schema?.context[0] || null\n      addItem = new Content(addItem, subschema, {\n        path: contentPath,\n        parent: $content,\n      })\n      Array.prototype.splice.call(target, startIndex, 0, addItem)\n    }\n    // Add Item: Primitive Type\n    else {\n      Array.prototype.splice.call(target, startIndex, 0, addItem)\n    }\n    $content.reenableEvents({ enable: true })\n    // Array Splice Add Event\n    if(events) {\n      const contentEventPath = (path)\n        ? [path, addItemsIndex].join('.')\n        : String(addItemsIndex)\n      if(events['spliceAdd']) {\n        $content.dispatchEvent(\n          new ContentEvent('spliceAdd', {\n            path: contentEventPath,\n            value: addItem,\n            detail: {\n              index: $start + addItemsIndex,\n              addIndex: addItemsIndex,\n              addItem: addItem,\n            },\n          }, $content)\n        )\n      }\n      if(events['spliceAdd:$index']) {\n        const type = ['spliceAdd', ':', addItemsIndex].join('')\n        $content.dispatchEvent(\n          new ContentEvent(type, {\n            path: contentEventPath,\n            value: addItem,\n            detail: {\n              index: $start + addItemsIndex,\n              addIndex: addItemsIndex,\n              addItem: addItem,\n            },\n          }, $content)\n        )\n      }\n    }\n    addItemsIndex++\n  }\n  // Array Splice Event\n  if(events && events['splice']) {\n    $content.dispatchEvent(\n      new ContentEvent('splice', {\n        path,\n        detail: {\n          $start,\n          deleted: deleteItems,\n          added: $addItems,\n          length: target.length,\n        },\n      },\n      $content)\n    )\n  }\n  return deleteItems\n}","import Content from '../../../index.js'\nimport { ContentEvent, ValidatorEvent } from '../../../events/index.js'\nexport default function unshift($content, $options, ...$elements) {\n  const { events } = $options\n  const { target, path, schema } = $content\n  const { enableValidation, validationEvents } = $options\n  const elements = []\n  const elementsLength = $elements.length\n  let elementIndex = elementsLength - 1\n  let elementCoindex = 0\n  iterateElements:\n  while(elementIndex > -1) {\n    const elementsLength = $elements.length\n    let $element = $elements[elementIndex]\n    let element\n    const targetElement = target[elementIndex]\n    const targetElementIsContentInstance = (\n      targetElement instanceof Content\n    ) ? true : false\n    // Validation\n    if(schema && enableValidation) {\n      const validElement = schema.validateProperty(elementIndex, $element, {}, $content)\n      if(validationEvents) {\n        let type, propertyType\n        const validatorEventPath = (path)\n          ? [path, '.', elementCoindex].join('')\n          : elementCoindex\n        if(validElement.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', elementCoindex].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', elementCoindex].join('')\n        }\n        $content.reenableEvents({ enable: true })\n        for(const $eventType of [type, propertyType]) {\n          $content.dispatchEvent(new ValidatorEvent($eventType, validElement, $content))\n        }\n      }\n      if(!validElement.valid) { return $content.length }\n    }\n    // const change = {\n    //   preter: {\n    //     key: elementCoindex,\n    //     value: target[elementCoindex],\n    //   },\n    //   anter: {\n    //     key: elementCoindex,\n    //     value: undefined,\n    //   },\n    //   conter: undefined,\n    // }\n    // Element: Object Type\n    if(typeof $element === 'object') {\n      const subschema = schema?.context[0] || null\n      const contentPath = (path)\n        ? path.concat('.', elementCoindex)\n        : String(elementCoindex)\n      element = new Content($element, subschema, {\n        path: contentPath,\n        parent: $content,\n      })\n      elements.unshift(element)\n      Array.prototype.unshift.call(target, element)\n    }\n    // Element: Primitive Type\n    else {\n      element = $element\n      elements.unshift(element)\n      Array.prototype.unshift.call(target, $element)\n    }\n    // change.anter.value = element\n    // change.conter = (targetElementIsContentInstance)\n    //   ? (targetElement.toString() !== JSON.stringify(element))\n    //   : (JSON.stringify(targetElement) !== JSON.stringify(element))\n    // Array Unshift Prop Event\n    $content.reenableEvents({ enable: true })\n    if(events) {\n      const type = ['unshiftProp', elementCoindex].join(':')\n      const contentEventPath = (path)\n        ? [path, elementCoindex].join('.')\n        : String(elementCoindex)\n      if(events['unshiftProp']) {\n        $content.dispatchEvent(\n          new ContentEvent('unshiftProp', {\n            path: contentEventPath,\n            value: element,\n            // change,\n            detail: {\n              elementIndex: elementCoindex, \n              element: element,\n            },\n          }, $content)\n        )\n      }\n      if(events['unshiftProp:$index']) {\n        $content.dispatchEvent(\n          new ContentEvent(type, {\n            path: contentEventPath,\n            value: element,\n            // change,\n            detail: {\n              elementIndex: elementCoindex, \n              element: element,\n            },\n          }, $content)\n        )\n      }\n\n    }\n    elementIndex--\n    elementCoindex++\n  }\n  // Array Unshift Event\n  if(events && events['unshift'] && elements.length) {\n    $content.dispatchEvent(\n      new ContentEvent('unshift', {\n        path,\n        detail: {\n          elements,\n        },\n      },\n      $content)\n    )\n  }\n  return $content.length\n}","import { Coutil } from 'core-plex'\nconst { regularExpressions} = Coutil\nimport Content from '../../../../index.js'\nimport { ContentEvent } from '../../../../events/index.js'\nexport default function getContentProperty($content, $options, $path) {\n  const { target, path } = $content\n  // Arguments\n  const { events, pathkey, subpathError } = $options\n  // Path Key: true\n  if(pathkey === true) {\n    const subpaths = $path.split(new RegExp(regularExpressions.quotationEscape))\n    const propertyKey = subpaths.shift()\n    let propertyValue = target[propertyKey]\n    // Return: Subproperty\n    if(subpaths.length) {\n      // Subpath Error\n      if(subpathError === false && propertyValue === undefined) { return undefined }\n      return propertyValue.get(subpaths.join('.'), $options)\n    }\n    // Get Property Event\n    if(events) {\n      if(events['getProperty']) {\n        $content.dispatchEvent(\n          new ContentEvent('getProperty', {\n            path,\n            value: propertyValue,\n            detail: {\n              key: propertyKey,\n              value: propertyValue,\n            }\n          }, $content)\n        )\n      }\n      if(events['getProperty:$key']) {\n        const type = ['getProperty', ':', propertyKey].join('')\n        const _path = [path, '.', propertyKey].join('')\n        $content.dispatchEvent(\n          new ContentEvent(type, {\n            path: _path,\n            detail: {\n              value: propertyValue,\n            }\n          }, $content)\n        )\n      }\n    }\n    return propertyValue\n  }\n  // Path Key: false\n  else if(pathkey === false) {\n    const propertyValue = target[propertyKey]\n    return propertyValue\n  }\n}","import { Coutil } from 'core-plex'\nconst { recursiveAssign } = Coutil\nimport getContent from './getContent/index.js'\nimport getContentProperty from './getContentProperty/index.js'\nexport default function getProperty($content, $options, ...$arguments) {\n  let getProperty\n  const options = recursiveAssign({}, $content.options, $options)\n  if(typeof $arguments[0] === 'string') {\n    if($arguments.length === 2) { recursiveAssign(options, $arguments[1]) }\n    getProperty = getContentProperty($content, options, ...$arguments)\n  }\n  else {\n    if($arguments.length === 1) { recursiveAssign(options, $arguments[0]) }\n    getProperty = getContent($content, options, ...$arguments)\n  }\n  return getProperty\n}","import { Coutil } from 'core-plex'\nconst { recursiveAssign, regularExpressions} = Coutil\nimport Content from '../../../../index.js'\nimport Change from '../../../../change/index.js'\nimport { ContentEvent, ValidatorEvent } from '../../../../events/index.js'\nexport default function setContentProperty($content, $options, $path, $value) {\n  const { target, path, schema } = $content\n  const { enableValidation, validationEvents, events, pathkey, subpathError, recursive, source } = $options\n  // Path Key: true\n  if(pathkey === true) {\n    // Subpaths\n    const subpaths = $path.split(new RegExp(regularExpressions.quotationEscape))\n    // Property Key\n    const propertyKey = subpaths.shift()\n    // Property Value\n    let propertyValue\n    const contentPath = (path)\n      ? [path, propertyKey].join('.')\n      : String(propertyKey)\n    // Return: Subproperty\n    if(subpaths.length) {\n      if(recursive && target[propertyKey] === undefined) {\n        // Subschema\n        let subschema\n        if(schema?.type === 'array') { subschema = schema.context[0] }\n        else if(schema?.type === 'object') { subschema = schema.context[propertyKey] }\n        else { subschema = undefined }\n        // Subcontent\n        let subcontent\n        if(subschema?.type === 'array') { subcontent = [] }\n        else if(subschema?.type === 'object') { subcontent = {} }\n        else {\n          if(Number(propertyKey)) { subcontent = [] }\n          else { subcontent = {} }\n        }\n        propertyValue = new Content(subcontent, subschema, recursiveAssign({}, $options, {\n          path: contentPath,\n          parent: $content,\n        }))\n      }\n      else {\n        propertyValue = target[propertyKey]\n      }\n      // Subpath Error\n      if(subpathError === false && propertyValue === undefined) { return undefined }\n      propertyValue.set(subpaths.join('.'), $value, $options)\n      $content.reenableEvents({ enable: true })\n      return propertyValue\n    }\n    // Validation\n    if(schema && enableValidation) {\n      const validTargetProp = schema.validateProperty(propertyKey, $value, source, $content)\n      if(validationEvents) {\n        let type, propertyType\n        const validatorEventPath = (path)\n          ? [path, propertyKey].join('.')\n          : String(propertyKey)\n        if(validTargetProp.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', propertyKey].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', propertyKey].join('')\n        }\n        for(const $eventType of [type, propertyType]) {\n          $content.dispatchEvent(new ValidatorEvent($eventType, validTargetProp, $content))\n        }\n      }\n      if(!validTargetProp.valid) { return }\n    }\n    // Return: Property\n    // Value: Object Literal\n    if(typeof $value === 'object') {\n      // Value: Content\n      if($value instanceof Content) { $value = $value.valueOf() }\n      let subschema\n      if(schema?.type === 'array') { subschema = schema.context[0] }\n      else if(schema?.type === 'object') { subschema = schema.context[propertyKey] }\n      else { subschema = undefined }\n      propertyValue = new Content($value, subschema, recursiveAssign(\n        {}, $options, {\n          path: contentPath,\n          parent: $content,\n        }\n      ))\n    }\n    // Value: Primitive Literal\n    else {\n      propertyValue = $value\n    }\n    // Root Assignment\n    target[propertyKey] = propertyValue\n    // Set Property Event\n    if(events) {\n      const contentEventPath = (path)\n        ? [path, propertyKey].join('.')\n        : String(propertyKey)\n      if(events['setProperty']) {\n        $content.dispatchEvent(\n          new ContentEvent('setProperty', {\n            path: contentEventPath, \n            value: propertyValue,\n            // change,\n            detail: {\n              key: propertyKey,\n              value: propertyValue,\n            }\n          }, $content)\n        )\n      }\n      if(events['setProperty:$key']) {\n        const type = ['setProperty', ':', propertyKey].join('')\n        $content.dispatchEvent(\n          new ContentEvent(type, {\n            path: contentEventPath, \n            value: propertyValue,\n            // change,\n            detail: {\n              value: propertyValue,\n            }\n          }, $content)\n        )\n      }\n    }\n    // Return Property Value\n    return propertyValue\n  }\n  // Path Key: false\n  else if(pathkey === false) {\n    let propertyKey = $path\n    // Property Value: Object\n    if(typeof $value === 'object') {\n      if($value instanceof Content) { $value = $value.valueOf() }\n      let subschema\n      if(schema?.type === 'array') { subschema = schema.context[0] }\n      if(schema?.type === 'object') { subschema = schema.context[propertyKey] }\n      else { subschema = undefined }\n      const contentPath = (path)\n        ? [path, propertyKey].join('.')\n        : String(propertyKey)\n      propertyValue = new Content($value, subschema, recursiveAssign(\n        {}, $options, {\n          path: contentPath,\n          parent: $content,\n        }\n      ))\n    }\n    // Property Value: Primitive Literal\n    else { propertyValue = $value }\n    // Root Assignment\n    target[propertyKey] = propertyValue\n    // Set Property Event\n    if(events) {\n      const contentEventPath = (path)\n        ? [path, propertyKey].join('.')\n        : String(propertyKey)\n      if(events['setProperty']) {\n        $content.dispatchEvent(\n          new ContentEvent('setProperty', {\n            path: contentEventPath, \n            value: propertyValue,\n            detail: {\n              key: propertyKey,\n              value: propertyValue,\n            }\n          }, $content)\n        )\n      }\n      if(events['setProperty:$key']) {\n        const type = ['setProperty', ':', propertyKey].join('')\n        $content.dispatchEvent(\n          new ContentEvent(type, {\n            path: contentEventPath, \n            value: propertyValue,\n            detail: {\n              value: propertyValue,\n            }\n          }, $content)\n        )\n      }\n    }\n    // Return Property Value\n    return propertyValue\n  }\n}","import { Coutil } from 'core-plex'\nconst { recursiveAssign } = Coutil\nimport setContent from './setContent/index.js'\nimport setContentProperty from './setContentProperty/index.js'\nexport default function setProperty($content, $options, ...$arguments) {\n  let setProperty\n  const options = recursiveAssign({}, $content.options, $options)\n  if(typeof $arguments[0] === 'string') {\n    if($arguments.length === 3) { recursiveAssign(options, $arguments[2]) }\n    setProperty = setContentProperty($content, options, ...$arguments)\n  }\n  else {\n    if($arguments.length === 2) { recursiveAssign(options, $arguments[1]) }\n    setProperty = setContent($content, options, ...$arguments)\n  }\n  return setProperty\n}","import { Coutil } from 'core-plex'\nconst { regularExpressions} = Coutil\nimport Content from '../../../../index.js'\nimport { ContentEvent } from '../../../../events/index.js'\nexport default function deleteContentProperty($content, $options, $path) {\n  const { target, path, schema } = $content\n  const { events, pathkey, subpathError, enableValidation, validationEvents } = $options\n  // Path Key: true\n  if(pathkey === true) {\n    const subpaths = $path.split(new RegExp(regularExpressions.quotationEscape))\n    const propertyKey = subpaths.shift()\n    let propertyValue = target[propertyKey]\n\n    // Return: Subproperty\n    if(subpaths.length) {\n      // Subpath Error\n      if(subpathError === false && propertyValue === undefined) { return undefined }\n      return propertyValue.delete(subpaths.join('.'), $options)\n    }\n    // Validation\n    if(schema && enableValidation) {\n      const differedPropertyProxy = $content.valueOf()\n      delete differedPropertyProxy[propertyKey]\n      const validTargetProp = schema.validate(propertyKey, differedPropertyProxy, {}, $content)\n      if(validationEvents) {\n        let type, propertyType\n        const validatorEventPath = (path)\n          ? [path, propertyKey].join('.')\n          : String(propertyKey)\n        if(validTargetProp.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', propertyKey].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', propertyKey].join('')\n        }\n        for(const $eventType of [type, propertyType]) {\n          $content.dispatchEvent(\n            new ValidatorEvent($eventType, Object.assign(validTargetProp, {\n              path: validatorEventPath\n            }), $content)\n          )\n        }\n      }\n      if(!validTargetProp.valid) { return }\n    }\n    if(typeof propertyValue === 'object') {\n      propertyValue.delete($options)\n    }\n    delete target[propertyKey]\n    // Delete Property Event\n    if(events) {\n      if(events['deleteProperty']) {\n        $content.dispatchEvent(\n          new ContentEvent('deleteProperty', {\n            path,\n            value: propertyValue,\n            detail: {\n              key: propertyKey,\n              value: propertyValue,\n            }\n          }, $content)\n        )\n      }\n      if(events['deleteProperty:$key']) {\n        const type = ['deleteProperty', ':', propertyKey].join('')\n        const _path = [path, '.', propertyKey].join('')\n        $content.dispatchEvent(\n          new ContentEvent(type, {\n            path: _path,\n            value: propertyValue,\n            detail: {\n              value: propertyValue,\n            }\n          }, $content)\n        )\n      }\n    }\n    return undefined\n  }\n  // Path Key: false\n  else if(pathkey === false) {\n    const propertyKey = $path\n    const propertyValue = target[propertyKey]\n\n    // Validation\n    if(schema && enableValidation) {\n      const differedPropertyProxy = $content.valueOf()\n      delete differedPropertyProxy[propertyKey]\n      const validTargetProp = schema.validate(propertyKey, differedPropertyProxy, $content, $content)\n      if(validationEvents) {\n        let type, propertyType\n        const validatorEventPath = (path)\n          ? [path, propertyKey].join('.')\n          : String(propertyKey)\n        if(validTargetProp.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', propertyKey].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', propertyKey].join('')\n        }\n        for(const $eventType of [type, propertyType]) {\n          $content.dispatchEvent(\n            new ValidatorEvent($eventType, validTargetProp, $content)\n          )\n        }\n      }\n      if(!validTargetProp.valid) { return }\n    }\n  \n    if(propertyValue instanceof Content) {\n      propertyValue.delete($options)\n    }\n    delete target[propertyKey]\n    // Delete Property Event\n    if(events) {\n      if(events['deleteProperty']) {\n        $content.dispatchEvent(\n          new ContentEvent('deleteProperty', {\n            path,\n            value: propertyValue,\n            detail: {\n              key: propertyKey,\n              value: propertyValue,\n            }\n          }, $content)\n        )\n      }\n      if(events['deleteProperty:$key']) {\n        const type = ['deleteProperty', ':', propertyKey].join('')\n        const _path = [path, '.', propertyKey].join('')\n        $content.dispatchEvent(\n          new ContentEvent(type, {\n            path: _path,\n            value: propertyValue,\n            detail: {\n              value: propertyValue,\n            }\n          }, $content)\n        )\n      }\n    }\n    return undefined\n  }\n}","import { Coutil } from 'core-plex'\nconst { recursiveAssign } = Coutil\nimport deleteContent from './deleteContent/index.js'\nimport deleteContentProperty from './deleteContentProperty/index.js'\nexport default function deleteProperty($content, $options, ...$arguments) {\n  let deleteProperty\n  const options = recursiveAssign({}, $content.options, $options)\n  if(typeof $arguments[0] === 'string') {\n    if($arguments.length === 2) { recursiveAssign(options, $arguments[1]) }\n    deleteProperty = deleteContentProperty($content, options, ...$arguments)\n  }\n  else {\n    if($arguments.length === 1) { recursiveAssign(options, $arguments[0]) }\n    deleteProperty = deleteContent($content, options, ...$arguments)\n  }\n  return deleteProperty\n}","import getProperty from './getProperty/index.js'\nimport setProperty from './setProperty/index.js'\nimport deleteProperty from './deleteProperty/index.js'\nexport default {\n  get: getProperty,\n  set: setProperty,\n  delete: deleteProperty,\n}","import { ContentEvent } from '../../../../events/index.js'\nimport Content from '../../../../index.js'\nexport default function getContent($content, $options) {\n  // Get Property Event\n  const { path } = $content\n  const { events } = $options\n  if(events && events['get']) {\n    $content.dispatchEvent(\n      new ContentEvent('get', {\n        path,\n        value: $content.valueOf(),\n        detail: {\n          value: $content.valueOf()\n        }\n      }, $content)\n    )\n  }\n  return $content\n}","import { ContentEvent } from '../../../../events/index.js'\nimport Content from '../../../../index.js'\nimport Change from '../../../../change/index.js'\nexport default function setContent($content, $options, $properties) {\n  iterateProperties: \n  for(const [$propertyKey, $propertyValue] of Object.entries($properties)) {\n    $content.set($propertyKey, $propertyValue, $options)\n  }\n  $content.reenableEvents({ enable: true })\n  // Set Property Event\n  const { path } = $content\n  const { events } = $options\n  if(events && events['set']) {\n    $content.dispatchEvent(\n      new ContentEvent('set', {\n        path,\n        value: $content.valueOf(),\n        detail: {\n          value: $content.valueOf()\n        }\n      }, $content)\n    )\n  }\n  return $content\n}","import { ContentEvent } from '../../../../events/index.js'\nimport Content from '../../../../index.js'\nexport default function deleteContent($content, $options) {\n  const { target } = $content\n  for(const [$targetPropertyKey, $targetPropertyValue] of Object.entries(target)) {\n    $content.delete($targetPropertyKey, $options)\n  }\n  // Delete Property Event\n  const { path } = $content\n  const { events } = $options\n  if(events && events['delete']) {\n    $content.dispatchEvent(\n      new ContentEvent('delete', {\n        path,\n        detail: {\n          value: $content.valueOf()\n        }\n      }, $content)\n    )\n  }\n  return $content\n}","import ObjectProperty from './object/index.js'\nimport ArrayProperty from './array/index.js'\nimport AccessorProperty from './accessor/index.js'\nconst Defaults = Object.freeze({\n  object: [{\n    keys: ['valueOf'],\n    createMethod: function($methodName, $content) {\n      return function valueOf() { return $content.parse({ type: 'object' }) }\n    },\n  }, {\n    keys: ['toString'],\n    createMethod: function($methodName, $content) {\n      return function toString($parseSettings = {}) {\n        const replacer = ($parseSettings.replacer !== undefined)\n          ? $parseSettings.replacer : null\n        const space = ($parseSettings.space !== undefined)\n          ? $parseSettings.space : 0\n        return $content.parse({ type: 'string', replacer, space })\n      }\n    }, \n  }, {\n    keys: [\n      'entries', 'fromEntries', 'getOwnPropertyDescriptors', \n      'getOwnPropertyDescriptor', 'getOwnPropertyNames', \n      /* 'getOwnPropertySymbols', */ 'groupBy', 'hasOwn', 'is', \n      'getPrototypeOf', 'isExtensible', 'isFrozen', 'isSealed', \n      'keys', 'preventExtensions', 'values',\n    ],\n    createMethod: function($methodName, $content) {\n      return Object[$methodName].bind(null, $content.valueOf())\n    },\n  }, {\n    keys: ['propertyIsEnumerable', 'hasOwnProperty'], \n    createMethod: function($methodName, $content) {\n      return () => $content.parse({ type: 'object' })[$methodName]\n    },\n  }, {\n    type: 'mutators',\n    keys: Object.keys(ObjectProperty), \n    createMethod: function($methodName, $content, $options) {\n      return ObjectProperty[$methodName].bind(null, $content, $options) \n    }\n  }],\n  array: [{\n    keys: [\n      'from', 'fromAsync', 'isArray', 'of', \n    ], \n    createMethod: function($methodName, $content) {\n      return Array[$methodName]\n    }, \n  }, {\n    keys: [\n      'at', 'every', 'filter', 'find', 'findIndex', 'findLast',\n      'findLastIndex', 'flat', 'flatMap', 'forEach', 'includes', \n      'indexOf', 'join', 'lastIndexOf', 'map', 'reduce', 'reduceRight', \n      'slice', 'some', 'sort', 'toReversed',  'toSorted', 'toSpliced', \n      'with', \n    ], \n    createMethod: function($methodName, $content) {\n      return Array.prototype[$methodName].bind(null, $content)\n    }\n  }, {\n    type: 'mutators',\n    keys: Object.keys(ArrayProperty), \n    createMethod: function($methodName, $content, $options) {\n      return ArrayProperty[$methodName].bind(null, $content, $options)\n    }\n  }],\n  accessor: [{\n    type: 'mutators',\n    keys: Object.keys(AccessorProperty),\n    createMethod: function($methodName, $content, $options) {\n      return AccessorProperty[$methodName].bind(null, $content, $options)\n    }\n  }]\n})\nexport default function Methods($content) {\n  iterateDefaultPropertyClasses: // Object, Array, Accessor\n  for(const [$propertyClassName, $propertyClasses] of Object.entries(Defaults)) {\n    iteratePropertyClasses: \n    for(const $propertyClass of $propertyClasses) {\n      const { keys, createMethod, type } = $propertyClass\n      for(const $methodName of keys) {\n        if($propertyClassName === 'accessor' || type === 'mutators') {\n          const methodOptions = $content.options?.methods[$propertyClassName][$methodName] || {}\n          Object.defineProperty($content, $methodName, {\n            enumerable: false, writable: false, configurable: false, \n            value: createMethod($methodName, $content, methodOptions),\n          })\n        }\n        else {\n          Object.defineProperty($content, $methodName, {\n            enumerable: false, writable: false, configurable: false, \n            value: createMethod($methodName,  $content),\n          })\n        }\n      }\n    }\n  }\n  return $content\n}\n","import { Core, Coutil } from 'core-plex'\nconst { typedObjectLiteral, typeOf } = Coutil\nimport Schema from '../schema/index.js'\nimport Options from './options/index.js'\nimport ContentEvent from './events/content/index.js'\nimport Methods from './methods/index.js'\n\nexport default class Content extends Core {\n  #_properties\n  #options\n  #schema\n  #type\n  #target\n  #parent\n  #key\n  #path\n  #_handler\n  constructor($properties = {}, $schema = null, $options = {}) {\n    super({\n      accessors: [($target, $property) => {\n        if($property === undefined) { return $target.target }\n        else { return $target.get($property) }\n      }],\n    })\n    this.#properties = $properties\n    this.#options = Options($options)\n    this.schema = $schema\n    Methods(this)\n    this.addEvents($options.addEvents || {})\n    this.enableEvents($options.enableEvents || false)\n    const { assignmentMethod } = this.options\n    this[assignmentMethod](this.#properties)\n  }\n  get #properties() { return this.#_properties }\n  set #properties($properties) {\n    if(this.#_properties !== undefined) return\n    if($properties instanceof Content) {\n      this.#_properties = $properties.valueOf()\n    }\n    this.#_properties = $properties\n    return this.#_properties\n  }\n  get options() { return this.#options }\n  get schema() { return this.#schema }\n  set schema($schema) {\n  if(this.#schema !== undefined)  { return }\n    const typeOfSchema = typeOf($schema)\n    if(['undefined', 'null'].includes(typeOfSchema)) { this.#schema = null }\n    else if($schema instanceof Schema) { this.#schema = $schema }\n    else if(typeOfSchema === 'array') { this.#schema = new Schema(...arguments) }\n    else if(typeOfSchema === 'object') { this.#schema = new Schema($schema) }\n  }\n  get classToString() { return Content.toString() }\n  get type() {\n    if(this.#type !== undefined) return this.#type\n    this.#type = typeOf(this.#properties)\n    return this.#type\n  }\n  get parent() {\n    if(this.#parent !== undefined)  return this.#parent\n    this.#parent = (this.options.parent) ? this.options.parent : null\n    return this.#parent\n  }\n  get root() {\n    let root = this\n    iterateParents: \n    while(root) {\n      if([undefined, null].includes(root.parent)) { break iterateParents }\n      root = root.parent\n    }\n    return root\n  }\n  get key() {\n    if(this.#key !== undefined) { return this.#key }\n    if(this.path) { this.#key = this.path.split('.').pop() }\n    else { this.#key = null }\n    return this.#key\n  }\n  get path() {\n    if(this.#path !== undefined)  return this.#path\n    this.#path = (this.options.path)\n      ? String(this.options.path)\n      : null\n    return this.#path\n  }\n  get target() {\n    if(this.#target !== undefined) return this.#target\n    this.#target = typedObjectLiteral(this.#properties)\n    return this.#target\n  }\n  parse($settings = {\n    type: 'object', // string\n    replacer: null,\n    space: 0,\n  }) {\n    let parsement = typedObjectLiteral(this.type)\n    for(const [\n      $propertyDescriptorName, $propertyDescriptor\n    ] of Object.entries(\n      Object.getOwnPropertyDescriptors(this.target))\n    ) {\n      const { enumerable, value, writable, configurable } = $propertyDescriptor\n      if($propertyDescriptor.value instanceof Content) {\n        Object.defineProperty(parsement, $propertyDescriptorName, {\n          enumerable, value: value.parse({ type: 'object' }), writable, configurable\n        })\n      }\n      else {\n        Object.defineProperty(parsement, $propertyDescriptorName, {\n          enumerable, value, writable, configurable\n        })\n      }\n    }\n    const { type, replacer, space } = $settings\n    if(type === 'object') { return parsement }\n    else if(type === 'string') { return JSON.stringify(parsement, replacer, space) }\n    else { return undefined }\n  }\n}"],"names":["accessors","default","$target","$property","undefined","expandEvents","$propEvents","Array","isArray","propEvents","$propEventSettings","$propEventListener","Object","entries","propEventSettings","split","path","type","listener","options","length","propEvent","enable","push","Options","depth","maxDepth","propertyDirectory","$object","$options","_propertyDirectory","assign","$accessor","object","$key","$value","subtarget","$subtarget","join","typeOf","$data","prototype","toString","call","slice","toLowerCase","recursiveAssign","$sources","$source","$sourcePropertyKey","$sourcePropertyValue","typeOfTargetPropertyValue","typeOfSourcePropertyValue","Primitives","string","String","number","Number","boolean","Boolean","bigint","BigInt","null","PrimitiveKeys","keys","PrimitiveValues","values","Objects","array","ObjectKeys","ObjectValues","Types","TypeKeys","TypeValues","TypeMethods","index$1","freeze","__proto__","index","impandEvents","$propEvent","$path","$type","isPropertyDefinition","$propertyDefinition","getOwnPropertyDescriptor","includes","value","recursiveAssignConcat","concat","recursiveFreeze","$propertyKey","$propertyValue","regularExpressions","quotationEscape","typedObjectLiteral","variables","handleNoCommaBraces","span","separatorI","i","rangeStart","substr","rangeEnd","expand","pattern","TypeError","scanning","openingBraces","closingBraces","handledUntil","results","alternatives","char","substring","j","newResults","k","l","unhandledFrom","negate","supportNegation","supportParens","isNegated","escapeRegExpChar","Pattern","source","excludeDot","separator","separatorSplitter","separatorMatcher","wildcard","str","result","escapeRegExpString","requiredSeparator","optionalSeparator","segments","support","qMark","star","globstar","brackets","extglobs","Segment","isFirst","isLast","end","EXCLUDE_DOT_PATTERN","add","state","addition","addToUnmatch","unmatch","addToMatch","dotHandled","match","convertSegment","segment","openingBracket","closingBracket","openingParens","closingParens","parensHandledUntil","extglobModifiers","scanningForParens","escapeChar","nextChar","State","modifier_1","pop","indexOf","Error","useUnmatch","convert","isMatch","regexp","sample","test","outmatch","arguments","regexpPattern","patterns","predicate","mappedValue","flatMap","positiveResults","negativeResults","negatedPattern","convertedPattern","compile","RegExp","flags","fn","bind","EventDefinition","settings","context","enabled","disabled","_targets","_assign","_deassign","_transsign","constructor","$settings","$context","this","Settings","deassign","transsign","bindListener","methods","addEventListener","$eventDefinition","useCapture","on","once","removeEventListener","off","dispatchEvent","$event","emit","$arguments","$settingKey","$settingValue","$enable","targets","$targetElement","target","$err","pretargets","targetPaths","pretargetElement","find","$pretarget","propertyPathMatcher","$propertyPath","$targetPath","targetElement","pathKeys","pathKeysIndex","pathKey","iterateTargetAccessors","$targetAccessor","propertyDirectorySettings","Core","EventTarget","static","events","enableEvents","propertyDefinitions","getEvents","addEvents","removeEvents","disableEvents","reenableEvents","Settings$1","defineProperties","enumerable","writable","$filterEvents","$filterEvent","iterateEventFilterProperties","$filterEventPropertyKey","$filterEventPropertyValue","eventFilterMatch","$addEvents","$addEvent","event","settingValue","eventDefinition","$events","eventsIndex","splice","reenableEventFilters","$reenableEventFilter","super","implement","Verification","message","pass","definition","key","messages","$pass","Coutil","Messages","true","$verification","false","Validator","boundValidate","schema","$definition","$schema","validate","verification","RequiredValidator","requiredProperties","requiredPropertiesSize","corequiredContextProperties","corequiredContentProperties","iterateRequiredProperties","$requiredPropertyName","$requiredProperty","requiredProperty","required","sourcePropertyDescriptor","corequiredContextPropertiesSize","corequiredContentPropertiesSize","coschema","Schema","validations","$corequiredContextPropertyName","$corequiredContextProperty","corequiredContentProperty","coschemaPropertyValidation","validateProperty","$validation","valid","TypeValidator","typeOfDefinitionValue","typeOfContentValue","RangeValidator","min","max","validMin","validMax","LengthValidator","EnumValidator","MatchValidator","exec","Handler","expandTree","Context","properties","proxy","_handler","$properties","Proxy","handler","typeOfPropertyDefinition","propertyDefinition","Variables","propertyDefinitionIsPropertyDefinition","schemaPath","parent","validators","iteratePropertyValidators","$propertyValidatorName","$propertyValidator","typeOfPropertyValidator","propertyValidator","$propertyDefinitionValidator","$Validator","parsePropertyDefinition","Map","contextRequired","range","minLength","maxLength","set","validator","enum","$validatorName","$validatorSettings","ValidatorClass","Validation","advance","deadvance","unadvance","$valid","verificationType","root","iterateParents","parseValidateArguments","$sourceName","shift","validation","sourceProperties","sourcePropertyIndex","deadvancedRequiredProperties","$sourceKey","$sourceValue","propertyValidation","deadvancedRequiredPropertyValidation","filter","parseValidatePropertyArguments","Content","valueOf","propertyValidationPath","iterateContextValueValidators","$validatorIndex","$validator","ContentEvent","CustomEvent","content","$content","change","detail","Change","_keyter","_preter","_anter","_conter","keyter","preter","anter","conter","$preter","$anter","JSON","stringify","console","log","ValidatorEvent","impandTree","ObjectProperty","sourceTree","enableValidation","validationEvents","assignedSources","assignChange","assignedSource","assignSourceChange","iterateSourceProperties","assignSourcePropertyChange","assignSourcePropertyKeyChange","validSourceProp","propertyType","$eventType","sourceValue","assignment","subschema","contentPath","contentTypedLiteral","contentEventPath","sources","$propertyDescriptors","propertyDescriptorEntries","impandPropertyDescriptors","definePropertiesChange","$propertyDescriptor","defineProperty","descriptors","descriptorTree","propertyValue","targetPropertyValue","definePropertyChange","definePropertyKeyChange","targetPropertyValueIsContentInstance","validProperty","_target","contentObject","prop","descriptor","recursive","seal","ArrayProperty","reduce","$argument","valueIndex","targetConcat","from","iterateValues","validValue","$subvalue","copyWithin","copyTarget","start","copiedItems","copyIndex","targetIndex","copyItem","item","items","fill","$start","$end","fillIndex","iterateFillIndexes","popElement","popElementIndex","elementIndex","element","$elements","elements","elementsIndex","$element","validElement","reverse","reference","shiftElement","shiftElementIndex","$deleteCount","$addItems","addCount","deleteItems","deleteItemsIndex","deleteItem","deleteIndex","addItemsIndex","spliceAdd","addItem","validAddItem","startIndex","addIndex","deleted","added","unshift","elementCoindex","AccessorProperty","get","getProperty","pathkey","subpathError","subpaths","propertyKey","_path","getContentProperty","getContent","setProperty","subcontent","validTargetProp","setContentProperty","setContent","delete","deleteProperty","differedPropertyProxy","validatorEventPath","deleteContentProperty","$targetPropertyKey","$targetPropertyValue","deleteContent","Defaults","createMethod","$methodName","parse","$parseSettings","replacer","space","accessor","_properties","nonvalidProperty","assignmentMethod","concatValue","copyWithinIndex","pushProp","spliceDelete","unshiftProp","assignSourceProperty","assignSource","$propertyClassName","$propertyClasses","$propertyClass","methodOptions","configurable","Methods","typeOfSchema","classToString","parsement","$propertyDescriptorName","getOwnPropertyDescriptors"],"mappings":"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"}