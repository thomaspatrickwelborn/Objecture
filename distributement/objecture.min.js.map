{"version":3,"file":"objecture.min.js","sources":["../../Core-Plex/distributement/core-plex.js","../development/schema/verification/index.js","../development/schema/validator/index.js","../development/schema/validators/RequiredValidator/index.js","../development/schema/validators/TypeValidator/index.js","../development/schema/validators/RangeValidator/index.js","../development/schema/validators/LengthValidator/index.js","../development/schema/validators/EnumValidator/index.js","../development/schema/validators/MatchValidator/index.js","../development/schema/context/handler/index.js","../development/schema/context/index.js","../development/schema/validation/index.js","../development/schema/index.js","../development/schema/options/index.js","../development/model/options/index.js","../development/model/events/model/index.js","../development/model/change/index.js","../development/model/events/validator/index.js","../development/model/methods/object/assign/index.js","../development/model/methods/object/defineProperties/index.js","../development/model/methods/object/defineProperty/index.js","../development/model/methods/object/index.js","../development/model/methods/object/freeze/index.js","../development/model/methods/object/seal/index.js","../development/model/methods/array/index.js","../development/model/methods/array/concat/index.js","../development/model/methods/array/copy-within/index.js","../development/model/methods/array/fill/index.js","../development/model/methods/array/pop/index.js","../development/model/methods/array/push/index.js","../development/model/methods/array/reverse/index.js","../development/model/methods/array/shift/index.js","../development/model/methods/array/splice/index.js","../development/model/methods/array/unshift/index.js","../development/model/methods/accessor/getProperty/getContentProperty/index.js","../development/model/methods/accessor/getProperty/index.js","../development/model/methods/accessor/setProperty/setContentProperty/index.js","../development/model/methods/accessor/setProperty/index.js","../development/model/methods/accessor/deleteProperty/deleteContentProperty/index.js","../development/model/methods/accessor/deleteProperty/index.js","../development/model/methods/accessor/index.js","../development/model/methods/accessor/getProperty/getContent/index.js","../development/model/methods/accessor/setProperty/setContent/index.js","../development/model/methods/accessor/deleteProperty/deleteContent/index.js","../development/model/methods/index.js","../development/model/index.js"],"sourcesContent":["const defaultAccessor = ($target, $property) => {\n  if($property === undefined) { return $target }\n  else { return $target[$property] }\n};\nvar accessors = {\n  default: defaultAccessor,\n};\n\nfunction impandEvents($propEvents) {\n  if(!Array.isArray($propEvents)) { return $propEvents }\n  const propEvents = {};\n  iteratePropEvents: \n  for(const $propEvent of $propEvents) {\n    const { path, type, listener, options } = $propEvent;\n    const propEventSettings = `${$path} ${$type}`;\n    if(options !== undefined) {\n      propEvents[propEventSettings] = [listener, options];\n    }\n    else {\n      propEvents[propEventSettings] = listener;\n    }\n  }\n  return propEvents\n}\n\nfunction expandEvents($propEvents) {\n  if(\n    Array.isArray($propEvents) ||\n    $propEvents === undefined\n  ) { return $propEvents }\n  const propEvents = [];\n  iteratePropEvents:\n  for(const [\n    $propEventSettings, $propEventListener\n  ] of Object.entries($propEvents)) {\n    const propEventSettings = $propEventSettings.split(' ');\n    let path, type, listener, options;\n    if(propEventSettings.length === 1) {\n      path = ':scope';\n      type = propEventSettings[0];\n    }\n    else if(propEventSettings.length > 1) {\n      path = propEventSettings[0];\n      type = propEventSettings[1];\n    }\n    if(Array.isArray($propEventListener)) {\n      listener = $propEventListener[0];\n      options = $propEventListener[1];\n    }\n    else {\n      listener = $propEventListener;\n    }\n    const propEvent = {\n      type,\n      path,\n      listener,\n      enable: false,\n    };\n    propEvents.push(propEvent);\n  }\n  return propEvents\n}\n\nfunction isPropertyDefinition($propertyDefinition) {\n  if(\n    Object.getOwnPropertyDescriptor($propertyDefinition, 'type') &&\n    (\n      TypeValues.includes($propertyDefinition.type) ||\n      TypeKeys.includes($propertyDefinition.type)\n    ) || (\n      typeof $propertyDefinition.type === 'object' &&\n      Object.getOwnPropertyDescriptor($propertyDefinition.type, 'value') &&\n      (\n        TypeValues.includes($propertyDefinition.type.value) ||\n        TypeKeys.includes($propertyDefinition.type.value)\n      )\n    )\n  ) { return true } \n  else { return false }\n}\n\nconst Options = {\n  depth: 0,\n  maxDepth: 10,\n  accessors: [accessors.default],\n};\nfunction propertyDirectory($object, $options) {\n  const _propertyDirectory = [];\n  const options = Object.assign({}, Options, $options);\n  options.depth++;\n  if(options.depth > options.maxDepth) { return _propertyDirectory }\n  iterateAccessors: \n  for(const $accessor of options.accessors) {\n    const object = $accessor($object);\n    if(!object) continue iterateAccessors\n    iterateObjectProperties: \n    for(const [$key, $value] of Object.entries(object)) {\n      _propertyDirectory.push($key);\n      if(\n        typeof $value === 'object' &&\n        $value !== null &&\n        $value !== object\n      ) {\n        const subtarget = propertyDirectory($value, options);\n        for(const $subtarget of subtarget) {\n          let path;\n          if(typeof $subtarget === 'object') {\n            path = [$key, ...$subtarget].join('.');\n          }\n          else {\n            path = [$key, $subtarget].join('.');\n          }\n          _propertyDirectory.push(path);\n        }\n      }\n    }\n  }\n  return _propertyDirectory\n}\n\nconst typeOf = ($data) => Object\n  .prototype\n  .toString\n  .call($data).slice(8, -1).toLowerCase();\n\nfunction recursiveAssign($target, ...$sources) {\n  if(!$target) { return $target}\n  iterateSources: \n  for(const $source of $sources) {\n    if(!$source) continue iterateSources\n    iterateSourceEntries: \n    for(const [\n      $sourcePropertyKey, $sourcePropertyValue\n    ] of Object.entries($source)) {\n      const typeOfTargetPropertyValue = typeOf($target[$sourcePropertyKey]);\n      const typeOfSourcePropertyValue = typeOf($sourcePropertyValue);\n      if(\n        typeOfTargetPropertyValue === 'object' &&\n        typeOfSourcePropertyValue === 'object'\n      ) {\n        $target[$sourcePropertyKey] = recursiveAssign($target[$sourcePropertyKey], $sourcePropertyValue);\n      }\n      else {\n        $target[$sourcePropertyKey] = $sourcePropertyValue;\n      }\n    }\n  }\n  return $target\n}\n\nfunction recursiveAssignConcat($target, ...$sources) {\n  if(!$target) { return $target}\n  iterateSources: \n  for(const $source of $sources) {\n    if(!$source) continue iterateSources\n    iterateSourceEntries: \n    for(const [\n      $sourcePropertyKey, $sourcePropertyValue\n    ] of Object.entries($source)) {\n      const typeOfTargetPropertyValue = typeOf($target[$sourcePropertyKey]);\n      const typeOfSourcePropertyValue = typeOf($sourcePropertyValue);\n      if( \n        typeOfTargetPropertyValue === 'object' &&\n        typeOfSourcePropertyValue === 'object'\n      ) {\n        $target[$sourcePropertyKey] = recursiveAssignConcat($target[$sourcePropertyKey], $sourcePropertyValue);\n      }\n      else if(\n        typeOfTargetPropertyValue === 'array' &&\n        typeOfSourcePropertyValue === 'array'\n      ) {\n        $target[$sourcePropertyKey] = $target[$sourcePropertyKey].concat($sourcePropertyValue);\n      }\n      else {\n        $target[$sourcePropertyKey] = $sourcePropertyValue;\n      }\n    }\n  }\n  return $target\n}\n\nvar index$2 = {\n  quotationEscape: /\\.(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/,\n};\n\nfunction recursiveFreeze($target) {\n  for(const [$propertyKey, $propertyValue] of Object.entries($target)) {\n    if($propertyValue && typeof $propertyValue === 'object') {\n      recursiveFreeze($propertyValue);\n    }\n  }\n  return Object.freeze($target)\n}\n\nfunction typedObjectLiteral($value) {\n  let _typedObjectLiteral;\n  const typeOfValue = typeOf($value);\n  if(typeOfValue === 'object') { _typedObjectLiteral = {}; }\n  else if(typeOfValue === 'array') { _typedObjectLiteral = []; }\n  else if(typeOfValue === 'string') {\n    if($value === 'object') { _typedObjectLiteral = {}; }\n    else if($value === 'array') { _typedObjectLiteral = []; }\n  }\n  else { _typedObjectLiteral = undefined; }\n  return _typedObjectLiteral\n}\n\nconst Primitives = {\n  'string': String, \n  'number': Number, \n  'boolean': Boolean, \n  'bigint': BigInt, \n  'undefined': undefined,\n  'null': null,\n};\nconst PrimitiveKeys = Object.keys(Primitives);\nconst PrimitiveValues = Object.values(Primitives);\nconst Objects = {\n  'object': Object,\n  'array': Array,\n};\nconst ObjectKeys = Object.keys(Objects);\nconst ObjectValues = Object.values(Objects);\nconst Types = Object.assign({}, Primitives, Objects);\nconst TypeKeys = Object.keys(Types);\nconst TypeValues = Object.values(Types);\nconst TypeMethods = [\n Primitives.String, Primitives.Number, Primitives.Boolean, \n Objects.Object, Objects.Array\n];\n\nvar index$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ObjectKeys: ObjectKeys,\n  ObjectValues: ObjectValues,\n  Objects: Objects,\n  PrimitiveKeys: PrimitiveKeys,\n  PrimitiveValues: PrimitiveValues,\n  Primitives: Primitives,\n  TypeKeys: TypeKeys,\n  TypeMethods: TypeMethods,\n  TypeValues: TypeValues,\n  Types: Types\n});\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  accessors: accessors,\n  expandEvents: expandEvents,\n  impandEvents: impandEvents,\n  isPropertyDefinition: isPropertyDefinition,\n  propertyDirectory: propertyDirectory,\n  recursiveAssign: recursiveAssign,\n  recursiveAssignConcat: recursiveAssignConcat,\n  recursiveFreeze: recursiveFreeze,\n  regularExpressions: index$2,\n  typeOf: typeOf,\n  typedObjectLiteral: typedObjectLiteral,\n  variables: index$1\n});\n\nvar Settings$1 = ($settings = {}) => {\n  const Settings = {\n    events: {},\n    enableEvents: false,\n    propertyDefinitions: {\n      getEvents: 'getEvents',\n      addEvents: 'addEvents',\n      removeEvents: 'removeEvents',\n      enableEvents: 'enableEvents',\n      disableEvents: 'disableEvents',\n      reenableEvents: 'reenableEvents',\n    },\n  };\n  for(const [$settingKey, $settingValue] of Object.entries($settings)) {\n    switch($settingKey) {\n      case 'propertyDefinitions':\n        Settings[$settingKey] = Object.assign(Settings[$settingKey], $settingValue);\n        break\n      default: \n        Settings[$settingKey] = $settingValue;\n        break\n    }\n  }\n  return Settings\n};\n\nfunction handleNoCommaBraces(span) {\n    if (span.length < 3) {\n        return \"{\" + span + \"}\";\n    }\n    var separatorI = -1;\n    for (var i = 2; i < span.length; i++) {\n        if (span[i] === '.' && span[i - 1] === '.' && (i < 2 || span[i - 2] !== '\\\\')) {\n            if (separatorI > -1) {\n                return \"{\" + span + \"}\";\n            }\n            separatorI = i - 1;\n        }\n    }\n    if (separatorI > -1) {\n        var rangeStart = span.substr(0, separatorI);\n        var rangeEnd = span.substr(separatorI + 2);\n        if (rangeStart.length > 0 && rangeEnd.length > 0) {\n            return \"[\" + span.substr(0, separatorI) + \"-\" + span.substr(separatorI + 2) + \"]\";\n        }\n    }\n    return \"{\" + span + \"}\";\n}\nfunction expand(pattern) {\n    if (typeof pattern !== 'string') {\n        throw new TypeError(\"A pattern must be a string, but \" + typeof pattern + \" given\");\n    }\n    var scanning = false;\n    var openingBraces = 0;\n    var closingBraces = 0;\n    var handledUntil = -1;\n    var results = [''];\n    var alternatives = [];\n    var span;\n    for (var i = 0; i < pattern.length; i++) {\n        var char = pattern[i];\n        if (char === '\\\\') {\n            i++;\n            continue;\n        }\n        if (char === '{') {\n            if (scanning) {\n                openingBraces++;\n            }\n            else if (i > handledUntil && !openingBraces) {\n                span = pattern.substring(handledUntil + 1, i);\n                for (var j = 0; j < results.length; j++) {\n                    results[j] += span;\n                }\n                alternatives = [];\n                handledUntil = i;\n                scanning = true;\n                openingBraces++;\n            }\n            else {\n                openingBraces--;\n            }\n        }\n        else if (char === '}') {\n            if (scanning) {\n                closingBraces++;\n            }\n            else if (closingBraces === 1) {\n                span = pattern.substring(handledUntil + 1, i);\n                if (alternatives.length > 0) {\n                    var newResults = [];\n                    alternatives.push(expand(span));\n                    for (var j = 0; j < results.length; j++) {\n                        for (var k = 0; k < alternatives.length; k++) {\n                            for (var l = 0; l < alternatives[k].length; l++) {\n                                newResults.push(results[j] + alternatives[k][l]);\n                            }\n                        }\n                    }\n                    results = newResults;\n                }\n                else {\n                    span = handleNoCommaBraces(span);\n                    for (var j = 0; j < results.length; j++) {\n                        results[j] += span;\n                    }\n                }\n                handledUntil = i;\n                closingBraces--;\n            }\n            else {\n                closingBraces--;\n            }\n        }\n        else if (!scanning && char === ',' && closingBraces - openingBraces === 1) {\n            span = pattern.substring(handledUntil + 1, i);\n            alternatives.push(expand(span));\n            handledUntil = i;\n        }\n        if (scanning && (closingBraces === openingBraces || i === pattern.length - 1)) {\n            scanning = false;\n            i = handledUntil - 1;\n        }\n    }\n    if (handledUntil === -1) {\n        return [pattern];\n    }\n    var unhandledFrom = pattern[handledUntil] === '{' ? handledUntil : handledUntil + 1;\n    if (unhandledFrom < pattern.length) {\n        span = pattern.substr(unhandledFrom);\n        for (var j = 0; j < results.length; j++) {\n            results[j] += span;\n        }\n    }\n    return results;\n}\n\nfunction negate(pattern, options) {\n    var supportNegation = options['!'] !== false;\n    var supportParens = options['()'] !== false;\n    var isNegated = false;\n    var i;\n    if (supportNegation) {\n        for (i = 0; i < pattern.length && pattern[i] === '!'; i++) {\n            if (supportParens && pattern[i + 1] === '(') {\n                i--;\n                break;\n            }\n            isNegated = !isNegated;\n        }\n        if (i > 0) {\n            pattern = pattern.substr(i);\n        }\n    }\n    return { pattern: pattern, isNegated: isNegated };\n}\n\nfunction escapeRegExpChar(char) { if (char === '-' ||\n    char === '^' ||\n    char === '$' ||\n    char === '+' ||\n    char === '.' ||\n    char === '(' ||\n    char === ')' ||\n    char === '|' ||\n    char === '[' ||\n    char === ']' ||\n    char === '{' ||\n    char === '}' ||\n    char === '*' ||\n    char === '?' ||\n    char === '\\\\') {\n    return \"\\\\\" + char;\n}\nelse {\n    return char;\n} }\nfunction escapeRegExpString(str) {\n    var result = '';\n    for (var i = 0; i < str.length; i++) {\n        result += escapeRegExpChar(str[i]);\n    }\n    return result;\n}\n\nfunction Pattern(source, options, excludeDot) {\n    var separator = typeof options.separator === 'undefined' ? true : options.separator;\n    var separatorSplitter = '';\n    var separatorMatcher = '';\n    var wildcard = '.';\n    if (separator === true) {\n        separatorSplitter = '/';\n        separatorMatcher = '[/\\\\\\\\]';\n        wildcard = '[^/\\\\\\\\]';\n    }\n    else if (separator) {\n        separatorSplitter = separator;\n        separatorMatcher = escapeRegExpString(separatorSplitter);\n        if (separatorMatcher.length > 1) {\n            separatorMatcher = \"(?:\" + separatorMatcher + \")\";\n            wildcard = \"((?!\" + separatorMatcher + \").)\";\n        }\n        else {\n            wildcard = \"[^\" + separatorMatcher + \"]\";\n        }\n    }\n    else {\n        wildcard = '.';\n    }\n    var requiredSeparator = separator ? separatorMatcher + \"+?\" : '';\n    var optionalSeparator = separator ? separatorMatcher + \"*?\" : '';\n    var segments = separator ? source.split(separatorSplitter) : [source];\n    var support = {\n        qMark: options['?'] !== false,\n        star: options['*'] !== false,\n        globstar: separator && options['**'] !== false,\n        brackets: options['[]'] !== false,\n        extglobs: options['()'] !== false,\n        excludeDot: excludeDot && options.excludeDot !== false,\n    };\n    return {\n        source: source,\n        segments: segments,\n        options: options,\n        separator: separator,\n        separatorSplitter: separatorSplitter,\n        separatorMatcher: separatorMatcher,\n        optionalSeparator: optionalSeparator,\n        requiredSeparator: requiredSeparator,\n        wildcard: wildcard,\n        support: support,\n    };\n}\nfunction Segment(source, pattern, isFirst, isLast) { return {\n    source: source,\n    isFirst: isFirst,\n    isLast: isLast,\n    end: source.length - 1,\n}; }\nfunction Result() {\nreturn {\n    match: '',\n    unmatch: '',\n    useUnmatch: false,\n}; }\nfunction State(pattern, segment, result) { return {\n    pattern: pattern,\n    segment: segment,\n    result: result,\n    openingBracket: segment.end + 1,\n    closingBracket: -1,\n    openingParens: 0,\n    closingParens: 0,\n    parensHandledUntil: -1,\n    extglobModifiers: [],\n    scanningForParens: false,\n    escapeChar: false,\n    addToMatch: true,\n    addToUnmatch: pattern.support.extglobs,\n    dotHandled: false,\n    i: -1,\n    char: '',\n    nextChar: '',\n}; }\n\nvar EXCLUDE_DOT_PATTERN = '(?!\\\\.)';\nfunction add(state, addition, excludeDot) {\n    if (state.addToUnmatch) {\n        state.result.unmatch += addition;\n    }\n    if (state.addToMatch) {\n        if (excludeDot && !state.dotHandled) {\n            addition = EXCLUDE_DOT_PATTERN + addition;\n        }\n        state.dotHandled = true;\n        state.result.match += addition;\n    }\n    return state.result;\n}\nfunction convertSegment(pattern, segment, result) {\n    var support = pattern.support;\n    var state = State(pattern, segment, result);\n    var separatorMatcher = segment.isLast\n        ? pattern.optionalSeparator\n        : pattern.requiredSeparator;\n    if (!support.excludeDot) {\n        state.dotHandled = true;\n    }\n    if (segment.end === -1) {\n        return segment.isLast && !segment.isFirst ? result : add(state, separatorMatcher);\n    }\n    if (support.globstar && segment.source === '**') {\n        var prefix = !state.dotHandled ? EXCLUDE_DOT_PATTERN : '';\n        var globstarSegment = prefix + pattern.wildcard + \"*?\" + separatorMatcher;\n        return add(state, \"(?:\" + globstarSegment + \")*?\");\n    }\n    while (++state.i <= segment.end) {\n        state.char = state.segment.source[state.i];\n        state.nextChar = state.i < segment.end ? segment.source[state.i + 1] : '';\n        if (state.char === '\\\\') {\n            if (state.i < state.segment.end) {\n                state.escapeChar = true;\n                continue;\n            }\n            else {\n                state.char = '';\n            }\n        }\n        var pattern = state.pattern, segment = state.segment, char = state.char, i = state.i;\n        if (pattern.support.brackets && !state.scanningForParens) {\n            if (i > state.openingBracket && i <= state.closingBracket) {\n                if (state.escapeChar) {\n                    add(state, escapeRegExpChar(char));\n                }\n                else if (i === state.closingBracket) {\n                    add(state, ']');\n                    state.openingBracket = segment.source.length;\n                }\n                else if (char === '-' && i === state.closingBracket - 1) {\n                    add(state, '\\\\-');\n                }\n                else if (char === '!' && i === state.openingBracket + 1) {\n                    add(state, '^');\n                }\n                else if (char === ']') {\n                    add(state, '\\\\]');\n                }\n                else {\n                    add(state, char);\n                }\n                state.escapeChar = false;\n                continue;\n            }\n            if (i > state.openingBracket) {\n                if (char === ']' &&\n                    !state.escapeChar &&\n                    i > state.openingBracket + 1 &&\n                    i > state.closingBracket) {\n                    state.closingBracket = i;\n                    state.i = state.openingBracket;\n                    if (pattern.separator) {\n                        add(state, \"(?!\" + pattern.separatorMatcher + \")[\", true);\n                    }\n                    else {\n                        add(state, '[', true);\n                    }\n                }\n                else if (i === segment.end) {\n                    add(state, '\\\\[');\n                    state.i = state.openingBracket;\n                    state.openingBracket = segment.source.length;\n                    state.closingBracket = segment.source.length;\n                }\n                state.escapeChar = false;\n                continue;\n            }\n            if (char === '[' &&\n                !state.escapeChar &&\n                i > state.closingBracket &&\n                i < segment.end) {\n                state.openingBracket = i;\n                state.escapeChar = false;\n                continue;\n            }\n        }\n        if (state.pattern.support.extglobs) {\n            var extglobModifiers = state.extglobModifiers, char = state.char, nextChar = state.nextChar, i = state.i;\n            if (nextChar === '(' &&\n                !state.escapeChar &&\n                (char === '@' || char === '?' || char === '*' || char === '+' || char === '!')) {\n                if (state.scanningForParens) {\n                    state.openingParens++;\n                }\n                else if (i > state.parensHandledUntil && !state.closingParens) {\n                    state.parensHandledUntil = i;\n                    state.scanningForParens = true;\n                    state.openingParens++;\n                }\n                else if (state.closingParens >= state.openingParens) {\n                    if (char === '!') {\n                        state.addToMatch = true;\n                        state.addToUnmatch = false;\n                        add(state, state.pattern.wildcard + \"*?\", true);\n                        state.addToMatch = false;\n                        state.addToUnmatch = true;\n                        state.result.useUnmatch = true;\n                    }\n                    extglobModifiers.push(char);\n                    add(state, '(?:', true);\n                    state.openingParens--;\n                    state.i++;\n                    continue;\n                }\n                else {\n                    state.openingParens--;\n                }\n            }\n            else if (char === ')' && !state.escapeChar) {\n                if (state.scanningForParens) {\n                    state.closingParens++;\n                }\n                else if (extglobModifiers.length) {\n                    var modifier_1 = extglobModifiers.pop();\n                    if (modifier_1 === '!' && extglobModifiers.indexOf('!') !== -1) {\n                        throw new Error(\"Nested negated extglobs aren't supported\");\n                    }\n                    modifier_1 = modifier_1 === '!' || modifier_1 === '@' ? '' : modifier_1;\n                    add(state, \")\" + modifier_1);\n                    state.addToMatch = true;\n                    state.addToUnmatch = true;\n                    state.closingParens--;\n                    continue;\n                }\n            }\n            else if (char === '|' && state.closingParens &&\n                !state.scanningForParens &&\n                !state.escapeChar) {\n                add(state, '|');\n                continue;\n            }\n            if (state.scanningForParens) {\n                if (state.closingParens === state.openingParens || i === state.segment.end) {\n                    state.scanningForParens = false;\n                    state.i = state.parensHandledUntil - 1;\n                }\n                state.escapeChar = false;\n                continue;\n            }\n        }\n        var pattern = state.pattern;\n        var support = pattern.support;\n        if (!state.escapeChar && support.star && state.char === '*') {\n            if (state.i === state.segment.end || state.nextChar !== '*') {\n                add(state, pattern.wildcard + \"*?\", true);\n            }\n        }\n        else if (!state.escapeChar && support.qMark && state.char === '?') {\n            add(state, pattern.wildcard, true);\n        }\n        else {\n            add(state, escapeRegExpChar(state.char));\n        }\n        state.escapeChar = false;\n    }\n    return add(state, separatorMatcher);\n}\nfunction convert(source, options, excludeDot) {\n    var pattern = Pattern(source, options, excludeDot);\n    var result = Result();\n    var segments = pattern.segments;\n    for (var i = 0; i < segments.length; i++) {\n        var segment = Segment(segments[i], pattern, i === 0, i === segments.length - 1);\n        convertSegment(pattern, segment, result);\n    }\n    if (result.useUnmatch) {\n        return \"(?!^\" + result.unmatch + \"$)\" + result.match;\n    }\n    else {\n        return result.match;\n    }\n}\n\nfunction flatMap(array, predicate) {\n    var results = [];\n    for (var i = 0; i < array.length; i++) {\n        var mappedValue = predicate(array[i]);\n        for (var j = 0; j < mappedValue.length; j++) {\n            results.push(mappedValue[j]);\n        }\n    }\n    return results;\n}\nfunction compile(patterns, options) {\n    patterns = Array.isArray(patterns) ? patterns : [patterns];\n    if (options['{}'] !== false) {\n        patterns = flatMap(patterns, expand);\n    }\n    var positiveResults = [];\n    var negativeResults = [];\n    var result = '';\n    for (var i = 0; i < patterns.length; i++) {\n        var negatedPattern = negate(patterns[i], options);\n        var convertedPattern = convert(negatedPattern.pattern, options, !negatedPattern.isNegated);\n        if (negatedPattern.isNegated) {\n            negativeResults.push(convertedPattern);\n        }\n        else {\n            positiveResults.push(convertedPattern);\n        }\n    }\n    if (negativeResults.length) {\n        result = \"(?!(?:\" + negativeResults.join('|') + \")$)\";\n    }\n    if (positiveResults.length > 1) {\n        result += \"(?:\" + positiveResults.join('|') + \")\";\n    }\n    else if (positiveResults.length === 1) {\n        result += positiveResults[0];\n    }\n    else if (result.length) {\n        result += convert('**', options, true);\n    }\n    return \"^\" + result + \"$\";\n}\nfunction isMatch(regexp, sample) { if (typeof sample !== 'string') {\n    throw new TypeError(\"Sample must be a string, but \" + typeof sample + \" given\");\n} return regexp.test(sample); }\n/**\n * Compiles one or more glob patterns into a RegExp and returns an isMatch function.\n * The isMatch function takes a sample string as its only argument and returns true\n * if the string matches the pattern(s).\n *\n * ```js\n * outmatch('src/*.js')('src/index.js') //=> true\n * ```\n *\n * ```js\n * const isMatch = outmatch('*.example.com', '.')\n * isMatch('foo.example.com') //=> true\n * isMatch('foo.bar.com') //=> false\n * ```\n */\nfunction outmatch(pattern, options) {\n    if (typeof pattern !== 'string' && !Array.isArray(pattern)) {\n        throw new TypeError(\"The first argument must be a single pattern string or an array of patterns, but \" + typeof pattern + \" given\");\n    }\n    if (typeof options === 'string' || typeof options === 'boolean') {\n        options = { separator: options };\n    }\n    if (arguments.length === 2 &&\n        !(typeof options === 'undefined' ||\n            (typeof options === 'object' && options !== null && !Array.isArray(options)))) {\n        throw new TypeError(\"The second argument must be an options object or a string/boolean separator, but \" + typeof options + \" given\");\n    }\n    options = options || {};\n    if (options.separator === '\\\\') {\n        throw new Error('\\\\ is not a valid separator');\n    }\n    var regexpPattern = compile(pattern, options);\n    var regexp = new RegExp(regexpPattern, options.flags);\n    var fn = isMatch.bind(null, regexp);\n    fn.options = options;\n    fn.pattern = pattern;\n    fn.regexp = regexp;\n    return fn;\n}\n\nvar Settings = ($settings = {}) => {\n  const Settings = {\n    enable: false,\n    accessors: [accessors.default],\n    propertyDirectory: { scopeKey: ':scope', maxDepth: 10 },\n    assign: 'addEventListener', deassign: 'removeEventListener',\n    bindListener: true,\n    scopeKey: ':scope',\n    methods: {\n      assign: {\n        // Event Target Add Event Listener\n        addEventListener: function addEventListener($eventDefinition, $target) {\n          const { type, listener, settings } = $eventDefinition;\n          const { options, useCapture } = settings;\n          return $target['addEventListener'](type, listener, options || useCapture)\n        },\n        // Event Emitter On\n        on: function on($eventDefinition, $target) {\n          const { type, listener } = $eventDefinition;\n          return $target['on'](type, listener)\n        },\n        // Event Emitter Once\n        once: function once($eventDefinition, $target) {\n          const { type, listener } = $eventDefinition;\n          return $target['once'](type, listener)\n        },\n      },  \n      deassign: {\n        // Event Target Remove Event Listener\n        removeEventListener: function removeEventListener($eventDefinition, $target) {\n          const { type, listener, settings } = $eventDefinition;\n          const { options, useCapture } = settings;\n          return $target['removeEventListener'](type, listener, options || useCapture)\n        },\n        // Event Emitter Off\n        off: function off($eventDefinition, $target) {\n          const { type, listener } = $eventDefinition;\n          return $target['off'](type, listener)\n        },\n      },\n    },\n  };\n  for(const [$settingKey, $settingValue] of Object.entries($settings)) {\n    switch($settingKey) {\n      case 'propertyDirectory':\n        Settings[$settingKey] = Object.assign(Settings[$settingKey], $settingValue);\n        break\n      case 'accessors':\n        Settings[$settingKey] = $settingValue;\n        Settings.propertyDirectory[$settingKey] = $settingValue;\n        break\n      case 'methods': \n        Settings[$settingKey] = recursiveAssign(Settings[$settingKey], $settingValue);\n        break\n      case 'enableEvents': break\n      default: \n        Settings[$settingKey] = $settingValue;\n        break\n    }\n  }\n  return Settings\n};\n\nclass EventDefinition {\n  #settings\n  #context\n  #listener\n  #enable = false\n  #path\n  #assigned = []\n  #deassigned = []\n  #_targets = []\n  #_assign\n  #_deassign\n  constructor($settings, $context) { \n    if(!$settings || !$context) { return this }\n    this.#settings = Settings($settings);\n    this.#context = $context;\n    this.enable = this.settings.enable;\n  }\n  get settings() { return this.#settings }\n  get path() { return this.settings.path }\n  get type() { return this.settings.type }\n  get listener() {\n    if(this.#listener !== undefined) { return this.#listener }\n    const listener = this.settings.listener;\n    if(this.settings.bindListener === true) {\n      this.#listener = listener.bind(this.#context);\n    }\n    else { this.#listener = listener; }\n    return this.#listener\n  }\n  get enable() { return this.#enable }\n  set enable($enable) {\n    const targets = this.#targets;\n    const assigned = this.#assigned;\n    const deassigned = this.#deassigned;\n    assigned.length = 0;\n    deassigned.length = 0;\n    iterateTargetElements: \n    for(const $targetElement of targets) {\n      const { path, target, enable } = $targetElement;\n      const settings = this.settings;\n      if(enable === $enable) { continue iterateTargetElements }\n      if($enable === true) {\n        try {\n          this.#assign(target);\n          $targetElement.enable = $enable;\n          assigned.push($targetElement);\n          \n        }\n        catch($err) { console.error($err); }\n      }\n      else if($enable === false) {\n        try {\n          this.#deassign(target);\n          $targetElement.enable = $enable;\n          deassigned.push($targetElement);\n        }\n        catch($err) { console.error($err); }\n      }\n    }\n    this.#enable = $enable;\n  }\n  get assigned() { return this.#assigned }\n  get deassigned() { return this.#deassigned }\n  get #target() { return this.settings.target }\n  get #targets() {\n    const pretargets = this.#_targets;\n    const targetPaths = [];\n    const targets = [];\n    if(this.#target) {\n      for(const $target of [].concat(this.#target)) {\n        const pretargetElement = pretargets.find(\n          ($pretarget) => $pretarget?.path === this.path\n        );\n        if(pretargetElement !== undefined) {\n          targets.push(pretargetElement);\n        }\n        else if(pretargetElement === undefined) {\n          targets.push({\n            path: this.path,\n            target: $target,\n            enable: false,\n          });\n        }\n      }\n    }\n    else if(typeOf(this.path) === 'string') {\n      const propertyPathMatcher = outmatch(this.path, {\n        separator: '.',\n      });\n      const propertyDirectory = this.#propertyDirectory;\n      iteratePropertyPaths: \n      for(const $propertyPath of propertyDirectory) {\n        const propertyPathMatch = propertyPathMatcher($propertyPath);\n        if(propertyPathMatch === true) { targetPaths.push($propertyPath); }\n      }\n      if(this.path.match(`${this.#scopeKey}`)) { targetPaths.unshift(this.#scopeKey); }\n      iterateTargetPaths: \n      for(const $targetPath of targetPaths) {\n        const pretargetElement = pretargets.find(\n          ($pretarget) => $pretarget.path === $targetPath\n        );\n        let target = this.#context;\n        let targetElement;\n        const pathKeys = $targetPath.split('.');\n        let pathKeysIndex = 0;\n        iterateTargetPathKeys: \n        while(pathKeysIndex < pathKeys.length) {\n          let pathKey = pathKeys[pathKeysIndex];\n          if(pathKey === this.#scopeKey) { break iterateTargetPathKeys }\n          iterateTargetAccessors: \n          for(const $targetAccessor of this.settings.accessors) {\n            target = $targetAccessor(target, pathKey);\n            if(target !== undefined) { break iterateTargetAccessors }\n          }\n          pathKeysIndex++;\n        }\n        if(target !== undefined) {\n          if(target === pretargetElement?.target) {\n            targetElement = pretargetElement;\n          }\n          else if(typeof target === 'object') {\n            targetElement = {\n              path: $targetPath,\n              target: target,\n              enable: false,\n            };\n          }\n        }\n        if(targetElement !== undefined) { targets.push(targetElement); }\n      }\n    }\n    this.#_targets = targets;\n    return this.#_targets\n  }\n  get #scopeKey() { return this.settings.scopeKey }\n  get #assign() {\n    if(this.#_assign !== undefined) { return this.#_assign }\n    this.#_assign = this.settings.methods.assign[this.settings.assign].bind(null, this);\n    return this.#_assign\n  }\n  get #deassign() {\n    if(this.#_deassign !== undefined) { return this.#_deassign }\n    this.#_deassign = this.settings.methods.deassign[this.settings.deassign].bind(null, this);\n    return this.#_deassign\n  }\n  get #methods() { return this.settings.methods }\n  get #propertyDirectory() {\n    const propertyDirectorySettings = ({\n      accessors: this.settings.accessors\n    }, this.settings.propertyDirectory);\n    return propertyDirectory(this.#context, propertyDirectorySettings)\n  }\n}\n\nclass Core extends EventTarget {\n  static implement = function ($target, $settings) {\n    if(!$target || !$settings) { return undefined }\n    const settings = Settings$1($settings);\n    const events = [];\n    Object.defineProperties($target, {\n      // Get Events\n      [settings.propertyDefinitions.getEvents]: {\n        enumerable: false, writable: false, \n        value: function getEvents() {\n          if(!arguments[0]) { return events }\n          const getEvents = [];\n          const $filterEvents = [].concat(arguments[0]);\n          iterateFilterEvents: \n          for(const $filterEvent of $filterEvents) {\n            iterateEvents: \n            for(const $event of events) {\n              let match;\n              iterateEventFilterProperties: \n              for(const [\n                $filterEventPropertyKey, $filterEventPropertyValue\n              ] of Object.entries($filterEvent)) {\n                let eventFilterMatch;\n                if($filterEventPropertyKey === 'listener') {\n                  eventFilterMatch = (\n                    $event.settings[$filterEventPropertyKey] === $filterEventPropertyValue\n                  );\n                }\n                else {\n                  eventFilterMatch = (\n                    $event[$filterEventPropertyKey] === $filterEventPropertyValue\n                  );\n                }\n                if(match !== false) { match = eventFilterMatch; }\n                else { break iterateEventFilterProperties }\n              }\n              if(match === true) { getEvents.push($event); }\n            }\n          }\n          return getEvents\n        }\n      },\n      // Add Events\n      [settings.propertyDefinitions.addEvents]: {\n        enumerable: false, writable: false, \n        value: function addEvents() {\n          if(!arguments.length) { return $target }\n          let $addEvents = expandEvents(arguments[0]);\n          iterateAddEvents: \n          for(let $addEvent of $addEvents) {\n            const event = {};\n            for(const $settingKey of [\n              'accessors', 'assign', 'deassign', 'propertyDirectory'\n            ]) {\n              const settingValue = settings[$settingKey];\n              if(settingValue !== undefined) { event[$settingKey] = settingValue; }\n            }\n            recursiveAssign(event, $addEvent);\n            const eventDefinition = new EventDefinition(event, $target);\n            events.push(eventDefinition);\n          }\n          return $target\n        },\n      },\n      // Remove Events\n      [settings.propertyDefinitions.removeEvents]: {\n        enumerable: false, writable: false, \n        value: function removeEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0]);\n          if($events.length === 0) return $target\n          let eventsIndex = events.length - 1;\n          while(eventsIndex > -1) {\n            const event = events[eventsIndex];\n            if($events.includes(event)) {\n              event.enable = false;\n              events.splice(eventsIndex, 1);\n            }\n            eventsIndex--;\n          }\n          return $target\n        }\n      },\n      // Enable Events\n      [settings.propertyDefinitions.enableEvents]: {\n        enumerable: false, writable: false, \n        value: function enableEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0]);\n          if($events.length === 0) return $target\n          iterateEvents: for(const $event of $events) { $event.enable = true; }\n          return $target\n        },\n      },\n      // Disable Events\n      [settings.propertyDefinitions.disableEvents]: {\n        enumerable: false, writable: false, \n        value: function disableEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0]);\n          if($events.length === 0) return $target\n          iterateEvents: for(const $event of $events) { $event.enable = false; }\n          return $target\n        },\n      },\n      // Reenable Events\n      [settings.propertyDefinitions.reenableEvents]: {\n        enumerable: false, writable: false, \n        value: function reenableEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0]);\n          for(const $event of $events) {\n            $event.enable = false;\n            $event.enable = true;\n          }\n          return $target\n        },\n      },\n    });\n    if(settings.events) { $target[settings.propertyDefinitions.addEvents](settings.events); }\n    if(settings.enableEvents === true) { $target[settings.propertyDefinitions.enableEvents](); }\n    return $target\n  }\n  constructor($settings = {}) {\n    super();\n    return Core.implement(this, $settings)\n  }\n}\n\nexport { Core, index as Coutil };\n//# sourceMappingURL=core-plex.js.map\n","export default class Verification extends EventTarget {\n  #settings\n  #message\n  #pass\n  constructor($settings) {\n    super()\n    this.#settings = $settings\n  }\n  get type() { return this.#settings.type }\n  get definition() { return this.#settings.definition }\n  get key() { return this.#settings.key }\n  get value() { return this.#settings.value }\n  get message() {\n    if(this.#message !== undefined) return this.#message\n    if(\n      this.pass !== undefined &&\n      this.#message === undefined\n    ) {\n      this.#message = this.#settings.messages[String(this.pass)](this)\n    }\n    return this.#message\n  }\n  get pass() { return this.#pass }\n  set pass($pass) {\n    if(this.#pass === undefined) {\n      this.#pass = $pass\n    }\n  }\n}","import { Coutil } from 'core-plex'\nconst { recursiveAssign } = Coutil\nimport Verification from '../verification/index.js'\nconst Messages = {\n  'true': ($verification) => `${$verification.pass}`,\n  'false': ($verification) => `${$verification.pass}`,\n}\nexport default class Validator extends EventTarget {\n  #boundValidate\n  #definition\n  #schema\n  constructor($definition = {}, $schema) {\n    super()\n    this.definition = Object.freeze(\n      Object.assign({ messages: Messages }, $definition)\n    )\n    this.schema = $schema\n  }\n  get definition() { return this.#definition }\n  set definition($definition) { this.#definition = $definition }\n  get schema() { return this.#schema }\n  set schema($schema) {\n    if(this.#schema !== undefined) { return this.#schema }\n    this.#schema = $schema\n    return this.#schema\n  }\n  get type() { return this.definition.type }\n  get messages() { return this.definition.messages }\n  get validate() {\n    function validate($key, $value, $source, $target) {\n      const definition = this.definition\n      const verification = new Verification({\n        type: this.type,\n        definition: definition,\n        key: $key,\n        value: $value,\n        messages: recursiveAssign({}, this.messages, definition.messages),\n      })\n      verification.pass = definition.validate(...arguments)\n      return verification\n    }\n    this.#boundValidate = validate.bind(this)\n    return this.#boundValidate\n  }\n}","import { Coutil } from 'core-plex'\nconst { recursiveAssign, typedObjectLiteral } = Coutil\nimport Schema from '../../index.js'\nimport Validator from '../../validator/index.js'\nexport default class RequiredValidator extends Validator {\n  constructor($definition, $schema) {\n    super(Object.assign($definition, {\n      type: 'required',\n      validate: ($key, $value, $source, $target) => {\n        const definition = this.definition\n        let pass\n        const { requiredProperties, requiredPropertiesSize, type } = this.schema\n        if(requiredPropertiesSize === 0/* || definition.value === false*/) { pass = true }\n        else if(type === 'object') {\n          const corequiredContextProperties = typedObjectLiteral(type)\n          const corequiredModelProperties = typedObjectLiteral(type)\n          iterateRequiredProperties: \n          for(const [\n            $requiredPropertyName, $requiredProperty\n          ] of Object.entries(requiredProperties)) {\n            const requiredProperty = recursiveAssign({}, $requiredProperty)\n            // ?:START\n            requiredProperty.required.value = false\n            // ?:STOP\n            if($requiredPropertyName === $key) { continue iterateRequiredProperties }\n            const sourcePropertyDescriptor = Object.getOwnPropertyDescriptor($source, $requiredPropertyName)\n            if(sourcePropertyDescriptor !== undefined) {\n              corequiredContextProperties[$requiredPropertyName] = requiredProperty\n              corequiredModelProperties[$requiredPropertyName] = sourcePropertyDescriptor.value\n            }\n            else if($target) {\n              const targetPropertyDescriptor = Object.getOwnPropertyDescriptor($target, $requiredPropertyName)\n              if(targetPropertyDescriptor !== undefined) { continue iterateRequiredProperties }\n              else { corequiredContextProperties[$requiredPropertyName] = requiredProperty }\n            }\n            else {\n              corequiredContextProperties[$requiredPropertyName] = requiredProperty\n            }\n          }\n          const corequiredContextPropertiesSize = Object.keys(corequiredContextProperties).length\n          const corequiredModelPropertiesSize = Object.keys(corequiredModelProperties).length\n          if(corequiredContextPropertiesSize === 0 && corequiredModelPropertiesSize === 0) { pass = true }\n          else if(corequiredContextPropertiesSize !== corequiredModelPropertiesSize) { pass = false }\n          else {\n            const coschema = new Schema(corequiredContextProperties, Object.assign({}, this.schema.options, {\n              required: false \n            }))\n            const validations = []\n            for(const [\n              $corequiredContextPropertyName, $corequiredContextProperty\n            ] of Object.entries(corequiredModelProperties)) {\n              const corequiredModelPropertyName = $corequiredContextPropertyName\n              const corequiredModelProperty = corequiredModelProperties[corequiredModelPropertyName]\n              const coschemaPropertyValidation = coschema.validateProperty(\n                $corequiredContextPropertyName, corequiredModelProperty,\n                $source, $target\n              )\n              validations.push(coschemaPropertyValidation)\n            }\n            const nonvalidValidation = (validations.find(($validation) => $validation.valid === false))\n            if(nonvalidValidation) { pass = false }\n            else { pass = true }\n          }\n        }\n        else if(type === 'array') {\n          pass = true\n        }\n        return pass\n      }\n    }), $schema)\n  }\n}","import { Coutil } from 'core-plex'\nconst {\n  typeOf, variables\n} = Coutil\nimport Validator from '../../validator/index.js'\nconst { PrimitiveKeys, PrimitiveValues } = variables\nexport default class TypeValidator extends Validator {\n  constructor($definition = {}, $schema) {\n    super(Object.assign($definition, {\n      type: 'type',\n      validate: ($key, $value) => {\n        const definition = this.definition\n        let pass\n        let typeOfDefinitionValue = typeOf(definition.value)\n        typeOfDefinitionValue = (typeOfDefinitionValue === 'function')\n          ? typeOf(definition.value())\n          : typeOfDefinitionValue\n        const typeOfModelValue = typeOf($value)\n        if(typeOfModelValue === 'undefined') { pass = false }\n        else if(typeOfDefinitionValue === 'undefined') { pass = true }\n        else { pass = (typeOfDefinitionValue === typeOfModelValue) }\n        return pass\n      },\n    }), $schema)\n  }\n}","import Validator from '../../validator/index.js'\nexport default class RangeValidator extends Validator {\n  constructor($definition = {}, $schema) {\n    super(Object.assign($definition, {\n      type: 'range',\n      validate: ($key, $value) => {\n        const definition = this.definition\n        let pass\n        if(typeof $value !== 'number') { pass = false }\n        else {\n          const { min, max } = definition\n          let validMin, validMax\n          if(min !== undefined) { validMin = ($value >= min.value) }\n          else { validMin = true }\n          if(max !== undefined) { validMax = ($value <= max.value) }\n          else { validMax = true }\n          if(validMin && validMax) { pass = true }\n          else { pass = false}\n        }\n        return pass\n      }\n    }), $schema)\n  }\n}","import Validator from '../../validator/index.js'\nexport default class LengthValidator extends Validator {\n  constructor($definition = {}, $schema) {\n    super(Object.assign($definition, {\n      type: 'length',\n      validate: ($key, $value) => {\n        const definition = this.definition\n        let pass\n        if(typeof $value !== 'string') { pass = false }\n        else {\n          const { min, max } = definition\n          let validMin, validMax\n          if(min !== undefined) {\n            validMin = ($value.length >= min.value)\n          }\n          else { validMin = true }\n          if(max !== undefined) {\n            validMax = ($value.length <= max.value)\n          }\n          else { validMax = true }\n          if(validMin && validMax) { pass = true }          \n          else { pass = false}\n        }\n        return pass\n      },\n    }), $schema)\n  }\n}","import Validator from '../../validator/index.js'\nexport default class EnumValidator extends Validator {\n  constructor($definition = {}, $schema) {\n    super(Object.assign($definition, {\n      type: 'enum',\n      validate: ($key, $value) => {\n        const definition = this.definition\n        let pass\n        if(![\n          'string', 'number', 'boolean'\n        ].includes(typeof $value)) { pass = false}\n        else {\n          const enumeration = definition.value\n          pass = enumeration.includes($value)\n        }\n        return pass\n      },\n    }), $schema)\n  }\n}","import Validator from '../../validator/index.js'\nexport default class MatchValidator extends Validator {\n  constructor($settings = {}, $schema) {\n    super(Object.assign($settings, {\n      type: 'match',\n      validate: ($key, $value) => {\n        const definition = this.settings\n        let pass\n        if(![\n          'string', 'number', 'boolean'\n        ].includes(typeof $value)) { pass = false}\n        else {\n          const match = definition\n          const valueMatch = (match.value.exec($value) !== null)\n        }\n        return pass ? true : false\n      },\n    }), $schema)\n  }\n}","export default class Handler {\n  #context\n  constructor($context) {\n    this.#context = $context\n  }\n}","import { Coutil } from 'core-plex'\nconst {\n  expandTree, isPropertyDefinition, typedObjectLiteral, typeOf, variables\n} = Coutil\nimport {\n  RequiredValidator, TypeValidator, RangeValidator, LengthValidator, EnumValidator, MatchValidator\n} from '../validators/index.js'\nimport Schema from '../index.js'\nimport Handler from './handler/index.js'\nexport default class Context extends EventTarget {\n  #properties\n  #schema\n  #type\n  #proxy\n  #target\n  #_handler\n  constructor($properties, $schema) {\n    super()\n    this.#properties = $properties\n    this.schema = $schema\n    return this.proxy\n  }\n  get required() { return this.schema.options.required }\n  get schema() { return this.#schema }\n  set schema($schema) {\n    if(this.#schema !== undefined) return\n    this.#schema = $schema\n    return this.#schema\n  }\n  get type() {\n    if(this.#type !== undefined) return this.#type\n    this.#type = typeOf(typedObjectLiteral(this.#properties))\n    return this.#type\n  }\n  get proxy() {\n    if(this.#proxy !== undefined) return this.#proxy\n    this.#proxy = new Proxy(this.target, this.#handler)\n    return this.#proxy\n  }\n  get #handler() {\n    if(this.#_handler !== undefined) return this.#_handler\n    this.#_handler = new Handler(this)\n    return this.#_handler\n  }\n  get target() {\n    if(this.#target !== undefined) return this.#target\n    let properties\n    const target = typedObjectLiteral(this.type)\n    if(this.type === 'array') {\n      properties = this.#properties.slice(0, 1)\n    }\n    else if(this.type === 'object') {\n      properties = this.#properties\n    }\n    iterateProperties: \n    for(const [\n      $propertyKey, $propertyDefinition\n    ] of Object.entries(properties)) {\n      const typeOfPropertyDefinition = typeOf($propertyDefinition)\n      let propertyDefinition\n      // Property Definition: Schema\n      if($propertyDefinition instanceof Schema) {\n        propertyDefinition = $propertyDefinition\n      }\n      // Property Definition: String, Number, Boolean, Object, Array, null, undefined\n      else if(Variables.TypeValues.includes($propertyDefinition)) {\n        propertyDefinition = expandTree($propertyDefinition, 'type.value')\n      }\n      // Property Definition: 'string', 'number', 'bigint', 'boolean', 'object', 'array', 'null', 'undefined'\n      else if(Variables.TypeKeys.includes($propertyDefinition)) {\n        propertyDefinition = expandTree(Variables.TypeValues[\n          Variables.TypeKeys.indexOf($propertyDefinition)\n        ], 'type.value')\n      }\n      // Property Definition: Object Literal\n      else if(\n        typeOfPropertyDefinition === 'object' || \n        typeOfPropertyDefinition === 'array'\n      ) {\n        let propertyDefinitionIsPropertyDefinition = isPropertyDefinition($propertyDefinition)\n        if(propertyDefinitionIsPropertyDefinition === false) {\n          const { path } = this.schema\n          const schemaPath = (path)\n            ? [path, $propertyKey].join('.')\n            : String($propertyKey)\n          const parent = this.schema\n          propertyDefinition = new Schema($propertyDefinition, Object.assign({}, this.schema.options, {\n            path: schemaPath,\n            parent: parent,\n          }))\n        }\n        else if(propertyDefinitionIsPropertyDefinition === true) {\n          propertyDefinition = { validators: [] }\n          // Property Definition: \n          iteratePropertyValidators: \n          for(const [\n            $propertyValidatorName, $propertyValidator\n          ] of Object.entries($propertyDefinition)) {\n            if($propertyValidatorName === 'validators') { continue iteratePropertyValidators }\n            const typeOfPropertyValidator = typeOf($propertyValidator)\n            let propertyValidator\n            if(typeOfPropertyValidator && typeOfPropertyValidator === 'object') {\n              propertyValidator = $propertyValidator\n            }\n            else {\n              propertyValidator = {\n                value: $propertyValidator\n              }\n            }\n            propertyDefinition[$propertyValidatorName] = propertyValidator\n          }\n          $propertyDefinition.validators = $propertyDefinition.validators || []\n          iterateAlterPropertyValidators: \n          for(const $propertyDefinitionValidator of $propertyDefinition.validators) {\n            for(const $Validator of [\n              RequiredValidator, TypeValidator, RangeValidator, LengthValidator, EnumValidator, MatchValidator\n            ]) {\n              if($propertyDefinitionValidator instanceof $Validator === false) {\n                propertyDefinition.validators.push($propertyDefinitionValidator)\n              }\n            }\n          }\n        }\n      }\n      if(propertyDefinition instanceof Schema === false) {\n        propertyDefinition = this.#parsePropertyDefinition(propertyDefinition)\n      }\n      target[$propertyKey] = propertyDefinition\n    }\n    this.#target = target\n    return this.#target\n  }\n  #parsePropertyDefinition($propertyDefinition) {\n    const propertyDefinition = $propertyDefinition\n    propertyDefinition.validators = []\n    const validators = new Map()\n    const contextRequired = this.required\n    const {\n      required,\n      type,\n      range, min, max, \n      length, minLength, maxLength, \n      match,\n    } = propertyDefinition\n    // Required\n    if(contextRequired === true) { validators.set('required', Object.assign({}, propertyDefinition.required, {\n      type: 'required', value: true, validator: RequiredValidator \n    })) }\n    else if(required?.value === true) { validators.set('required', Object.assign({}, propertyDefinition.required, {\n      type: 'required', value: true, validator: RequiredValidator  }))\n    }\n    else { validators.set('required', Object.assign({}, propertyDefinition.required, {\n      type: 'required', value: false, validator: RequiredValidator \n    })) }\n    // Type\n    if(type) { validators.set('type', Object.assign({}, type, {\n      type: 'type', validator: TypeValidator\n    })) }\n    else { validators.set('type', Object.assign({}, type, {\n      type: 'type', value: undefined, validator: TypeValidator\n    })) }\n    // Range\n    if(range) { validators.set('range', Object.assign({}, range, {\n      type: 'range', validator: RangeValidator\n    })) }\n    else if(min || max) { validators.set('range', Object.assign({}, {\n      type: 'range', min, max, validator: RangeValidator\n    })) }\n    // Length\n    if(length) { validators.set('length', Object.assign({}, length, {\n      type: 'length', validator: LengthValidator\n    })) }\n    else if(minLength || maxLength) { validators.set('length', Object.assign({}, {\n      type: 'length', min: minLength, max: maxLength, validator: LengthValidator\n    })) }\n    // Enum\n    if(propertyDefinition.enum) { validators.set('enum', Object.assign({}, propertyDefinition.enum, {\n      type: 'enum', validator: EnumValidator\n    })) }\n    // Match\n    if(match) { validators.set('match', Object.assign({}, match, {\n      type: 'match', validator: MatchValidator\n    })) }\n    delete propertyDefinition.min\n    delete propertyDefinition.max\n    delete propertyDefinition.minLength\n    delete propertyDefinition.maxLength\n    for(const [\n      $validatorName, $validatorSettings\n    ] of validators.entries()) {\n      const ValidatorClass = $validatorSettings.validator\n      propertyDefinition[$validatorName] = $validatorSettings\n      propertyDefinition.validators.push(new ValidatorClass($validatorSettings, this.schema))\n    }\n    return propertyDefinition\n  }\n}\n","const Messages = {\n  'true': ($validation) => `${$validation.valid}`,\n  'false': ($validation) => `${$validation.valid}`,\n}\nexport default class Validation extends EventTarget {\n  #settings\n  #properties\n  #valid\n  #advance = []\n  #deadvance = []\n  #unadvance = []\n  constructor($settings = {}) {\n    super()\n    this.#settings = Object.assign({ messages: Messages }, $settings)\n  }\n  // get type() { return this.#settings.type }\n  get definition() { return this.#settings.definition }\n  get path() { return this.#settings.path }\n  get key() { return this.#settings.key }\n  get value() { return this.#settings.value }\n  get properties() {\n    if(this.#properties !== undefined) return this.#properties\n    this.#properties = this.#settings.properties\n    return this.#properties\n  }\n  get advance() { return this.#advance }\n  get deadvance() { return this.#deadvance }\n  get unadvance() { return this.#unadvance }\n  get valid() { return this.#valid }\n  set valid($valid) {\n    if(this.#valid === undefined) {\n      this.#valid = $valid\n    }\n  }\n}","import { Coutil } from 'core-plex'\nconst { typedObjectLiteral, typeOf } = Coutil\nimport Model from '../model/index.js'\nimport Context from './context/index.js'\nimport Verification from './verification/index.js'\nimport Validation from './validation/index.js'\nimport { RequiredValidator } from './validators/index.js'\nimport Options from './options/index.js' \n\nexport default class Schema extends EventTarget{\n  #properties\n  options\n  #type\n  #context\n  #parent\n  #key\n  #path\n  #requiredProperties\n  #requiredPropertiesSize\n  constructor($properties = {}, $options = {}) {\n    super()\n    this.#properties = $properties\n    this.options = Options($options)\n  }\n  get type() {\n    if(this.#type !== undefined) return this.#type\n    this.#type = typeOf(this.#properties)\n    return this.#type\n  }\n  get parent() {\n    if(this.#parent !== undefined)  return this.#parent\n    this.#parent = (this.options.parent) ? this.options.parent : null\n    return this.#parent\n  }\n  get root() {\n    let root = this\n    iterateParents: \n    while(root) {\n      if([undefined, null].includes(root.parent)) { break iterateParents }\n      root = root.parent\n    }\n    return root\n  }\n  get key() {\n    if(this.#key !== undefined) { return this.#key }\n    if(this.path) { this.#key = this.path.split('.').pop() }\n    else { this.#key = null }\n    return this.#key\n  }\n  get path() {\n    if(this.#path !== undefined)  return this.#path\n    this.#path = (this.options.path)\n      ? String(this.options.path)\n      : null\n    return this.#path\n  }\n  get required() { return this.options.required }\n  get requiredProperties() {\n    if(this.#requiredProperties !== undefined) return this.#requiredProperties\n    let requiredProperties = typedObjectLiteral(this.type)\n    iterateContextEntries: \n    for(const [$propertyKey, $propertyDefinition] of Object.entries(this.context)) {\n      if($propertyDefinition.required?.value === true) { requiredProperties[$propertyKey] = $propertyDefinition }\n    }\n    this.#requiredProperties = requiredProperties\n    return this.#requiredProperties\n  }\n  get requiredPropertiesSize() {\n    if(this.#requiredPropertiesSize !== undefined) return this.#requiredPropertiesSize\n    this.#requiredPropertiesSize = Object.keys(this.requiredProperties).length\n    return this.#requiredPropertiesSize\n  }\n  get verificationType() { return this.options.verificationType }\n  get context() {\n    if(this.#context !== undefined) return this.#context\n    this.#context = new Context(this.#properties, this)\n    return this.#context\n  }\n  #parseValidateArguments() {\n    let $arguments = [...arguments]\n    let $sourceName, $source, $target\n    if($arguments.length === 1) {\n      $sourceName = null; $source = $arguments.shift(); $target = null\n    }\n    else if($arguments.length === 2 && typeof $arguments[0] === 'string') {\n      $sourceName = $arguments.shift(); $source = $arguments.shift(); $target = null\n    }\n    else if($arguments.length === 2 && typeof $arguments[0] === 'object') {\n      $sourceName = null; $source = $arguments.shift(); $target = $arguments.shift()\n    }\n    else if($arguments.length === 3 && typeof $arguments[0] === 'string') {\n      $sourceName = $arguments.shift(); $source = $arguments.shift(); $target = $arguments.shift()\n    }\n    return { $sourceName, $source, $target }\n  }\n  validate() {\n    const { $sourceName, $source, $target } = this.#parseValidateArguments(...arguments)\n    const validation = new Validation({\n      definition: this.context,\n      path: this.path,\n      key: $sourceName, \n      value: $source,\n      properties: typedObjectLiteral(this.type),\n    })\n    const sourceProperties = Object.entries($source)\n    let sourcePropertyIndex = 0\n    let deadvancedRequiredProperties = []\n    // Iterate Model Properties \n    while(sourcePropertyIndex < sourceProperties.length) {\n      const [$sourceKey, $sourceValue] = sourceProperties[sourcePropertyIndex]\n      const propertyValidation = this.validateProperty($sourceKey, $sourceValue, $source, $target)\n      const deadvancedRequiredPropertyValidation = propertyValidation.deadvance.filter(\n        ($verification) => $verification.type === 'required'\n      )\n      validation.properties[$sourceKey] = propertyValidation\n      if(propertyValidation.valid === true) { validation.advance.push(propertyValidation) } \n      else if(propertyValidation.valid === false) { validation.deadvance.push(propertyValidation) } \n      else if(propertyValidation.valid === undefined) { validation.unadvance.push(propertyValidation )}\n      deadvancedRequiredProperties = deadvancedRequiredProperties.concat(deadvancedRequiredPropertyValidation)\n      sourcePropertyIndex++\n    }\n    if(this.required === true) {\n      if(validation.deadvance.length) { validation.valid = false }\n      else if(validation.advance.length) { validation.valid = true }\n      else if(validation.unadvance.length) { validation.valid = undefined }\n      else { validation.valid = false }\n    }\n    else if(this.required === false) {\n      if(deadvancedRequiredProperties.length) { validation.valid = false }\n      else if(validation.advance.length) { validation.valid = true }\n      else if(validation.deadvance.length) { validation.valid = false }\n      else if(validation.unadvance.length) { validation.valid = undefined }\n      else { validation.valid = false }\n    }\n    return validation\n  }\n  #parseValidatePropertyArguments() {\n    let $arguments = [...arguments]\n    let [$key, $value, $source, $target] = $arguments\n    // const ModelClassString = Model.toString()\n    const sourceIsModelClassInstance = ($source instanceof Model)\n    $source = (sourceIsModelClassInstance) ? $source.valueOf() : $source\n    const $targetIsModelClassInstance = ($target instanceof Model)\n    $target = ($targetIsModelClassInstance) ? $target.valueOf() : $target\n    return { $key, $value, $source, $target }\n  }\n  validateProperty() {\n    const { $key, $value, $source, $target } = this.#parseValidatePropertyArguments(...arguments)\n    let propertyDefinition\n    if(this.type === 'array') { propertyDefinition = this.context[0] }\n    else if(this.type === 'object') { propertyDefinition = this.context[$key] }\n    const { path } = this\n    const propertyValidationPath = (path) ? [path, $key].join('.') : $key\n    const propertyValidation = new Validation({\n      // type: this.required,\n      definition: propertyDefinition,\n      path: propertyValidationPath,\n      key: $key,\n      value: $value,\n    })\n    // Context Value: Undefined\n    if(propertyDefinition === undefined) {\n      const verification = new Verification({\n        type: null,\n        definition: null,\n        key: $key,\n        value: $value,\n      }, this)\n      verification.pass = false\n      propertyValidation.unadvance.push(verification)\n    }\n    // Context Value: Object\n    else if(propertyDefinition instanceof Schema) {\n      let validation\n      if($target && $target[$key]) { validation = propertyDefinition.validate($key, $value, $target[$key]) }\n      else { validation = propertyDefinition.validate($key, $value) }\n      if(validation.valid === true) { propertyValidation.advance.push(validation) }\n      else if(validation.valid === false) { propertyValidation.deadvance.push(validation) }\n      else if(validation.valid === undefined) { propertyValidation.unadvance.push(validation) }\n    }\n    // Context Value: Primitive\n    else {\n      iterateContextValueValidators:\n      for(const [$validatorIndex, $validator] of Object.entries(propertyDefinition.validators)) {\n        const verification = $validator.validate($key, $value, $source, $target)\n        if(verification.pass === true) { propertyValidation.advance.push(verification) }\n        else if(verification.pass === false) { propertyValidation.deadvance.push(verification) }\n        else if(verification.pass === undefined) { propertyValidation.unadvance.push(verification) }\n        if(this.verificationType === 'one' && propertyValidation.deadvance.length) { break iterateContextValueValidators }\n      }\n    }\n    if(propertyValidation.deadvance.length) { propertyValidation.valid = false }\n    else if(propertyValidation.advance.length) { propertyValidation.valid = true }\n    else if(propertyValidation.unadvance.length) { propertyValidation.valid = false }\n    return propertyValidation\n  }\n}","export default (...$options) => Object.assign({\n  required: false,\n  verificationType: 'all', // 'one'\n}, ...$options)","import { Coutil } from 'core-plex'\nconst { recursiveAssign } = Coutil\nexport default ($options) => recursiveAssign({\n  path: null, \n  parent: null, \n  enableValidation: true, \n  validationEvents: {\n    'validProperty:$key': true,\n    'validProperty': true,\n    'nonvalidProperty:$key': true,\n    'nonvalidProperty': true,\n  },\n  pathkey: true,\n  subpathError: false,\n  assignmentMethod: 'set',\n  methods: {\n    accessor: {\n      get: {\n        events: {\n          'get': true,\n          'getProperty': true,\n          'getProperty:$key': true,\n        },\n      },\n      set: {\n        recursive: true,\n        events: {\n          'set': true,\n          'setProperty': true,\n          'setProperty:$key': true,\n        },\n      },\n      delete: {\n        events: {\n          'delete': true,\n          'deleteProperty': true,\n          'deleteProperty:$key': true,\n        },\n      },\n    },\n    array: {\n      concat: {\n        events: {\n          'concatValue:$index': true,\n          'concatValue': true,\n          'concat': true,\n        }\n      },\n      copyWithin: {\n        events: {\n          'copyWithinIndex:$index': true,\n          'copyWithinIndex': true,\n          'copyWithin': true,\n        }\n      },\n      fill: {\n        events: {\n          'fillIndex:$index': true,\n          'fillIndex': true,\n          'fill': true,\n        }\n      },\n      pop: {\n        events: { 'pop': true  },\n      },\n      push: {\n        events: {\n          'pushProp:$index': true,\n          'pushProp': true,\n          'push': true,\n        }\n      },\n      reverse: {\n        events: { 'reverse': true  },\n      },\n      shift: {\n        events: { 'shift': true  },\n      },\n      splice: {\n        events: {\n          'spliceDelete:$index': true,\n          'spliceDelete': true,\n          'spliceAdd:$index': true,\n          'spliceAdd': true,\n          'splice': true,\n        }\n      },\n      unshift: {\n        events: {\n          'unshiftProp:$index': true,\n          'unshiftProp': true,\n          'unshift': true,\n        }\n      },\n    },\n    object: {\n      assign: {\n        sourceTree: true,\n        events: {\n          'assignSourceProperty:$key': true,\n          'assignSourceProperty': true,\n          'assignSource': true,\n          'assign': true,\n        },\n      },\n      defineProperties: {\n        descriptorTree: true,\n        events: { 'defineProperties': true },\n      },\n      defineProperty: {\n        descriptorTree: true,\n        events: {\n          'defineProperty': true,\n          'defineProperty:$key': true,\n        },\n      },\n      freeze: {\n        recursive: true,\n        events: {\n          'freezeProperty': true,\n          'freeze': true,\n        },\n      },\n      seal: {\n        recursive: true,\n        events: {\n          'sealProperty': true,\n          'seal': true,\n        },\n      },\n    },\n  },\n}, $options)","export default class ModelEvent extends CustomEvent {\n  #settings\n  #model\n  #key\n  constructor($type, $settings, $model) {\n    super($type, $settings)\n    this.#settings = $settings\n    this.#model = $model\n    if(!this.model.parent) return this\n  }\n  get model() { return this.#model }\n  get key() {\n    if(this.#key !== undefined) { return this.#key }\n    if(this.path) { this.#key = this.path.split('.').pop() }\n    else { this.#key = null }\n    return this.#key\n  }\n  get change() { return this.#settings.change }\n  get value() { return this.#settings.value }\n  get path() { return this.#settings.path }\n  get detail() { return this.#settings.detail }\n}","import Model from '../index.js'\nexport default class Change {\n  #_keyter = false \n  #_preter = false \n  #_anter = false \n  #_conter = false\n  #keyter\n  #preter\n  #anter\n  #conter\n  constructor($settings = {}) {\n    for(const [$key, $value] of Object.entries($settings)) { this[$key] = $value }\n  }\n  get preter() { return this.#preter }\n  set preter($preter) {\n    if(this.#_preter === true) { return this.#preter }\n    if($preter instanceof Model) { this.#preter = $preter.valueOf() }\n    else { this.#preter = $preter }\n    this.#_preter = true\n  }\n  get anter() { return this.#anter }\n  set anter($anter) {\n    if(this.#_anter === true) { return this.#anter }\n    if($anter instanceof Model) { this.#anter = $anter.valueOf() }\n    else { this.#anter = $anter }\n    this.#_anter = true\n  }\n  get conter() {\n    if(\n      this.#_conter === true ||\n      [this.#_preter, this.#_anter].includes(false)\n    ) { return this.#conter }\n    const preter = JSON.stringify(this.preter)\n    const anter = JSON.stringify(this.anter)\n    console.log(\"preter\",preter)\n    console.log(\"anter\",anter)\n    let conter\n    if(anter !== preter) { conter = true }\n    else { conter = false }\n    this.#conter = conter\n    this.#_conter = true\n    return this.#conter\n  }\n}","export default class ValidatorEvent extends CustomEvent {\n  #settings\n  #model\n  #key\n  #path\n  #value\n  #valid\n  constructor($type, $settings, $model) {\n    super($type)\n    this.#settings = $settings\n    this.#model = $model\n  }\n  get key() {\n    if(this.#key !== undefined) { return this.#key }\n    this.#key = this.#settings.key\n    return this.#key\n  }\n  get path() {\n    if(this.#path !== undefined) { return this.#path }\n    this.#path = this.#settings.path\n    return this.#path\n  }\n  get value() {\n    if(this.#value !== undefined) { return this.#value }\n    this.#value = this.#settings.value\n    return this.#value\n  }\n  get valid() {\n    if(this.#valid !== undefined) { return this.#valid }\n    this.#valid = this.#settings.valid\n    return this.#valid\n  }\n}","import { Coutil } from 'core-plex'\nconst { recursiveAssign, typedObjectLiteral } = Coutil\nimport Model from '../../../index.js'\nimport Change from '../../../change/index.js'\nimport { ModelEvent, ValidatorEvent } from '../../../events/index.js'\nexport default function assign($model, $options, ...$sources) {\n  const { path, target, schema } = $model\n  const { events, sourceTree, enableValidation, validationEvents } = $options\n  const assignedSources = []\n  const assignChange = new Change({ preter: $model })\n  // Iterate Sources\n  iterateAssignSources: \n  for(let $source of $sources) {\n    let assignedSource\n    const assignSourceChange = new Change({ preter: $model })\n    if(Array.isArray($source)) { assignedSource = [] }\n    else if(typeof $source === 'object') { assignedSource = {} }\n    // Iterate Source Propertiess\n    iterateSourceProperties:\n    for(let [$sourceKey, $sourceValue] of Object.entries($source)) {\n      const assignSourcePropertyChange = new Change({ preter: target[$sourceKey] })\n      const assignSourcePropertyKeyChange = new Change({ preter: target[$sourceKey] })\n      // Validation\n      if(schema && enableValidation) {\n        const validSourceProperty = schema.validateProperty(\n          $sourceKey, $sourceValue, $source, $model\n        )\n        if(validationEvents) {\n          let type, propertyType\n          const validatorEventPath = (path) ? [path, $sourceKey].join('.') : String($sourceKey)\n          if(validSourceProperty.valid) {\n            type = 'validProperty'\n            propertyType = ['validProperty', $sourceKey].join(':')\n          }\n          else {\n            type = 'nonvalidProperty'\n            propertyType = ['nonvalidProperty', $sourceKey].join(':')\n          }\n          for(const $eventType of [type, propertyType]) {\n            $model.dispatchEvent(new ValidatorEvent($eventType, validSourceProperty, $model))\n          }\n        }\n        if(!validSourceProperty.valid) { continue iterateSourceProperties }\n      }\n      // Source Prop: Object Type\n      let sourceValue\n      if($sourceValue && typeof $sourceValue === 'object') {\n        if($sourceValue instanceof Model) {\n          sourceValue = $sourceValue.valueOf()\n        }\n        // Subschema\n        let subschema\n        if(schema?.type === 'array') { subschema = schema.context[0] }\n        else if(schema?.type === 'object') { subschema = schema.context[$sourceKey] }\n        else { subschema = null }\n        // Model\n        const modelPath = (path)\n          ? [path, $sourceKey].join('.')\n          : String($sourceKey)\n        let modelTypedLiteral = typedObjectLiteral($sourceValue)\n        // Assignment\n        // Source Tree: False\n        if(sourceTree === false) {\n          sourceValue = new Model(modelTypedLiteral, subschema, \n            recursiveAssign({}, $model.options, {\n              path: modelPath,\n              parent: $model,\n            })\n          )\n        }\n        // Source Tree: true\n        else {\n          // Assignment: Existing Model Instance\n          if(target[$sourceKey] instanceof Model) {\n            sourceValue = target[$sourceKey]\n          }\n          // Assignment: New Model Instance\n          else {\n            sourceValue = new Model(modelTypedLiteral, subschema, \n              recursiveAssign({}, $model.options, {\n                path: modelPath,\n                parent: $model,\n              })\n            )\n          }\n        }\n        const assignment = { [$sourceKey]: sourceValue }\n        Object.assign(target, assignment)\n        Object.assign(assignedSource, assignment)\n        $model.retroReenableEvents()\n        sourceValue.assign($sourceValue)\n      }\n      // Source Prop: Primitive Type\n      else {\n        sourceValue = $sourceValue\n        const assignment = { [$sourceKey]: sourceValue }\n        Object.assign(target, assignment)\n        Object.assign(assignedSource, assignment)\n        $model.retroReenableEvents()\n      }\n      if(events) {\n        const modelEventPath = (path) ? [path, $sourceKey].join('.') : String($sourceKey)\n        if(events['assignSourceProperty:$key']) {\n          const type = ['assignSourceProperty', $sourceKey].join(':')\n          assignSourcePropertyKeyChange.anter = target[$sourceKey]\n          $model.dispatchEvent(\n            new ModelEvent(type, {\n              path: modelEventPath,\n              value: sourceValue,\n              change: assignSourcePropertyKeyChange,\n              detail: {\n                source: assignedSource,\n              }\n            }, $model)\n          )\n        }\n        if(events['assignSourceProperty']) {\n          assignSourcePropertyChange.anter = target[$sourceKey]\n          $model.dispatchEvent(\n            new ModelEvent('assignSourceProperty', {\n              path: modelEventPath,\n              value: sourceValue,\n              change: assignSourcePropertyChange,\n              detail: {\n                source: assignedSource,\n              }\n            }, $model)\n          )\n        }\n      }\n    }\n    assignedSources.push(assignedSource)\n    // Model Event: Assign Source\n    if(events && events['assignSource']) {\n      assignSourceChange.anter = $model\n      $model.dispatchEvent(\n        new ModelEvent('assignSource', {\n          path,\n          change: assignSourceChange,\n          detail: {\n            source: assignedSource,\n          },\n        }, $model)\n      )\n    }\n  }\n  // Model Event: Assign\n  if(events && events['assign']) {\n    assignChange.anter = $model\n    $model.dispatchEvent(\n      new ModelEvent('assign', { \n        path,\n        change: assignChange,\n        detail: {\n          sources: assignedSources,\n        },\n      }, $model)\n    )\n  }\n  return $model\n}","import { Coutil } from 'core-plex'\nconst { impandTree, typedObjectLiteral } = Coutil\nimport Model from '../../../index.js'\nimport Change from '../../../change/index.js'\nimport { ModelEvent } from '../../../events/index.js'\nexport default function defineProperties($model, $options, $propertyDescriptors) {\n  const { events } = $options\n  const { path } = $model\n  const propertyDescriptorEntries = Object.entries($propertyDescriptors)\n  const impandPropertyDescriptors = impandTree($propertyDescriptors, 'value')\n  let properties = typedObjectLiteral($model.valueOf())\n  const definePropertiesChange = new Change({ preter: $model })\n  // Iterate Property Descriptors\n  iteratePropertyDescriptors: \n  for(const [\n    $propertyKey, $propertyDescriptor\n  ] of propertyDescriptorEntries) {\n    // Property Descriptor Value Is Direct Instance Of Array/object/Map\n    $model.defineProperty($propertyKey, $propertyDescriptor, impandPropertyDescriptors)\n  }\n  // Define Properties Event\n  if(events && events['defineProperties']) {\n    // Define Properties Validator Event\n    definePropertiesChange.anter = $model\n    $model.dispatchEvent(\n      new ModelEvent(\n        'defineProperties',\n        {\n          path,\n          value: $model.valueOf(),\n          detail: {\n            descriptors: $propertyDescriptors,\n          },\n        },\n        $model\n      )\n    )\n  }\n  return $model\n}","import { Coutil } from 'core-plex'\nconst { typedObjectLiteral } = Coutil\nimport Model from '../../../index.js'\nimport Change from '../../../change/index.js'\nimport { ModelEvent, ValidatorEvent } from '../../../events/index.js'\nexport default function defineProperty($model, $options, $propertyKey, $propertyDescriptor) {\n  const { descriptorTree, events } = $options\n  const { target, path, schema } = $model\n  const { enableValidation, validationEvents } = $options\n  const propertyValue = $propertyDescriptor.value\n  const targetPropertyDescriptor = Object.getOwnPropertyDescriptor(target, $propertyKey) || {}\n  const targetPropertyValue = targetPropertyDescriptor.value\n  const definePropertyChange = new Change({ preter: targetPropertyValue })\n  const definePropertyKeyChange = new Change({ preter: targetPropertyValue })\n  const targetPropertyValueIsModelInstance = (\n    targetPropertyValue instanceof Model\n  ) ? true : false\n  // Validation\n  if(schema && enableValidation) {\n    const validProperty = schema.validateProperty($propertyKey, propertyValue, $model)\n    if(validationEvents) {\n      let type, propertyType\n      const validatorPath = (path)\n        ? [path, $propertyKey].join('.')\n        : String($propertyKey)\n      if(validProperty.valid) {\n        type = 'validProperty'\n        propertyType = ['validProperty', $propertyKey].join(':')\n      }\n      else {\n        type = 'nonvalidProperty'\n        propertyType = ['nonvalidProperty', $propertyKey].join(':')\n      }\n      for(const $eventType of [type, propertyType]) {\n        // $model.enableEvents({ enable: true })\n        $model.dispatchEvent(new ValidatorEvent($eventType, validProperty, $model))\n      }\n    }\n    if(!validProperty.valid) { return $model }\n  }\n  // Property Descriptor Value: Object Type\n  if(typeof propertyValue === 'object') {\n    // Subschema\n    let subschema\n    if(schema.type === 'array') { subschema = schema.context[0] }\n    else if(schema.type === 'object') { subschema = schema.context[$propertyKey] }\n    else { subschema = undefined}\n    // Root Property Descriptor Value: Existent Model Instance\n    const modelPath = (path)\n      ? [path, $propertyKey].join('.')\n      : String($propertyKey)\n    if(targetPropertyValueIsModelInstance) {\n      // Descriptor Tree: true\n      if(descriptorTree === true) {\n        // propertyValue = Object.assign(propertyValue, { path: modelPath, parent: $model })\n        targetPropertyValue.defineProperties(propertyValue)\n      }\n      // Descriptor Tree: false\n      else {\n        Object.defineProperty(target, $propertyKey, $propertyDescriptor)\n      }\n    }\n    // Root Property Descriptor Value: New Model Instance\n    else {\n      let _target = typedObjectLiteral(propertyValue)\n      const modelObject = new Model(\n        _target, subschema, {\n          path: modelPath,\n          parent: $model,\n        }\n      )\n      modelObject.retroReenableEvents()\n      // Root Define Properties, Descriptor Tree\n      if(descriptorTree === true) {\n        modelObject.defineProperties(propertyValue)\n        target[$propertyKey] = modelObject\n      } else \n      // Root Define Properties, No Descriptor Tree\n      if(descriptorTree === false) {\n        Object.defineProperty(target, $propertyKey, $propertyDescriptor)\n      }\n    }\n  }\n  // Property Descriptor Value: Primitive Type\n  else {\n    Object.defineProperty(target, $propertyKey, $propertyDescriptor)\n  }\n  // $model.enableEvents({ enable: true })\n  // Define Property Event\n  if(events) {\n    const modelEventPath = (path)\n      ? [path, $propertyKey].join('.')\n      : String($propertyKey)\n    if(events['defineProperty:$key']) {\n      definePropertyKeyChange.anter = target[$sourceKey]\n      const type = ['defineProperty', $propertyKey].join(':')\n      $model.dispatchEvent(\n        new ModelEvent(type, {\n          path: modelEventPath,\n          value: propertyValue,\n          change: definePropertyKeyChange,\n          detail: {\n            prop: $propertyKey,\n            descriptor: $propertyDescriptor,\n          },\n        }, $model\n      ))\n    }\n    if(events['defineProperty']) {\n      definePropertyChange.anter = target[$sourceKey]\n      $model.dispatchEvent(\n        new ModelEvent('defineProperty', {\n          path: modelEventPath,\n          value: propertyValue,\n          change: definePropertyChange,\n          detail: {\n            prop: $propertyKey,\n            descriptor: $propertyDescriptor,\n          },\n        }, $model\n      ))\n    }\n  }\n  return $model\n}","import assign from './assign/index.js'\nimport defineProperties from './defineProperties/index.js'\nimport defineProperty from './defineProperty/index.js'\nimport freeze from './freeze/index.js'\nimport seal from './seal/index.js'\nexport default {\n  assign,\n  defineProperties,\n  defineProperty,\n  freeze,\n  seal,\n}","import Model from '../../../index.js'\nimport { ModelEvent } from '../../../events/index.js'\nexport default function freeze($model, $options) {\n  const { recursive, events } = $options\n  const { target } = $model\n  if(recursive === true) {\n    iterateProperties: \n    for(const [\n      $propertyKey, $propertyValue\n    ] of Object.entries(target)) {\n      if($propertyValue instanceof Model) {\n        $propertyValue.freeze()\n        if(events && events['freezeProperty']) {\n          $model.dispatchEvent(\n            new ModelEvent(\n              'freezeProperty',\n              { path: $propertyValue.path },\n              $model\n            )\n          )\n        }\n      }\n    }\n  }\n  Object.freeze(target)\n  if(events && events['freeze']) {\n    $model.dispatchEvent(\n      new ModelEvent(\n        'freeze',\n        { path: $model.path },\n        $model\n      )\n    )\n  }\n  return $model\n}","import Model from '../../../index.js'\nimport { ModelEvent } from '../../../events/index.js'\nexport default function seal($model, $options) {\n  const { recursive, events } = $options\n  const { target } = $model\n  if(recursive === true) {\n    iterateProperties: \n    for(const [\n      $propertyKey, $propertyValue\n    ] of Object.entries(target)) {\n      if($propertyValue instanceof Model) {\n        $propertyValue.seal()\n        if(events && events['sealProperty']) {\n          $model.dispatchEvent(\n            new ModelEvent(\n              'sealProperty',\n              { path: $propertyValue.path },\n              $model\n            )\n          )\n        }\n      }\n    }\n  }\n  Object.seal(target)\n  if(events && events['seal']) {\n    $model.dispatchEvent(\n      new ModelEvent(\n        'seal',\n        { path: $model.path },\n        $model\n      )\n    )\n  }\n  return $model\n}","import Concat from './concat/index.js'\nimport CopyWithin from './copy-within/index.js'\nimport Fill from './fill/index.js'\nimport Pop from './pop/index.js'\nimport Push from './push/index.js'\nimport Reverse from './reverse/index.js'\nimport Shift from './shift/index.js'\nimport Splice from './splice/index.js'\nimport Unshift from './unshift/index.js'\nexport default {\n  concat: Concat,\n  copyWithin: CopyWithin,\n  fill: Fill,\n  pop: Pop,\n  push: Push,\n  reverse: Reverse,\n  shift: Shift,\n  splice: Splice,\n  unshift: Unshift,\n}","import Model from '../../../index.js'\nimport { ModelEvent } from '../../../events/index.js'\nexport default function concat($model, $options) {\n  const { target, path, schema } = $model\n  const { enableValidation, validationEvents, events } = $options\n  const $arguments = [...arguments].reduce(($arguments, $argument) => {\n    if(Array.isArray($argument)) { $arguments.push(...$argument) }\n    else { $arguments.push($argument) }\n    return $arguments\n  }, [])\n  let valueIndex = target.length\n  const values = []\n  let targetConcat = [...Array.from(target)]\n  let model\n  iterateValues: \n  for(const $value of $arguments) {\n    // Validation: Value\n    if(schema && enableValidation) {\n      const validValue = schema.validateProperty(valueIndex, $subvalue, {}, $model)\n      if(schema &&validationEvents) {\n        let type, propertyType\n        const validatorPath = (path)\n          ? [path, valueIndex].join('.')\n          : String(valueIndex)\n        if(validValue.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', valueIndex].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', valueIndex].join('')\n        }\n        for(const $eventType of [type, propertyType]) {\n          $model.dispatchEvent(new ValidatorEvent($eventType, validValue, $model))\n        }\n      }\n      if(!validValue.valid) { valueIndex++; continue iterateValues }\n    }\n    const modelPath = (path)\n      ? [path, valueIndex].join('.')\n      : String(valueIndex)\n    // Value: Object Type\n    if(typeof $value === 'object') {\n      // Value: Model\n      if($value instanceof Model) { $value = $value.valueOf() }\n      let subschema = schema?.context[0] || null\n      const value = new Model($value, subschema, {\n        path: modelPath,\n        parent: $model,\n      })\n      values[valueIndex] = value\n    }\n    // Value: Primitive Type\n    else {\n      values[valueIndex] = $value\n    }\n    targetConcat = Array.prototype.concat.call(targetConcat, values[valueIndex])\n    // $model.enableEvents({ enable: true })\n    if(events) {\n      const modelEventPath = (path)\n        ? [path, valueIndex].join('.')\n        : String(valueIndex)\n      if(events['concatValue']) {\n        $model.dispatchEvent(\n          new ModelEvent('concatValue', {\n            path: modelEventPath,\n            value: values[valueIndex],\n            detail: {\n              valueIndex,\n              value: values[valueIndex],\n            },\n          }, $model)\n        )\n      }\n      if(events['concatValue:$index']) {\n        const type = ['concatValue', ':', valueIndex].join('')\n        $model.dispatchEvent(\n          new ModelEvent('concatValue', {\n            path: modelEventPath,\n            value: values[valueIndex],\n            detail: {\n              valueIndex,\n              value: values[valueIndex],\n            },\n          }, $model)\n        )\n      }\n    }\n    valueIndex++\n  }\n  model = new Model(targetConcat, schema, $model.options)\n  if(events && events['concat']) {\n    $model.dispatchEvent(\n      new ModelEvent('concat', {\n        path,\n        detail: {\n          values: model,\n        },\n      }, $model)\n    )\n  }\n  return model\n}","import { ModelEvent } from '../../../events/index.js'\nexport default function copyWithin($model, $options) {\n  const { target, path } = $model\n  const { enableValidation, validationEvents, events } = $options\n  const $arguments = [...arguments]\n  const copyTarget = (\n    arguments[0] >= 0\n  ) ? arguments[0]\n    : target.length = arguments[0]\n  const start = (\n    arguments[1] >= 0\n  ) ? arguments[1]\n    : target.length + arguments[1]\n  const end = (\n    arguments[2] === undefined\n  ) ? target.length\n    : (\n    arguments[2] >= 0\n  ) ? arguments[2]\n    : target.length + arguments[2]\n  const copiedItems = []\n  let copyIndex = start\n  let targetIndex = copyTarget\n  iterateCopyIndex: \n  while(copyIndex < end) {\n    const copyItem = target[copyIndex]\n    copiedItems.push(copyItem)\n    Array.prototype.copyWithin.call(\n      target,\n      targetIndex,\n      copyIndex,\n      copyIndex + 1\n    )\n    // $model.enableEvents({ enable: true })\n    // Array Copy Within Index Event Data\n    if(events) {\n      const modelEventPath = (path)\n        ? [path, copyIndex].join('.')\n        : String(copyIndex)\n      if(events['copyWithinIndex']) {\n        $model.dispatchEvent(\n          new ModelEvent(\n            'copyWithinIndex',\n            {\n              path: modelEventPath,\n              value: copyItem,\n              detail: {\n                target: targetIndex,\n                start: copyIndex,\n                end: copyIndex + 1,\n                item: copyItem,\n              },\n            },\n            $model\n          )\n        )\n      }\n      if(events['copyWithinIndex:$index']) {\n        const type  = ['copyWithinIndex', ':', copyIndex].join('')\n        $model.dispatchEvent(\n          new ModelEvent(\n            type,\n            {\n              path: modelEventPath,\n              value: copyItem,\n              detail: {\n                target: targetIndex,\n                start: copyIndex,\n                end: copyIndex + 1,\n                item: copyItem,\n              },\n            },\n            $model\n          )\n        )\n      }\n    }\n    copyIndex++\n    targetIndex++\n  }\n  // Array Copy Within Event\n  if(events && events['copyWithin']) {\n    $model.dispatchEvent(\n      new ModelEvent(\n        'copyWithin',\n        {\n          path,\n          detail: {\n            target: copyTarget,\n            start: start,\n            end: end,\n            items: copiedItems,\n          },\n        },\n        $model\n      )\n    )\n  }\n  return $model\n}","import Model from '../../../index.js'\nimport { ModelEvent } from '../../../events/index.js'\nexport default function fill($model, $options) {\n  const { target, path, schema } = $model\n  const { enableValidation, validationEvents, events } = $options\n  const $arguments = [...arguments]\n  let $start\n  if(typeof $arguments[1] === 'number') {\n    $start = ($arguments[1] >= 0)\n      ? $arguments[1]\n      : target.length + $arguments[1]\n  }\n  else { $start = 0 }\n  let $end\n  if(typeof $arguments[2] === 'number') {\n    $end = ($arguments[2] >= 0)\n      ? $arguments[2]\n      : target.length + $arguments[2]\n  } else { $end = target.length }\n  let fillIndex = $start\n  iterateFillIndexes: \n  while(\n    fillIndex < target.length &&\n    fillIndex < $end\n  ) {\n    if(schema && enableValidation) {\n      let validValue = schema.validate(validValue)\n      if(validationEvents) {\n        let type, propertyType\n        const validatorPath = (path)\n          ? [path, fillIndex].join('.')\n          : String(fillIndex)\n        if(validValue.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', fillIndex].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', fillIndex].join('')\n        }\n        for(const $eventType of [type, propertyType]) {\n          $model.dispatchEvent(new ValidatorEvent($eventType, validValue, $model))\n        }\n      }\n      if(!validValue.valid) { continue iterateFillIndexes }\n    }\n    const modelPath = (path)\n      ? [path, fillIndex].join('.')\n      : String(fillIndex)\n    let value = $arguments[0]\n    if(typeof value === 'object') {\n      if(value instanceof Model) { value = value.valueOf() }\n      const subschema = schema?.context[0] || null\n      value = new Model(value, subschema, {\n        path: modelPath,\n        parent: $model,\n      })\n    }\n    Array.prototype.fill.call(\n      target, value, fillIndex, fillIndex + 1\n    )\n    // $model.enableEvents({ enable: true })\n    // Array Fill Index Event\n    if(events) {\n      const modelEventPath = (path)\n        ? [path, fillIndex].join('.')\n        : String(fillIndex)\n      if(events['fillIndex']) {\n        $model.dispatchEvent(\n          new ModelEvent('fillIndex', {\n            path: modelEventPath, \n            value: value,\n            detail: {\n              start: fillIndex,\n              end: fillIndex + 1,\n              value,\n            },\n          }, $model)\n        )\n      }\n      if(events['fillIndex:$index']) {\n        const type = ['fillIndex', ':', fillIndex].join('')\n        $model.dispatchEvent(\n          new ModelEvent(type, {\n            path: modelEventPath, \n            detail: {\n              start: fillIndex,\n              end: fillIndex + 1,\n              value,\n            },\n          }, $model)\n        )\n      }\n    }\n    fillIndex++\n  }\n  // Array Fill Event\n  if(events && events['fill']) {\n    $model.dispatchEvent(\n      new ModelEvent('fill', {\n        path,\n        detail: {\n          start: $start,\n          end: $end,\n          value,\n        },\n      },\n      $model)\n    )\n  }\n  return $model\n}","import { ModelEvent } from '../../../events/index.js'\nexport default function pop($model, $options) {\n  const { events } = $options\n  const { target, path } = $model\n  const popElement = Array.prototype.pop.call(target)\n  // $model.enableEvents({ enable: true })\n  const popElementIndex = target.length - 1\n  // Array Pop Event\n  if(events && events['pop']) {\n    const modelEventPath = (path)\n      ? [path, popElementIndex].join('.')\n      : String(popElementIndex)\n    $model.dispatchEvent(\n      new ModelEvent(\n        'pop',\n        {\n          path: modelEventPath,\n          value: popElement,\n          detail: {\n            elementIndex: popElementIndex,\n            element: popElement,\n          },\n        },\n        $model\n      )\n    )\n  }\n  return popElement\n}","import Model from '../../../index.js'\nimport { ModelEvent } from '../../../events/index.js'\nexport default function push($model, $options, ...$elements) {\n  const { events } = $options\n  const { target, path, schema } = $model\n  const { enableValidation, validationEvents } = $model.options\n  const elements = []\n  let elementsIndex = 0\n  iterateElements:\n  for(let $element of $elements) {\n    // Validation\n    if(schema && enableValidation) {\n      const validElement = schema.validateProperty(elementsIndex, $element, {}, $model)\n      if(validationEvents) {\n        let type, propertyType\n        const validatorPath = (path)\n          ? [path, elementsIndex].join('.')\n          : String(elementsIndex)\n        if(validElement.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', elementsIndex].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', elementsIndex].join('')\n        }\n        for(const $eventType of [type, propertyType]) {\n          $model.dispatchEvent(new ValidatorEvent($eventType, validElement, $model))\n        }\n      }\n      if(!validElement.valid) { return target.length }\n    }\n    const modelPath = (path)\n      ? [path, elementsIndex].join('.')\n      : String(elementsIndex)\n    if(typeof $element === 'object') {\n      if($element instanceof Model) { $element = $element.valueOf() }\n      const subschema = schema?.context[0] || null\n      $element = new Model($element, subschema, {\n        path: modelPath,\n        parent: $model,\n      })\n      elements.push($element)\n      Array.prototype.push.call(target, $element)\n    } else {\n      elements.push($element)\n      Array.prototype.push.call(target, $element)\n    }\n    // $model.enableEvents({ enable: true })\n    if(events) {\n      const modelEventPath = (path)\n        ? [path, '.', elementsIndex].join('')\n        : String(elementsIndex)\n      if(events['pushProp']) {\n        $model.dispatchEvent(\n          new ModelEvent('pushProp', {\n            path: modelEventPath,\n            value: elements[elementsIndex],\n            detail: {\n              elementsIndex,\n              element: elements[elementsIndex],\n            },\n          }, $model)\n        )\n      }\n      if(events['pushProp:$index']) {\n        const type = ['pushProp', ':', elementsIndex].join('')\n        $model.dispatchEvent(\n          new ModelEvent(type, {\n            path: modelEventPath,\n            value: elements[elementsIndex],\n            detail: {\n              elementsIndex,\n              element: elements[elementsIndex],\n            },\n          }, $model)\n        )\n      }\n    }\n    elementsIndex++\n  }\n  // Push Event\n  if(events && events['push']) {\n    $model.dispatchEvent(\n      new ModelEvent('push', {\n        path,\n        detail: {\n          elements,\n        },\n      }, $model)\n    )\n  }\n  return target.length\n}","import { ModelEvent } from '../../../events/index.js'\nexport default function reverse($model, $options) {\n  const { events } = $options\n  const { target, path } = $model\n  Array.prototype.reverse.call(target, ...arguments)\n  // $model.enableEvents({ enable: true })\n  if(events && events['reverse']) {\n    $model.dispatchEvent(\n      new ModelEvent(\n        'reverse',\n        {\n          path,\n          detail: {\n            reference: target\n          },\n        },\n        $model\n      )\n    )\n  }\n  return $model\n}","import { ModelEvent } from '../../../events/index.js'\nexport default function shift($model, $options) {\n  const { events } = $options\n  const { target, path } = $model\n  const shiftElement = Array.prototype.shift.call(target)\n  // $model.enableEvents({ enable: true })\n  const shiftElementIndex = 0\n  // Array Shift Event\n  if(events && events['shift']) {\n    const modelEventPath = (path)\n      ? [path, shiftElementIndex].join('.')\n      : String(shiftElementIndex)\n    $model.dispatchEvent(\n      new ModelEvent(\n        'shift',\n        {\n          path: modelEventPath,\n          value: shiftElement,\n          detail: {\n            elementIndex: shiftElementIndex,\n            element: shiftElement,\n          },\n        },\n        $model\n      )\n    )\n  }\n  return shiftElement\n}","import Model from '../../../index.js'\nimport { ModelEvent } from '../../../events/index.js'\nexport default function splice($model, $options) {\n  const { events } = $options\n  const { target, path, schema } = $model\n  const { enableValidation, validationEvents } = $options\n  const $arguments = [...arguments]\n  const $start = ($arguments[0] >= 0)\n    ? $arguments[0]\n    : target.length + $arguments[0]\n  const $deleteCount = ($arguments[1] <= 0)\n    ? 0\n    : (\n      $arguments[1] === undefined ||\n      $start + $arguments[1] >= target.length\n    ) ? target.length - $start\n      : $arguments[1]\n  const $addItems = $arguments.slice(2)\n  const addCount = $addItems.length\n  const deleteItems = []\n  let deleteItemsIndex = 0\n  spliceDelete:\n  while(deleteItemsIndex < $deleteCount) {\n    const deleteItem = Array.prototype.splice.call(target, $start, 1)[0]\n    // $model.enableEvents({ enable: true })\n    deleteItems.push(deleteItem)\n    // Array Splice Delete Event\n    if(events) {\n      const modelEventPath = (path)\n        ? [path, deleteItemsIndex].join('.')\n        : String(deleteItemsIndex)\n      if(events['spliceDelete']) {\n        $model.dispatchEvent(\n          new ModelEvent('spliceDelete', {\n            path: modelEventPath,\n            value: deleteItem,\n            detail: {\n              index: $start + deleteItemsIndex,\n              deleteIndex: deleteItemsIndex,\n              deleteItem: deleteItem,\n            },\n          }, $model)\n        )\n      }\n      if(events['spliceDelete:$index']) {\n        const type = ['spliceDelete', ':', deleteItemsIndex].join('')\n        $model.dispatchEvent(\n          new ModelEvent(type, {\n            path: modelEventPath,\n            value: deleteItem,\n            detail: {\n              index: $start + deleteItemsIndex,\n              deleteIndex: deleteItemsIndex,\n              deleteItem: deleteItem,\n            },\n          }, $model)\n        )\n      }\n    }\n    deleteItemsIndex++\n  }\n  let addItemsIndex = 0\n  spliceAdd: \n  while(addItemsIndex < addCount) {\n    let addItem = $addItems[addItemsIndex]\n    // Validation\n    if(schema && enableValidation) {\n      const validAddItem = schema.validateProperty(elementIndex, element, {}, $model)\n      if(validationEvents) {\n        let type, propertyType\n        const validatorEventPath = (path)\n          ? [path, addItemsIndex].join('.')\n          : String(addItemsIndex)\n        // $model.enableEvents({ enable: true })\n        if(validAddItem.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', addItemsIndex].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', addItemsIndex].join('')\n        }\n        for(const $eventType of [type, propertyType]) {\n          $model.dispatchEvent(new ValidatorEvent($eventType, validAddItem, $model))\n        }\n      }\n      if(!validAddItem.valid) { addItemsIndex++; continue spliceAdd }\n    }\n    const modelPath = (path)\n      ? [path, addItemsIndex].join('.')\n      : String(addItemsIndex)\n    let startIndex = $start + addItemsIndex\n    // Add Item: Object Type\n    if(typeof addItem === 'object') {\n      if(addItem instanceof Model) { addItem = addItem.valueOf() }\n      const subschema = schema?.context[0] || null\n      addItem = new Model(addItem, subschema, {\n        path: modelPath,\n        parent: $model,\n      })\n      Array.prototype.splice.call(target, startIndex, 0, addItem)\n    }\n    // Add Item: Primitive Type\n    else {\n      Array.prototype.splice.call(target, startIndex, 0, addItem)\n    }\n    // $model.enableEvents({ enable: true })\n    // Array Splice Add Event\n    if(events) {\n      const modelEventPath = (path)\n        ? [path, addItemsIndex].join('.')\n        : String(addItemsIndex)\n      if(events['spliceAdd']) {\n        $model.dispatchEvent(\n          new ModelEvent('spliceAdd', {\n            path: modelEventPath,\n            value: addItem,\n            detail: {\n              index: $start + addItemsIndex,\n              addIndex: addItemsIndex,\n              addItem: addItem,\n            },\n          }, $model)\n        )\n      }\n      if(events['spliceAdd:$index']) {\n        const type = ['spliceAdd', ':', addItemsIndex].join('')\n        $model.dispatchEvent(\n          new ModelEvent(type, {\n            path: modelEventPath,\n            value: addItem,\n            detail: {\n              index: $start + addItemsIndex,\n              addIndex: addItemsIndex,\n              addItem: addItem,\n            },\n          }, $model)\n        )\n      }\n    }\n    addItemsIndex++\n  }\n  // Array Splice Event\n  if(events && events['splice']) {\n    $model.dispatchEvent(\n      new ModelEvent('splice', {\n        path,\n        detail: {\n          $start,\n          deleted: deleteItems,\n          added: $addItems,\n          length: target.length,\n        },\n      },\n      $model)\n    )\n  }\n  return deleteItems\n}","import Model from '../../../index.js'\nimport { ModelEvent, ValidatorEvent } from '../../../events/index.js'\nexport default function unshift($model, $options, ...$elements) {\n  const { events } = $options\n  const { target, path, schema } = $model\n  const { enableValidation, validationEvents } = $options\n  const elements = []\n  const elementsLength = $elements.length\n  let elementIndex = elementsLength - 1\n  let elementCoindex = 0\n  iterateElements:\n  while(elementIndex > -1) {\n    const elementsLength = $elements.length\n    let $element = $elements[elementIndex]\n    let element\n    const targetElement = target[elementIndex]\n    const targetElementIsModelInstance = (\n      targetElement instanceof Model\n    ) ? true : false\n    // Validation\n    if(schema && enableValidation) {\n      const validElement = schema.validateProperty(elementIndex, $element, {}, $model)\n      if(validationEvents) {\n        let type, propertyType\n        const validatorEventPath = (path)\n          ? [path, '.', elementCoindex].join('')\n          : elementCoindex\n        if(validElement.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', elementCoindex].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', elementCoindex].join('')\n        }\n        // $model.enableEvents({ enable: true })\n        for(const $eventType of [type, propertyType]) {\n          $model.dispatchEvent(new ValidatorEvent($eventType, validElement, $model))\n        }\n      }\n      if(!validElement.valid) { return $model.length }\n    }\n    // const change = {\n    //   preter: {\n    //     key: elementCoindex,\n    //     value: target[elementCoindex],\n    //   },\n    //   anter: {\n    //     key: elementCoindex,\n    //     value: undefined,\n    //   },\n    //   conter: undefined,\n    // }\n    // Element: Object Type\n    if(typeof $element === 'object') {\n      const subschema = schema?.context[0] || null\n      const modelPath = (path)\n        ? path.concat('.', elementCoindex)\n        : String(elementCoindex)\n      element = new Model($element, subschema, {\n        path: modelPath,\n        parent: $model,\n      })\n      elements.unshift(element)\n      Array.prototype.unshift.call(target, element)\n    }\n    // Element: Primitive Type\n    else {\n      element = $element\n      elements.unshift(element)\n      Array.prototype.unshift.call(target, $element)\n    }\n    // change.anter.value = element\n    // change.conter = (targetElementIsModelInstance)\n    //   ? (targetElement.toString() !== JSON.stringify(element))\n    //   : (JSON.stringify(targetElement) !== JSON.stringify(element))\n    // Array Unshift Prop Event\n    // $model.enableEvents({ enable: true })\n    if(events) {\n      const type = ['unshiftProp', elementCoindex].join(':')\n      const modelEventPath = (path)\n        ? [path, elementCoindex].join('.')\n        : String(elementCoindex)\n      if(events['unshiftProp']) {\n        $model.dispatchEvent(\n          new ModelEvent('unshiftProp', {\n            path: modelEventPath,\n            value: element,\n            // change,\n            detail: {\n              elementIndex: elementCoindex, \n              element: element,\n            },\n          }, $model)\n        )\n      }\n      if(events['unshiftProp:$index']) {\n        $model.dispatchEvent(\n          new ModelEvent(type, {\n            path: modelEventPath,\n            value: element,\n            // change,\n            detail: {\n              elementIndex: elementCoindex, \n              element: element,\n            },\n          }, $model)\n        )\n      }\n\n    }\n    elementIndex--\n    elementCoindex++\n  }\n  // Array Unshift Event\n  if(events && events['unshift'] && elements.length) {\n    $model.dispatchEvent(\n      new ModelEvent('unshift', {\n        path,\n        detail: {\n          elements,\n        },\n      },\n      $model)\n    )\n  }\n  return $model.length\n}","import { Coutil } from 'core-plex'\nconst { regularExpressions} = Coutil\nimport Model from '../../../../index.js'\nimport { ModelEvent } from '../../../../events/index.js'\nexport default function getContentProperty($model, $options, $path) {\n  const { target, path } = $model\n  // Arguments\n  const { events, pathkey, subpathError } = $options\n  // Path Key: true\n  if(pathkey === true) {\n    const subpaths = $path.split(new RegExp(regularExpressions.quotationEscape))\n    const propertyKey = subpaths.shift()\n    let propertyValue = target[propertyKey]\n    // Return: Subproperty\n    if(subpaths.length) {\n      // Subpath Error\n      if(subpathError === false && propertyValue === undefined) { return undefined }\n      return propertyValue.get(subpaths.join('.'), $options)\n    }\n    // Get Property Event\n    if(events) {\n      if(events['getProperty']) {\n        $model.dispatchEvent(\n          new ModelEvent('getProperty', {\n            path,\n            value: propertyValue,\n            detail: {\n              key: propertyKey,\n              value: propertyValue,\n            }\n          }, $model)\n        )\n      }\n      if(events['getProperty:$key']) {\n        const type = ['getProperty', ':', propertyKey].join('')\n        const _path = [path, '.', propertyKey].join('')\n        $model.dispatchEvent(\n          new ModelEvent(type, {\n            path: _path,\n            detail: {\n              value: propertyValue,\n            }\n          }, $model)\n        )\n      }\n    }\n    return propertyValue\n  }\n  // Path Key: false\n  else if(pathkey === false) {\n    const propertyValue = target[propertyKey]\n    return propertyValue\n  }\n}","import { Coutil } from 'core-plex'\nconst { recursiveAssign } = Coutil\nimport getContent from './getContent/index.js'\nimport getContentProperty from './getContentProperty/index.js'\nexport default function getProperty($model, $options, ...$arguments) {\n  let getProperty\n  const options = recursiveAssign({}, $model.options, $options)\n  if(typeof $arguments[0] === 'string') {\n    if($arguments.length === 2) { recursiveAssign(options, $arguments[1]) }\n    getProperty = getContentProperty($model, options, ...$arguments)\n  }\n  else {\n    if($arguments.length === 1) { recursiveAssign(options, $arguments[0]) }\n    getProperty = getContent($model, options, ...$arguments)\n  }\n  return getProperty\n}","import { Coutil } from 'core-plex'\nconst { recursiveAssign, regularExpressions} = Coutil\nimport Model from '../../../../index.js'\nimport Change from '../../../../change/index.js'\nimport { ModelEvent, ValidatorEvent } from '../../../../events/index.js'\nexport default function setContentProperty($model, $options, $path, $value) {\n  const { target, path, schema } = $model\n  const { enableValidation, validationEvents, events, pathkey, subpathError, recursive, source } = $options\n  // Path Key: true\n  if(pathkey === true) {\n    // Subpaths\n    const subpaths = $path.split(new RegExp(regularExpressions.quotationEscape))\n    // Property Key\n    const propertyKey = subpaths.shift()\n    // Property Value\n    let propertyValue\n    const modelPath = (path)\n      ? [path, propertyKey].join('.')\n      : String(propertyKey)\n    // Return: Subproperty\n    if(subpaths.length) {\n      if(recursive && target[propertyKey] === undefined) {\n        // Subschema\n        let subschema\n        if(schema?.type === 'array') { subschema = schema.context[0] }\n        else if(schema?.type === 'object') { subschema = schema.context[propertyKey] }\n        else { subschema = undefined }\n        // Submodel\n        let submodel\n        if(subschema?.type === 'array') { submodel = [] }\n        else if(subschema?.type === 'object') { submodel = {} }\n        else {\n          if(Number(propertyKey)) { submodel = [] }\n          else { submodel = {} }\n        }\n        propertyValue = new Model(submodel, subschema, recursiveAssign({}, $options, {\n          path: modelPath,\n          parent: $model,\n        }))\n      }\n      else {\n        propertyValue = target[propertyKey]\n      }\n      // Subpath Error\n      if(subpathError === false && propertyValue === undefined) { return undefined }\n      propertyValue.set(subpaths.join('.'), $value, $options)\n      return propertyValue\n    }\n    // Validation\n    if(schema && enableValidation) {\n      const validTargetProp = schema.validateProperty(propertyKey, $value, source, $model)\n      if(validationEvents) {\n        let type, propertyType\n        const validatorEventPath = (path)\n          ? [path, propertyKey].join('.')\n          : String(propertyKey)\n        if(validTargetProp.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', propertyKey].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', propertyKey].join('')\n        }\n        for(const $eventType of [type, propertyType]) {\n          $model.dispatchEvent(new ValidatorEvent($eventType, validTargetProp, $model))\n        }\n      }\n      if(!validTargetProp.valid) { return }\n    }\n    // Return: Property\n    // Value: Object Literal\n    if(typeof $value === 'object') {\n      // Value: Model\n      if($value instanceof Model) { $value = $value.valueOf() }\n      let subschema\n      let submodel\n      if(schema?.type === 'array') {\n        subschema = schema.context[0]\n        submodel = []\n      }\n      else if(schema?.type === 'object') {\n        subschema = schema.context[propertyKey]\n        submodel = {}\n      }\n      else { subschema = undefined }\n      propertyValue = new Model(submodel, subschema, recursiveAssign(\n        {}, $options, {\n          path: modelPath,\n          parent: $model,\n        }\n      ))\n      target[propertyKey] = propertyValue\n      $model.retroReenableEvents()\n      propertyValue.set($value)\n    }\n    // Value: Primitive Literal\n    else {\n      propertyValue = $value\n      target[propertyKey] = propertyValue\n    }\n    // Root Assignment\n    // Set Property Event\n    if(events) {\n      const modelEventPath = (path)\n        ? [path, propertyKey].join('.')\n        : String(propertyKey)\n      if(events['setProperty']) {\n        $model.dispatchEvent(\n          new ModelEvent('setProperty', {\n            path: modelEventPath, \n            value: propertyValue,\n            // change,\n            detail: {\n              key: propertyKey,\n              value: propertyValue,\n            }\n          }, $model)\n        )\n      }\n      if(events['setProperty:$key']) {\n        const type = ['setProperty', ':', propertyKey].join('')\n        $model.dispatchEvent(\n          new ModelEvent(type, {\n            path: modelEventPath, \n            value: propertyValue,\n            // change,\n            detail: {\n              value: propertyValue,\n            }\n          }, $model)\n        )\n      }\n    }\n    // Return Property Value\n    return propertyValue\n  }\n  // Path Key: false\n  else if(pathkey === false) {\n    let propertyKey = $path\n    // Property Value: Object\n    if(typeof $value === 'object') {\n      if($value instanceof Model) { $value = $value.valueOf() }\n      let subschema\n      let submodel\n      if(schema?.type === 'array') {\n        subschema = schema.context[0]\n        submodel = []\n      }\n      if(schema?.type === 'object') {\n        subschema = schema.context[propertyKey]\n        submodel = {}\n      }\n      else { subschema = undefined }\n      const modelPath = (path)\n        ? [path, propertyKey].join('.')\n        : String(propertyKey)\n      propertyValue = new Model(submodel, subschema, recursiveAssign(\n        {}, $options, {\n          path: modelPath,\n          parent: $model,\n        }\n      ))\n      target[propertyKey] = propertyValue\n      propertyValue.set($value)\n    }\n    // Property Value: Primitive Literal\n    else {\n      propertyValue = $value\n      target[propertyKey] = propertyValue\n    }\n    // Root Assignment\n    // Set Property Event\n    if(events) {\n      const modelEventPath = (path)\n        ? [path, propertyKey].join('.')\n        : String(propertyKey)\n      if(events['setProperty']) {\n        $model.dispatchEvent(\n          new ModelEvent('setProperty', {\n            path: modelEventPath, \n            value: propertyValue,\n            detail: {\n              key: propertyKey,\n              value: propertyValue,\n            }\n          }, $model)\n        )\n      }\n      if(events['setProperty:$key']) {\n        const type = ['setProperty', ':', propertyKey].join('')\n        $model.dispatchEvent(\n          new ModelEvent(type, {\n            path: modelEventPath, \n            value: propertyValue,\n            detail: {\n              value: propertyValue,\n            }\n          }, $model)\n        )\n      }\n    }\n    // Return Property Value\n    return propertyValue\n  }\n}","import { Coutil } from 'core-plex'\nconst { recursiveAssign } = Coutil\nimport setContent from './setContent/index.js'\nimport setContentProperty from './setContentProperty/index.js'\nexport default function setProperty($model, $options, ...$arguments) {\n  let setProperty\n  const options = recursiveAssign({}, $model.options, $options)\n  if(typeof $arguments[0] === 'string') {\n    if($arguments.length === 3) { recursiveAssign(options, $arguments[2]) }\n    setProperty = setContentProperty($model, options, ...$arguments)\n  }\n  else {\n    if($arguments.length === 2) { recursiveAssign(options, $arguments[1]) }\n    setProperty = setContent($model, options, ...$arguments)\n  }\n  return setProperty\n}","import { Coutil } from 'core-plex'\nconst { regularExpressions} = Coutil\nimport Model from '../../../../index.js'\nimport { ModelEvent } from '../../../../events/index.js'\nexport default function deleteContentProperty($model, $options, $path) {\n  const { target, path, schema } = $model\n  const { events, pathkey, subpathError, enableValidation, validationEvents } = $options\n  // Path Key: true\n  if(pathkey === true) {\n    const subpaths = $path.split(new RegExp(regularExpressions.quotationEscape))\n    const propertyKey = subpaths.shift()\n    let propertyValue = target[propertyKey]\n\n    // Return: Subproperty\n    if(subpaths.length) {\n      // Subpath Error\n      if(subpathError === false && propertyValue === undefined) { return undefined }\n      return propertyValue.delete(subpaths.join('.'), $options)\n    }\n    // Validation\n    if(schema && enableValidation) {\n      const differedPropertyProxy = $model.valueOf()\n      delete differedPropertyProxy[propertyKey]\n      const validTargetProp = schema.validate(propertyKey, differedPropertyProxy, {}, $model)\n      if(validationEvents) {\n        let type, propertyType\n        const validatorEventPath = (path)\n          ? [path, propertyKey].join('.')\n          : String(propertyKey)\n        if(validTargetProp.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', propertyKey].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', propertyKey].join('')\n        }\n        for(const $eventType of [type, propertyType]) {\n          $model.dispatchEvent(\n            new ValidatorEvent($eventType, Object.assign(validTargetProp, {\n              path: validatorEventPath\n            }), $model)\n          )\n        }\n      }\n      if(!validTargetProp.valid) { return }\n    }\n    if(typeof propertyValue === 'object') {\n      propertyValue.delete($options)\n    }\n    delete target[propertyKey]\n    // Delete Property Event\n    if(events) {\n      if(events['deleteProperty']) {\n        $model.dispatchEvent(\n          new ModelEvent('deleteProperty', {\n            path,\n            value: propertyValue,\n            detail: {\n              key: propertyKey,\n              value: propertyValue,\n            }\n          }, $model)\n        )\n      }\n      if(events['deleteProperty:$key']) {\n        const type = ['deleteProperty', ':', propertyKey].join('')\n        const _path = [path, '.', propertyKey].join('')\n        $model.dispatchEvent(\n          new ModelEvent(type, {\n            path: _path,\n            value: propertyValue,\n            detail: {\n              value: propertyValue,\n            }\n          }, $model)\n        )\n      }\n    }\n    return undefined\n  }\n  // Path Key: false\n  else if(pathkey === false) {\n    const propertyKey = $path\n    const propertyValue = target[propertyKey]\n\n    // Validation\n    if(schema && enableValidation) {\n      const differedPropertyProxy = $model.valueOf()\n      delete differedPropertyProxy[propertyKey]\n      const validTargetProp = schema.validate(propertyKey, differedPropertyProxy, $model, $model)\n      if(validationEvents) {\n        let type, propertyType\n        const validatorEventPath = (path)\n          ? [path, propertyKey].join('.')\n          : String(propertyKey)\n        if(validTargetProp.valid) {\n          type = 'validProperty'\n          propertyType = ['validProperty', ':', propertyKey].join('')\n        }\n        else {\n          type = 'nonvalidProperty'\n          propertyType = ['nonvalidProperty', ':', propertyKey].join('')\n        }\n        for(const $eventType of [type, propertyType]) {\n          $model.dispatchEvent(\n            new ValidatorEvent($eventType, validTargetProp, $model)\n          )\n        }\n      }\n      if(!validTargetProp.valid) { return }\n    }\n  \n    if(propertyValue instanceof Model) {\n      propertyValue.delete($options)\n    }\n    delete target[propertyKey]\n    // Delete Property Event\n    if(events) {\n      if(events['deleteProperty']) {\n        $model.dispatchEvent(\n          new ModelEvent('deleteProperty', {\n            path,\n            value: propertyValue,\n            detail: {\n              key: propertyKey,\n              value: propertyValue,\n            }\n          }, $model)\n        )\n      }\n      if(events['deleteProperty:$key']) {\n        const type = ['deleteProperty', ':', propertyKey].join('')\n        const _path = [path, '.', propertyKey].join('')\n        $model.dispatchEvent(\n          new ModelEvent(type, {\n            path: _path,\n            value: propertyValue,\n            detail: {\n              value: propertyValue,\n            }\n          }, $model)\n        )\n      }\n    }\n    return undefined\n  }\n}","import { Coutil } from 'core-plex'\nconst { recursiveAssign } = Coutil\nimport deleteContent from './deleteContent/index.js'\nimport deleteContentProperty from './deleteContentProperty/index.js'\nexport default function deleteProperty($model, $options, ...$arguments) {\n  let deleteProperty\n  const options = recursiveAssign({}, $model.options, $options)\n  if(typeof $arguments[0] === 'string') {\n    if($arguments.length === 2) { recursiveAssign(options, $arguments[1]) }\n    deleteProperty = deleteContentProperty($model, options, ...$arguments)\n  }\n  else {\n    if($arguments.length === 1) { recursiveAssign(options, $arguments[0]) }\n    deleteProperty = deleteContent($model, options, ...$arguments)\n  }\n  return deleteProperty\n}","import getProperty from './getProperty/index.js'\nimport setProperty from './setProperty/index.js'\nimport deleteProperty from './deleteProperty/index.js'\nexport default {\n  get: getProperty,\n  set: setProperty,\n  delete: deleteProperty,\n}","import { ModelEvent } from '../../../../events/index.js'\nimport Model from '../../../../index.js'\nexport default function getContent($model, $options) {\n  // Get Property Event\n  const { path } = $model\n  const { events } = $options\n  if(events && events['get']) {\n    $model.dispatchEvent(\n      new ModelEvent('get', {\n        path,\n        value: $model.valueOf(),\n        detail: {\n          value: $model.valueOf()\n        }\n      }, $model)\n    )\n  }\n  return $model\n}","import { ModelEvent } from '../../../../events/index.js'\nimport Model from '../../../../index.js'\nimport Change from '../../../../change/index.js'\nexport default function setContent($model, $options, $properties) {\n  iterateProperties: \n  for(const [$propertyKey, $propertyValue] of Object.entries($properties)) {\n    $model.set($propertyKey, $propertyValue, $options)\n  }\n  // Set Property Event\n  const { path } = $model\n  const { events } = $options\n  if(events && events['set']) {\n    $model.dispatchEvent(\n      new ModelEvent('set', {\n        path,\n        value: $model.valueOf(),\n        detail: {\n          value: $model.valueOf()\n        }\n      }, $model)\n    )\n  }\n  return $model\n}","import { ModelEvent } from '../../../../events/index.js'\nimport Model from '../../../../index.js'\nexport default function deleteContent($model, $options) {\n  const { target } = $model\n  for(const [$targetPropertyKey, $targetPropertyValue] of Object.entries(target)) {\n    $model.delete($targetPropertyKey, $options)\n  }\n  // Delete Property Event\n  const { path } = $model\n  const { events } = $options\n  if(events && events['delete']) {\n    $model.dispatchEvent(\n      new ModelEvent('delete', {\n        path,\n        detail: {\n          value: $model.valueOf()\n        }\n      }, $model)\n    )\n  }\n  return $model\n}","import ObjectProperty from './object/index.js'\nimport ArrayProperty from './array/index.js'\nimport AccessorProperty from './accessor/index.js'\nconst Defaults = Object.freeze({\n  object: [{\n    keys: ['valueOf'],\n    createMethod: function($methodName, $model) {\n      return function valueOf() { return $model.parse({ type: 'object' }) }\n    },\n  }, {\n    keys: ['toString'],\n    createMethod: function($methodName, $model) {\n      return function toString($parseSettings = {}) {\n        const replacer = ($parseSettings.replacer !== undefined)\n          ? $parseSettings.replacer : null\n        const space = ($parseSettings.space !== undefined)\n          ? $parseSettings.space : 0\n        return $model.parse({ type: 'string', replacer, space })\n      }\n    }, \n  }, {\n    keys: [\n      'entries', 'fromEntries', 'getOwnPropertyDescriptors', \n      'getOwnPropertyDescriptor', 'getOwnPropertyNames', \n      /* 'getOwnPropertySymbols', */ 'groupBy', 'hasOwn', 'is', \n      'getPrototypeOf', 'isExtensible', 'isFrozen', 'isSealed', \n      'keys', 'preventExtensions', 'values',\n    ],\n    createMethod: function($methodName, $model) {\n      return Object[$methodName].bind(null, $model.valueOf())\n    },\n  }, {\n    keys: ['propertyIsEnumerable', 'hasOwnProperty'], \n    createMethod: function($methodName, $model) {\n      return () => $model.parse({ type: 'object' })[$methodName]\n    },\n  }, {\n    type: 'mutators',\n    keys: Object.keys(ObjectProperty), \n    createMethod: function($methodName, $model, $options) {\n      return ObjectProperty[$methodName].bind(null, $model, $options) \n    }\n  }],\n  array: [{\n    keys: [\n      'from', 'fromAsync', 'isArray', 'of', \n    ], \n    createMethod: function($methodName, $model) {\n      return Array[$methodName]\n    }, \n  }, {\n    keys: [\n      'at', 'every', 'filter', 'find', 'findIndex', 'findLast',\n      'findLastIndex', 'flat', 'flatMap', 'forEach', 'includes', \n      'indexOf', 'join', 'lastIndexOf', 'map', 'reduce', 'reduceRight', \n      'slice', 'some', 'sort', 'toReversed',  'toSorted', 'toSpliced', \n      'with', \n    ], \n    createMethod: function($methodName, $model) {\n      return Array.prototype[$methodName].bind(null, $model)\n    }\n  }, {\n    type: 'mutators',\n    keys: Object.keys(ArrayProperty), \n    createMethod: function($methodName, $model, $options) {\n      return ArrayProperty[$methodName].bind(null, $model, $options)\n    }\n  }],\n  accessor: [{\n    type: 'mutators',\n    keys: Object.keys(AccessorProperty),\n    createMethod: function($methodName, $model, $options) {\n      return AccessorProperty[$methodName].bind(null, $model, $options)\n    }\n  }]\n})\nexport default function Methods($model) {\n  iterateDefaultPropertyClasses: // Object, Array, Accessor\n  for(const [$propertyClassName, $propertyClasses] of Object.entries(Defaults)) {\n    iteratePropertyClasses: \n    for(const $propertyClass of $propertyClasses) {\n      const { keys, createMethod, type } = $propertyClass\n      for(const $methodName of keys) {\n        if($propertyClassName === 'accessor' || type === 'mutators') {\n          const methodOptions = $model.options?.methods[$propertyClassName][$methodName] || {}\n          Object.defineProperty($model, $methodName, {\n            enumerable: false, writable: false, configurable: false, \n            value: createMethod($methodName, $model, methodOptions),\n          })\n        }\n        else {\n          Object.defineProperty($model, $methodName, {\n            enumerable: false, writable: false, configurable: false, \n            value: createMethod($methodName,  $model),\n          })\n        }\n      }\n    }\n  }\n  return $model\n}\n","import { Core, Coutil } from 'core-plex'\nconst { typedObjectLiteral, typeOf } = Coutil\nimport Schema from '../schema/index.js'\nimport Options from './options/index.js'\nimport ModelEvent from './events/model/index.js'\nimport Methods from './methods/index.js'\n\nexport default class Model extends Core {\n  #_properties\n  #options\n  #schema\n  #type\n  #target\n  #parent\n  #key\n  #path\n  #_handler\n  constructor($properties = {}, $schema = null, $options = {}) {\n    super({\n      accessors: [($target, $property) => {\n        if($property === undefined) { return $target.target }\n        else { return $target.get($property) }\n      }, ($target, $property) => {\n        if($property === undefined) { return $target }\n        else { return $target[$property] }\n      }],\n    })\n    if($options.addEvents) {\n      this.addEvents($options.addEvents)\n      delete $options.addEvents\n    }\n    if($options.enableEvents) {\n      const typeofEnableEvents = typeof $options.enableEvents\n      if(typeofEnableEvents === 'boolean') { this.enableEvents() }\n      else if(typeofEnableEvents === 'object') { this.enableEvents($options.enableEvents) }\n    }\n    this.#properties = $properties\n    this.schema = $schema\n    this.#options = Options($options)\n    Methods(this)\n    this[this.options.assignmentMethod](this.#properties)\n  }\n  get #properties() { return this.#_properties }\n  set #properties($properties) {\n    if(this.#_properties !== undefined) return\n    if($properties instanceof Model) {\n      this.#_properties = $properties.valueOf()\n    }\n    this.#_properties = $properties\n    return this.#_properties\n  }\n  get options() { return this.#options }\n  get schema() { return this.#schema }\n  set schema($schema) {\n  if(this.#schema !== undefined)  { return }\n    const typeOfSchema = typeOf($schema)\n    if(['undefined', 'null'].includes(typeOfSchema)) { this.#schema = null }\n    else if($schema instanceof Schema) { this.#schema = $schema }\n    else if(typeOfSchema === 'array') { this.#schema = new Schema(...arguments) }\n    else if(typeOfSchema === 'object') { this.#schema = new Schema($schema) }\n  }\n  get classToString() { return Model.toString() }\n  get type() {\n    if(this.#type !== undefined) return this.#type\n    this.#type = typeOf(this.#properties)\n    return this.#type\n  }\n  get parent() {\n    if(this.#parent !== undefined)  return this.#parent\n    this.#parent = (this.options.parent) ? this.options.parent : null\n    return this.#parent\n  }\n  get root() {\n    let root = this\n    iterateParents: \n    while(root) {\n      if([undefined, null].includes(root.parent)) { break iterateParents }\n      root = root.parent\n    }\n    return root\n  }\n  get key() {\n    if(this.#key !== undefined) { return this.#key }\n    if(this.path) { this.#key = this.path.split('.').pop() }\n    else { this.#key = null }\n    return this.#key\n  }\n  get path() {\n    if(this.#path !== undefined)  return this.#path\n    this.#path = (this.options.path)\n      ? String(this.options.path)\n      : null\n    return this.#path\n  }\n  get target() {\n    if(this.#target !== undefined) return this.#target\n    this.#target = typedObjectLiteral(this.#properties)\n    return this.#target\n  }\n  retroReenableEvents() {\n    let model = this\n    while(model) {\n      model.reenableEvents({ enable: true })\n      model = model.parent\n    }\n    return this\n  }\n  parse($settings = {\n    type: 'object', // string\n    replacer: null,\n    space: 0,\n  }) {\n    let parsement = typedObjectLiteral(this.type)\n    for(const [\n      $propertyDescriptorName, $propertyDescriptor\n    ] of Object.entries(\n      Object.getOwnPropertyDescriptors(this.target))\n    ) {\n      const { enumerable, value, writable, configurable } = $propertyDescriptor\n      if($propertyDescriptor.value instanceof Model) {\n        Object.defineProperty(parsement, $propertyDescriptorName, {\n          enumerable, value: value.parse({ type: 'object' }), writable, configurable\n        })\n      }\n      else {\n        Object.defineProperty(parsement, $propertyDescriptorName, {\n          enumerable, value, writable, configurable\n        })\n      }\n    }\n    const { type, replacer, space } = $settings\n    if(type === 'object') { return parsement }\n    else if(type === 'string') { return JSON.stringify(parsement, replacer, space) }\n    else { return undefined }\n  }\n}"],"names":["accessors","default","$target","$property","undefined","expandEvents","$propEvents","Array","isArray","propEvents","$propEventSettings","$propEventListener","Object","entries","propEventSettings","split","path","type","listener","options","length","propEvent","enable","push","Options","depth","maxDepth","propertyDirectory","$object","$options","_propertyDirectory","assign","$accessor","object","$key","$value","subtarget","$subtarget","join","typeOf","$data","prototype","toString","call","slice","toLowerCase","recursiveAssign","$sources","$source","$sourcePropertyKey","$sourcePropertyValue","typeOfTargetPropertyValue","typeOfSourcePropertyValue","Primitives","string","String","number","Number","boolean","Boolean","bigint","BigInt","null","PrimitiveKeys","keys","PrimitiveValues","values","Objects","array","ObjectKeys","ObjectValues","Types","TypeKeys","TypeValues","TypeMethods","index$1","freeze","__proto__","index","impandEvents","$propEvent","$path","$type","isPropertyDefinition","$propertyDefinition","getOwnPropertyDescriptor","includes","value","recursiveAssignConcat","concat","recursiveFreeze","$propertyKey","$propertyValue","regularExpressions","quotationEscape","typedObjectLiteral","_typedObjectLiteral","typeOfValue","variables","handleNoCommaBraces","span","separatorI","i","rangeStart","substr","rangeEnd","expand","pattern","TypeError","scanning","openingBraces","closingBraces","handledUntil","results","alternatives","char","substring","j","newResults","k","l","unhandledFrom","negate","supportNegation","supportParens","isNegated","escapeRegExpChar","Pattern","source","excludeDot","separator","separatorSplitter","separatorMatcher","wildcard","str","result","escapeRegExpString","requiredSeparator","optionalSeparator","segments","support","qMark","star","globstar","brackets","extglobs","Segment","isFirst","isLast","end","EXCLUDE_DOT_PATTERN","add","state","addition","addToUnmatch","unmatch","addToMatch","dotHandled","match","convertSegment","segment","openingBracket","closingBracket","openingParens","closingParens","parensHandledUntil","extglobModifiers","scanningForParens","escapeChar","nextChar","State","modifier_1","pop","indexOf","Error","useUnmatch","convert","isMatch","regexp","sample","test","outmatch","arguments","regexpPattern","patterns","predicate","mappedValue","flatMap","positiveResults","negativeResults","negatedPattern","convertedPattern","compile","RegExp","flags","fn","bind","EventDefinition","settings","context","assigned","deassigned","_targets","_assign","_deassign","constructor","$settings","$context","this","Settings","scopeKey","deassign","bindListener","methods","addEventListener","$eventDefinition","useCapture","on","once","removeEventListener","off","$settingKey","$settingValue","$enable","targets","$targetElement","target","$err","console","error","pretargets","targetPaths","pretargetElement","find","$pretarget","propertyPathMatcher","$propertyPath","unshift","$targetPath","targetElement","pathKeys","pathKeysIndex","iterateTargetPathKeys","pathKey","iterateTargetAccessors","$targetAccessor","propertyDirectorySettings","Core","EventTarget","static","events","enableEvents","propertyDefinitions","getEvents","addEvents","removeEvents","disableEvents","reenableEvents","Settings$1","defineProperties","enumerable","writable","$filterEvents","$filterEvent","$event","iterateEventFilterProperties","$filterEventPropertyKey","$filterEventPropertyValue","eventFilterMatch","$addEvents","$addEvent","event","settingValue","eventDefinition","$events","eventsIndex","splice","super","implement","Verification","message","pass","definition","key","messages","$pass","Coutil","Messages","true","$verification","false","Validator","boundValidate","schema","$definition","$schema","validate","verification","RequiredValidator","requiredProperties","requiredPropertiesSize","corequiredContextProperties","corequiredModelProperties","iterateRequiredProperties","$requiredPropertyName","$requiredProperty","requiredProperty","required","sourcePropertyDescriptor","corequiredContextPropertiesSize","corequiredModelPropertiesSize","coschema","Schema","validations","$corequiredContextPropertyName","$corequiredContextProperty","corequiredModelProperty","coschemaPropertyValidation","validateProperty","$validation","valid","TypeValidator","typeOfDefinitionValue","typeOfModelValue","RangeValidator","min","max","validMin","validMax","LengthValidator","EnumValidator","MatchValidator","exec","Handler","expandTree","Context","properties","proxy","_handler","$properties","Proxy","handler","typeOfPropertyDefinition","propertyDefinition","Variables","propertyDefinitionIsPropertyDefinition","schemaPath","parent","validators","iteratePropertyValidators","$propertyValidatorName","$propertyValidator","typeOfPropertyValidator","propertyValidator","$propertyDefinitionValidator","$Validator","parsePropertyDefinition","Map","contextRequired","range","minLength","maxLength","set","validator","enum","$validatorName","$validatorSettings","ValidatorClass","Validation","advance","deadvance","unadvance","$valid","verificationType","root","iterateParents","parseValidateArguments","$sourceName","$arguments","shift","validation","sourceProperties","sourcePropertyIndex","deadvancedRequiredProperties","$sourceKey","$sourceValue","propertyValidation","deadvancedRequiredPropertyValidation","filter","parseValidatePropertyArguments","Model","valueOf","propertyValidationPath","iterateContextValueValidators","$validatorIndex","$validator","ModelEvent","CustomEvent","model","$model","change","detail","Change","_keyter","_preter","_anter","_conter","keyter","preter","anter","conter","$preter","$anter","JSON","stringify","log","impandTree","ObjectProperty","sourceTree","enableValidation","validationEvents","assignedSources","assignChange","assignedSource","assignSourceChange","iterateSourceProperties","assignSourcePropertyChange","assignSourcePropertyKeyChange","validSourceProperty","propertyType","$eventType","dispatchEvent","ValidatorEvent","sourceValue","subschema","modelPath","modelTypedLiteral","assignment","retroReenableEvents","modelEventPath","sources","$propertyDescriptors","propertyDescriptorEntries","impandPropertyDescriptors","definePropertiesChange","$propertyDescriptor","defineProperty","descriptors","descriptorTree","propertyValue","targetPropertyValue","definePropertyChange","definePropertyKeyChange","targetPropertyValueIsModelInstance","validProperty","_target","modelObject","prop","descriptor","recursive","seal","ArrayProperty","reduce","$argument","valueIndex","targetConcat","from","iterateValues","validValue","$subvalue","copyWithin","copyTarget","start","copiedItems","copyIndex","targetIndex","copyItem","item","items","fill","$start","$end","fillIndex","iterateFillIndexes","popElement","popElementIndex","elementIndex","element","$elements","elements","elementsIndex","$element","validElement","reverse","reference","shiftElement","shiftElementIndex","$deleteCount","$addItems","addCount","deleteItems","deleteItemsIndex","deleteItem","deleteIndex","addItemsIndex","spliceAdd","addItem","validAddItem","startIndex","addIndex","deleted","added","elementCoindex","AccessorProperty","get","getProperty","pathkey","subpathError","subpaths","propertyKey","_path","getContentProperty","getContent","setProperty","submodel","validTargetProp","setContentProperty","setContent","delete","deleteProperty","differedPropertyProxy","validatorEventPath","deleteContentProperty","$targetPropertyKey","$targetPropertyValue","deleteContent","Defaults","createMethod","$methodName","parse","$parseSettings","replacer","space","accessor","_properties","typeofEnableEvents","nonvalidProperty","assignmentMethod","concatValue","copyWithinIndex","pushProp","spliceDelete","unshiftProp","assignSourceProperty","assignSource","freezeProperty","sealProperty","$propertyClassName","$propertyClasses","$propertyClass","methodOptions","configurable","Methods","typeOfSchema","classToString","parsement","$propertyDescriptorName","getOwnPropertyDescriptors"],"mappings":"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"}