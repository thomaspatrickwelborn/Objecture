{"version":3,"file":"core-plex.min.js","sources":["../development/coutil/accessors/index.js","../development/coutil/expand-events/index.js","../development/coutil/variables/index.js","../development/coutil/regular-expressions/index.js","../development/coutil/type-of/index.js","../development/coutil/path/index.js","../development/coutil/typed-object-literal/index.js","../development/coutil/tree/index.js","../development/coutil/property-directory/index.js","../development/coutil/recursive-assign/index.js","../development/coutil/expand-tree/index.js","../development/coutil/impand-tree/index.js","../development/coutil/recursive-assign-concat/index.js","../development/coutil/recursive-freeze/index.js","../node_modules/outmatch/build/index.es.mjs","../development/core/event-definition/index.js","../development/core/event-definition/settings/index.js","../development/core/index.js","../development/core/settings/index.js"],"sourcesContent":["const defaultAccessor = ($target, $property) => {\n  if($property === undefined) { return $target }\n  else { return $target[$property] }\n}\nconst getAccessor = ($target, $property) => {\n  if($property === undefined) { return $target }\n  else { return $target.get($property) }\n}\nexport default {\n  default: defaultAccessor,\n  get: getAccessor,\n}","function expandEvents($propEvents, $scopeKey = ':scope') {\n  if(\n    Array.isArray($propEvents) ||\n    $propEvents === undefined\n  ) { return $propEvents }\n  const propEvents = []\n  iteratePropEvents:\n  for(const [\n    $propEventSettings, $propEventListener\n  ] of Object.entries($propEvents)) {\n    const propEventSettings = $propEventSettings.trim().split(' ')\n    let path, type, listener, options\n    if(propEventSettings.length === 1) {\n      path = $scopeKey\n      type = propEventSettings[0]\n    }\n    else if(propEventSettings.length > 1) {\n      path = propEventSettings[0]\n      type = propEventSettings[1]\n    }\n    if(Array.isArray($propEventListener)) {\n      listener = $propEventListener[0]\n      options = $propEventListener[1]\n    }\n    else {\n      listener = $propEventListener\n    }\n    const propEvent = {\n      type,\n      path,\n      listener,\n      enable: false,\n    }\n    propEvents.push(propEvent)\n  }\n  return propEvents\n}\n\nexport default expandEvents","const Primitives = {\n  'string': String, \n  'number': Number, \n  'boolean': Boolean, \n  'undefined': undefined,\n  'null': null,\n}\nconst PrimitiveKeys = Object.keys(Primitives)\nconst PrimitiveValues = Object.values(Primitives)\nconst Objects = {\n  'object': Object,\n  'array': Array,\n}\nconst ObjectKeys = Object.keys(Objects)\nconst ObjectValues = Object.values(Objects)\nconst Types = Object.assign({}, Primitives, Objects)\nconst TypeKeys = Object.keys(Types)\nconst TypeValues = Object.values(Types)\nconst TypeMethods = [\n Primitives.String, Primitives.Number, Primitives.Boolean, \n Objects.Object, Objects.Array\n]\nexport {\n  Primitives, PrimitiveKeys, PrimitiveValues, \n  Objects, ObjectKeys, ObjectValues,\n  Types, TypeKeys, TypeValues, TypeMethods\n}\n","export default {\n  quotationEscape: /\\.(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/,\n}","const typeOf = ($data) => Object\n  .prototype\n  .toString\n  .call($data).slice(8, -1).toLowerCase()\n\nexport default typeOf","import regularExpressions from '../regular-expressions/index.js'\nimport typeOf from '../type-of/index.js'\nfunction subpaths($path) {\n  return $path.split(\n    new RegExp(regularExpressions.quotationEscape)\n  )\n}\nfunction keypaths($path) {\n  const _subpaths = subpaths($path)\n  _subpaths.pop()\n  return _subpaths\n}\nfunction key($path) { return subpaths($path).pop() }\nfunction root($path) { return subpaths($path).shift() }\nfunction typeofRoot($path) { return (\n  Number(root($path))\n) ? 'array' : 'object' }\nfunction parse($path) {\n  return {\n    subpaths: subpaths($path),\n    keypaths: keypaths($path),\n    key: key($path),\n    root: root($path),\n    typeofRoot: typeofRoot($path),\n  }\n}\nexport {\n  subpaths,\n  keypaths,\n  key,\n  root,\n  typeofRoot,\n  parse,\n}","import typeOf from '../type-of/index.js'\nexport default function typedObjectLiteral($value) {\n  let _typedObjectLiteral\n  const typeOfValue = typeOf($value)\n  if(typeOfValue === 'object') { _typedObjectLiteral = {} }\n  else if(typeOfValue === 'array') { _typedObjectLiteral = [] }\n  else if(typeOfValue === 'string') {\n    if($value === 'object') { _typedObjectLiteral = {} }\n    else if($value === 'array') { _typedObjectLiteral = [] }\n  }\n  else { _typedObjectLiteral = undefined }\n  return _typedObjectLiteral\n}","import * as path from '../path/index.js'\nimport typedObjectLiteral from '../typed-object-literal/index.js'\nimport regularExpressions from '../regular-expressions/index.js'\nfunction get($path, $source) {\n  const subpaths = $path.split(new RegExp(regularExpressions.quotationEscape))\n  const key = subpaths.pop()\n  let subtarget = $source\n  for(const $subpath of subpaths) { subtarget = subtarget[$subpath] }\n  return subtarget[key]\n}\nfunction set($path, $source) {\n  const {\n    keypaths, key, typeofRoot\n  } = path.parse($path)\n  const target = typedObjectLiteral(typeofRoot)\n  let subtarget = target\n  for(const $subpath of keypaths) {\n    if(Number($subpath)) { subtarget[$subpath] = [] }\n    else { subtarget[$subpath] = {} }\n    subtarget = subtarget[$subpath]\n  }\n  subtarget[key] = $source\n  return target\n}\nexport { get, set }","import Accessors from '../accessors/index.js'\nconst Options = {\n  depth: 0,\n  maxDepth: 10,\n  accessors: [Accessors.default],\n}\nexport default function propertyDirectory($object, $options) {\n  const _propertyDirectory = []\n  const options = Object.assign({}, Options, $options)\n  options.depth++\n  if(options.depth > options.maxDepth) { return _propertyDirectory }\n  iterateAccessors: \n  for(const $accessor of options.accessors) {\n    const object = $accessor($object)\n    if(!object) continue iterateAccessors\n    iterateObjectProperties: \n    for(const [$key, $value] of Object.entries(object)) {\n      _propertyDirectory.push($key)\n      if(\n        typeof $value === 'object' &&\n        $value !== null &&\n        $value !== object\n      ) {\n        const subtarget = propertyDirectory($value, options)\n        for(const $subtarget of subtarget) {\n          let path\n          if(typeof $subtarget === 'object') {\n            path = [$key, ...$subtarget].join('.')\n          }\n          else {\n            path = [$key, $subtarget].join('.')\n          }\n          _propertyDirectory.push(path)\n        }\n      }\n    }\n  }\n  return _propertyDirectory\n}","import typeOf from '../type-of/index.js'\nexport default function recursiveAssign($target, ...$sources) {\n  if(!$target) { return $target}\n  iterateSources: \n  for(const $source of $sources) {\n    if(!$source) continue iterateSources\n    iterateSourceEntries: \n    for(const [\n      $sourcePropertyKey, $sourcePropertyValue\n    ] of Object.entries($source)) {\n      const typeOfTargetPropertyValue = typeOf($target[$sourcePropertyKey])\n      const typeOfSourcePropertyValue = typeOf($sourcePropertyValue)\n      if(\n        typeOfTargetPropertyValue === 'object' &&\n        typeOfSourcePropertyValue === 'object'\n      ) {\n        $target[$sourcePropertyKey] = recursiveAssign($target[$sourcePropertyKey], $sourcePropertyValue)\n      }\n      else {\n        $target[$sourcePropertyKey] = $sourcePropertyValue\n      }\n    }\n  }\n  return $target\n}","import * as Variables from '../variables/index.js'\nimport * as Path from '../path/index.js'\nimport * as Tree from '../tree/index.js'\nimport typeOf from '../type-of/index.js'\nimport typedObjectLiteral from '../typed-object-literal/index.js'\nexport default function expandTree($source, $property) {\n  const typeOfProperty = typeOf($property)\n  const typeOfSource = typeOf($source)\n  if(\n    !['string', 'function'].includes(typeOfProperty) ||\n    !['array', 'object'].includes(typeOfSource)\n  ) { return $source }\n  let target = typedObjectLiteral($source)\n  iterateSourceEntries: \n  for(const [$sourceKey, $sourceValue] of Object.entries($source)) {\n    if(typeOfProperty === 'string') { target[$sourceKey] = Tree.set($property, $sourceValue) }\n    else if(typeOfProperty === 'function') { target[$sourceKey] = $property($sourceValue) }\n    if(target[$sourceKey] && typeof target[$sourceKey] === 'object') {\n      target[$sourceKey] = expandTree(target[$sourceKey], $property)\n    }\n  }\n  return target\n}","import * as Variables from '../variables/index.js'\nimport * as Path from '../path/index.js'\nimport * as Tree from '../tree/index.js'\nimport typeOf from '../type-of/index.js'\nimport typedObjectLiteral from '../typed-object-literal/index.js'\nexport default function impandTree($source, $property) {\n  const typeOfProperty = typeOf($property)\n  const typeOfSource = typeOf($source)\n  if(\n    !['string', 'function'].includes(typeOfProperty) ||\n    !['array', 'object'].includes(typeOfSource)\n  ) { return $source }\n  let target = typedObjectLiteral($source)\n  iterateSourceEntries: \n  for(const [$sourceKey, $sourceValue] of Object.entries($source)) {\n    if(typeOfProperty === 'string') { target[$sourceKey] = Tree.get($property, $sourceValue) }\n    else if(typeOfProperty === 'function') { target[$sourceKey] = $property($sourceValue) }\n    if(target[$sourceKey] && typeof target[$sourceKey] === 'object') {\n      target[$sourceKey] = impandTree(target[$sourceKey], $property)\n    }\n    // else {\n    //   target[$property] = $source\n    // }\n  }\n  return target\n}","import typeOf from '../type-of/index.js'\nexport default function recursiveAssignConcat($target, ...$sources) {\n  if(!$target) { return $target}\n  iterateSources: \n  for(const $source of $sources) {\n    if(!$source) continue iterateSources\n    iterateSourceEntries: \n    for(const [\n      $sourcePropertyKey, $sourcePropertyValue\n    ] of Object.entries($source)) {\n      const typeOfTargetPropertyValue = typeOf($target[$sourcePropertyKey])\n      const typeOfSourcePropertyValue = typeOf($sourcePropertyValue)\n      if( \n        typeOfTargetPropertyValue === 'object' &&\n        typeOfSourcePropertyValue === 'object'\n      ) {\n        $target[$sourcePropertyKey] = recursiveAssignConcat($target[$sourcePropertyKey], $sourcePropertyValue)\n      }\n      else if(\n        typeOfTargetPropertyValue === 'array' &&\n        typeOfSourcePropertyValue === 'array'\n      ) {\n        $target[$sourcePropertyKey] = $target[$sourcePropertyKey].concat($sourcePropertyValue)\n      }\n      else {\n        $target[$sourcePropertyKey] = $sourcePropertyValue\n      }\n    }\n  }\n  return $target\n}","function recursiveFreeze($target) {\n  for(const [$propertyKey, $propertyValue] of Object.entries($target)) {\n    if($propertyValue && typeof $propertyValue === 'object') {\n      recursiveFreeze($propertyValue)\n    }\n  }\n  return Object.freeze($target)\n}\nexport default recursiveFreeze","function handleNoCommaBraces(span) {\n    if (span.length < 3) {\n        return \"{\" + span + \"}\";\n    }\n    var separatorI = -1;\n    for (var i = 2; i < span.length; i++) {\n        if (span[i] === '.' && span[i - 1] === '.' && (i < 2 || span[i - 2] !== '\\\\')) {\n            if (separatorI > -1) {\n                return \"{\" + span + \"}\";\n            }\n            separatorI = i - 1;\n        }\n    }\n    if (separatorI > -1) {\n        var rangeStart = span.substr(0, separatorI);\n        var rangeEnd = span.substr(separatorI + 2);\n        if (rangeStart.length > 0 && rangeEnd.length > 0) {\n            return \"[\" + span.substr(0, separatorI) + \"-\" + span.substr(separatorI + 2) + \"]\";\n        }\n    }\n    return \"{\" + span + \"}\";\n}\nfunction expand(pattern) {\n    if (typeof pattern !== 'string') {\n        throw new TypeError(\"A pattern must be a string, but \" + typeof pattern + \" given\");\n    }\n    var scanning = false;\n    var openingBraces = 0;\n    var closingBraces = 0;\n    var handledUntil = -1;\n    var results = [''];\n    var alternatives = [];\n    var span;\n    for (var i = 0; i < pattern.length; i++) {\n        var char = pattern[i];\n        if (char === '\\\\') {\n            i++;\n            continue;\n        }\n        if (char === '{') {\n            if (scanning) {\n                openingBraces++;\n            }\n            else if (i > handledUntil && !openingBraces) {\n                span = pattern.substring(handledUntil + 1, i);\n                for (var j = 0; j < results.length; j++) {\n                    results[j] += span;\n                }\n                alternatives = [];\n                handledUntil = i;\n                scanning = true;\n                openingBraces++;\n            }\n            else {\n                openingBraces--;\n            }\n        }\n        else if (char === '}') {\n            if (scanning) {\n                closingBraces++;\n            }\n            else if (closingBraces === 1) {\n                span = pattern.substring(handledUntil + 1, i);\n                if (alternatives.length > 0) {\n                    var newResults = [];\n                    alternatives.push(expand(span));\n                    for (var j = 0; j < results.length; j++) {\n                        for (var k = 0; k < alternatives.length; k++) {\n                            for (var l = 0; l < alternatives[k].length; l++) {\n                                newResults.push(results[j] + alternatives[k][l]);\n                            }\n                        }\n                    }\n                    results = newResults;\n                }\n                else {\n                    span = handleNoCommaBraces(span);\n                    for (var j = 0; j < results.length; j++) {\n                        results[j] += span;\n                    }\n                }\n                handledUntil = i;\n                closingBraces--;\n            }\n            else {\n                closingBraces--;\n            }\n        }\n        else if (!scanning && char === ',' && closingBraces - openingBraces === 1) {\n            span = pattern.substring(handledUntil + 1, i);\n            alternatives.push(expand(span));\n            handledUntil = i;\n        }\n        if (scanning && (closingBraces === openingBraces || i === pattern.length - 1)) {\n            scanning = false;\n            i = handledUntil - 1;\n        }\n    }\n    if (handledUntil === -1) {\n        return [pattern];\n    }\n    var unhandledFrom = pattern[handledUntil] === '{' ? handledUntil : handledUntil + 1;\n    if (unhandledFrom < pattern.length) {\n        span = pattern.substr(unhandledFrom);\n        for (var j = 0; j < results.length; j++) {\n            results[j] += span;\n        }\n    }\n    return results;\n}\n\nfunction negate(pattern, options) {\n    var supportNegation = options['!'] !== false;\n    var supportParens = options['()'] !== false;\n    var isNegated = false;\n    var i;\n    if (supportNegation) {\n        for (i = 0; i < pattern.length && pattern[i] === '!'; i++) {\n            if (supportParens && pattern[i + 1] === '(') {\n                i--;\n                break;\n            }\n            isNegated = !isNegated;\n        }\n        if (i > 0) {\n            pattern = pattern.substr(i);\n        }\n    }\n    return { pattern: pattern, isNegated: isNegated };\n}\n\nfunction escapeRegExpChar(char) { if (char === '-' ||\n    char === '^' ||\n    char === '$' ||\n    char === '+' ||\n    char === '.' ||\n    char === '(' ||\n    char === ')' ||\n    char === '|' ||\n    char === '[' ||\n    char === ']' ||\n    char === '{' ||\n    char === '}' ||\n    char === '*' ||\n    char === '?' ||\n    char === '\\\\') {\n    return \"\\\\\" + char;\n}\nelse {\n    return char;\n} }\nfunction escapeRegExpString(str) {\n    var result = '';\n    for (var i = 0; i < str.length; i++) {\n        result += escapeRegExpChar(str[i]);\n    }\n    return result;\n}\n\nfunction Pattern(source, options, excludeDot) {\n    var separator = typeof options.separator === 'undefined' ? true : options.separator;\n    var separatorSplitter = '';\n    var separatorMatcher = '';\n    var wildcard = '.';\n    if (separator === true) {\n        separatorSplitter = '/';\n        separatorMatcher = '[/\\\\\\\\]';\n        wildcard = '[^/\\\\\\\\]';\n    }\n    else if (separator) {\n        separatorSplitter = separator;\n        separatorMatcher = escapeRegExpString(separatorSplitter);\n        if (separatorMatcher.length > 1) {\n            separatorMatcher = \"(?:\" + separatorMatcher + \")\";\n            wildcard = \"((?!\" + separatorMatcher + \").)\";\n        }\n        else {\n            wildcard = \"[^\" + separatorMatcher + \"]\";\n        }\n    }\n    else {\n        wildcard = '.';\n    }\n    var requiredSeparator = separator ? separatorMatcher + \"+?\" : '';\n    var optionalSeparator = separator ? separatorMatcher + \"*?\" : '';\n    var segments = separator ? source.split(separatorSplitter) : [source];\n    var support = {\n        qMark: options['?'] !== false,\n        star: options['*'] !== false,\n        globstar: separator && options['**'] !== false,\n        brackets: options['[]'] !== false,\n        extglobs: options['()'] !== false,\n        excludeDot: excludeDot && options.excludeDot !== false,\n    };\n    return {\n        source: source,\n        segments: segments,\n        options: options,\n        separator: separator,\n        separatorSplitter: separatorSplitter,\n        separatorMatcher: separatorMatcher,\n        optionalSeparator: optionalSeparator,\n        requiredSeparator: requiredSeparator,\n        wildcard: wildcard,\n        support: support,\n    };\n}\nfunction Segment(source, pattern, isFirst, isLast) { return {\n    source: source,\n    isFirst: isFirst,\n    isLast: isLast,\n    end: source.length - 1,\n}; }\nfunction Result() {\nreturn {\n    match: '',\n    unmatch: '',\n    useUnmatch: false,\n}; }\nfunction State(pattern, segment, result) { return {\n    pattern: pattern,\n    segment: segment,\n    result: result,\n    openingBracket: segment.end + 1,\n    closingBracket: -1,\n    openingParens: 0,\n    closingParens: 0,\n    parensHandledUntil: -1,\n    extglobModifiers: [],\n    scanningForParens: false,\n    escapeChar: false,\n    addToMatch: true,\n    addToUnmatch: pattern.support.extglobs,\n    dotHandled: false,\n    i: -1,\n    char: '',\n    nextChar: '',\n}; }\n\nvar EXCLUDE_DOT_PATTERN = '(?!\\\\.)';\nfunction add(state, addition, excludeDot) {\n    if (state.addToUnmatch) {\n        state.result.unmatch += addition;\n    }\n    if (state.addToMatch) {\n        if (excludeDot && !state.dotHandled) {\n            addition = EXCLUDE_DOT_PATTERN + addition;\n        }\n        state.dotHandled = true;\n        state.result.match += addition;\n    }\n    return state.result;\n}\nfunction convertSegment(pattern, segment, result) {\n    var support = pattern.support;\n    var state = State(pattern, segment, result);\n    var separatorMatcher = segment.isLast\n        ? pattern.optionalSeparator\n        : pattern.requiredSeparator;\n    if (!support.excludeDot) {\n        state.dotHandled = true;\n    }\n    if (segment.end === -1) {\n        return segment.isLast && !segment.isFirst ? result : add(state, separatorMatcher);\n    }\n    if (support.globstar && segment.source === '**') {\n        var prefix = !state.dotHandled ? EXCLUDE_DOT_PATTERN : '';\n        var globstarSegment = prefix + pattern.wildcard + \"*?\" + separatorMatcher;\n        return add(state, \"(?:\" + globstarSegment + \")*?\");\n    }\n    while (++state.i <= segment.end) {\n        state.char = state.segment.source[state.i];\n        state.nextChar = state.i < segment.end ? segment.source[state.i + 1] : '';\n        if (state.char === '\\\\') {\n            if (state.i < state.segment.end) {\n                state.escapeChar = true;\n                continue;\n            }\n            else {\n                state.char = '';\n            }\n        }\n        var pattern = state.pattern, segment = state.segment, char = state.char, i = state.i;\n        if (pattern.support.brackets && !state.scanningForParens) {\n            if (i > state.openingBracket && i <= state.closingBracket) {\n                if (state.escapeChar) {\n                    add(state, escapeRegExpChar(char));\n                }\n                else if (i === state.closingBracket) {\n                    add(state, ']');\n                    state.openingBracket = segment.source.length;\n                }\n                else if (char === '-' && i === state.closingBracket - 1) {\n                    add(state, '\\\\-');\n                }\n                else if (char === '!' && i === state.openingBracket + 1) {\n                    add(state, '^');\n                }\n                else if (char === ']') {\n                    add(state, '\\\\]');\n                }\n                else {\n                    add(state, char);\n                }\n                state.escapeChar = false;\n                continue;\n            }\n            if (i > state.openingBracket) {\n                if (char === ']' &&\n                    !state.escapeChar &&\n                    i > state.openingBracket + 1 &&\n                    i > state.closingBracket) {\n                    state.closingBracket = i;\n                    state.i = state.openingBracket;\n                    if (pattern.separator) {\n                        add(state, \"(?!\" + pattern.separatorMatcher + \")[\", true);\n                    }\n                    else {\n                        add(state, '[', true);\n                    }\n                }\n                else if (i === segment.end) {\n                    add(state, '\\\\[');\n                    state.i = state.openingBracket;\n                    state.openingBracket = segment.source.length;\n                    state.closingBracket = segment.source.length;\n                }\n                state.escapeChar = false;\n                continue;\n            }\n            if (char === '[' &&\n                !state.escapeChar &&\n                i > state.closingBracket &&\n                i < segment.end) {\n                state.openingBracket = i;\n                state.escapeChar = false;\n                continue;\n            }\n        }\n        if (state.pattern.support.extglobs) {\n            var extglobModifiers = state.extglobModifiers, char = state.char, nextChar = state.nextChar, i = state.i;\n            if (nextChar === '(' &&\n                !state.escapeChar &&\n                (char === '@' || char === '?' || char === '*' || char === '+' || char === '!')) {\n                if (state.scanningForParens) {\n                    state.openingParens++;\n                }\n                else if (i > state.parensHandledUntil && !state.closingParens) {\n                    state.parensHandledUntil = i;\n                    state.scanningForParens = true;\n                    state.openingParens++;\n                }\n                else if (state.closingParens >= state.openingParens) {\n                    if (char === '!') {\n                        state.addToMatch = true;\n                        state.addToUnmatch = false;\n                        add(state, state.pattern.wildcard + \"*?\", true);\n                        state.addToMatch = false;\n                        state.addToUnmatch = true;\n                        state.result.useUnmatch = true;\n                    }\n                    extglobModifiers.push(char);\n                    add(state, '(?:', true);\n                    state.openingParens--;\n                    state.i++;\n                    continue;\n                }\n                else {\n                    state.openingParens--;\n                }\n            }\n            else if (char === ')' && !state.escapeChar) {\n                if (state.scanningForParens) {\n                    state.closingParens++;\n                }\n                else if (extglobModifiers.length) {\n                    var modifier_1 = extglobModifiers.pop();\n                    if (modifier_1 === '!' && extglobModifiers.indexOf('!') !== -1) {\n                        throw new Error(\"Nested negated extglobs aren't supported\");\n                    }\n                    modifier_1 = modifier_1 === '!' || modifier_1 === '@' ? '' : modifier_1;\n                    add(state, \")\" + modifier_1);\n                    state.addToMatch = true;\n                    state.addToUnmatch = true;\n                    state.closingParens--;\n                    continue;\n                }\n            }\n            else if (char === '|' && state.closingParens &&\n                !state.scanningForParens &&\n                !state.escapeChar) {\n                add(state, '|');\n                continue;\n            }\n            if (state.scanningForParens) {\n                if (state.closingParens === state.openingParens || i === state.segment.end) {\n                    state.scanningForParens = false;\n                    state.i = state.parensHandledUntil - 1;\n                }\n                state.escapeChar = false;\n                continue;\n            }\n        }\n        var pattern = state.pattern;\n        var support = pattern.support;\n        if (!state.escapeChar && support.star && state.char === '*') {\n            if (state.i === state.segment.end || state.nextChar !== '*') {\n                add(state, pattern.wildcard + \"*?\", true);\n            }\n        }\n        else if (!state.escapeChar && support.qMark && state.char === '?') {\n            add(state, pattern.wildcard, true);\n        }\n        else {\n            add(state, escapeRegExpChar(state.char));\n        }\n        state.escapeChar = false;\n    }\n    return add(state, separatorMatcher);\n}\nfunction convert(source, options, excludeDot) {\n    var pattern = Pattern(source, options, excludeDot);\n    var result = Result();\n    var segments = pattern.segments;\n    for (var i = 0; i < segments.length; i++) {\n        var segment = Segment(segments[i], pattern, i === 0, i === segments.length - 1);\n        convertSegment(pattern, segment, result);\n    }\n    if (result.useUnmatch) {\n        return \"(?!^\" + result.unmatch + \"$)\" + result.match;\n    }\n    else {\n        return result.match;\n    }\n}\n\nfunction flatMap(array, predicate) {\n    var results = [];\n    for (var i = 0; i < array.length; i++) {\n        var mappedValue = predicate(array[i]);\n        for (var j = 0; j < mappedValue.length; j++) {\n            results.push(mappedValue[j]);\n        }\n    }\n    return results;\n}\nfunction compile(patterns, options) {\n    patterns = Array.isArray(patterns) ? patterns : [patterns];\n    if (options['{}'] !== false) {\n        patterns = flatMap(patterns, expand);\n    }\n    var positiveResults = [];\n    var negativeResults = [];\n    var result = '';\n    for (var i = 0; i < patterns.length; i++) {\n        var negatedPattern = negate(patterns[i], options);\n        var convertedPattern = convert(negatedPattern.pattern, options, !negatedPattern.isNegated);\n        if (negatedPattern.isNegated) {\n            negativeResults.push(convertedPattern);\n        }\n        else {\n            positiveResults.push(convertedPattern);\n        }\n    }\n    if (negativeResults.length) {\n        result = \"(?!(?:\" + negativeResults.join('|') + \")$)\";\n    }\n    if (positiveResults.length > 1) {\n        result += \"(?:\" + positiveResults.join('|') + \")\";\n    }\n    else if (positiveResults.length === 1) {\n        result += positiveResults[0];\n    }\n    else if (result.length) {\n        result += convert('**', options, true);\n    }\n    return \"^\" + result + \"$\";\n}\nfunction isMatch(regexp, sample) { if (typeof sample !== 'string') {\n    throw new TypeError(\"Sample must be a string, but \" + typeof sample + \" given\");\n} return regexp.test(sample); }\n/**\n * Compiles one or more glob patterns into a RegExp and returns an isMatch function.\n * The isMatch function takes a sample string as its only argument and returns true\n * if the string matches the pattern(s).\n *\n * ```js\n * outmatch('src/*.js')('src/index.js') //=> true\n * ```\n *\n * ```js\n * const isMatch = outmatch('*.example.com', '.')\n * isMatch('foo.example.com') //=> true\n * isMatch('foo.bar.com') //=> false\n * ```\n */\nfunction outmatch(pattern, options) {\n    if (typeof pattern !== 'string' && !Array.isArray(pattern)) {\n        throw new TypeError(\"The first argument must be a single pattern string or an array of patterns, but \" + typeof pattern + \" given\");\n    }\n    if (typeof options === 'string' || typeof options === 'boolean') {\n        options = { separator: options };\n    }\n    if (arguments.length === 2 &&\n        !(typeof options === 'undefined' ||\n            (typeof options === 'object' && options !== null && !Array.isArray(options)))) {\n        throw new TypeError(\"The second argument must be an options object or a string/boolean separator, but \" + typeof options + \" given\");\n    }\n    options = options || {};\n    if (options.separator === '\\\\') {\n        throw new Error('\\\\ is not a valid separator');\n    }\n    var regexpPattern = compile(pattern, options);\n    var regexp = new RegExp(regexpPattern, options.flags);\n    var fn = isMatch.bind(null, regexp);\n    fn.options = options;\n    fn.pattern = pattern;\n    fn.regexp = regexp;\n    return fn;\n}\n\nexport { outmatch as default };\n//# sourceMappingURL=index.es.mjs.map\n","import outmatch from 'outmatch'\nimport Settings from './settings/index.js'\nimport { typeOf, propertyDirectory } from '../../coutil/index.js'\nexport default class EventDefinition {\n  #settings\n  #context\n  #listener\n  #enable = false\n  #path\n  #assigned = []\n  #deassigned = []\n  #transsigned = []\n  #nontranssigned = []\n  #_targets = []\n  #_assign\n  #_deassign\n  #_transsign\n  constructor($settings, $context) { \n    if(!$settings || !$context) { return this }\n    this.#settings = Settings($settings)\n    this.#context = $context\n    this.enable = this.settings.enable\n  }\n  get settings() { return this.#settings }\n  get path() { return this.settings.path }\n  get type() { return this.settings.type }\n  get listener() {\n    if(this.#listener !== undefined) { return this.#listener }\n    const listener = this.settings.listener\n    if(this.settings.bindListener === true) {\n      this.#listener = listener.bind(this.#context)\n    }\n    else { this.#listener = listener }\n    return this.#listener\n  }\n  get enable() { return this.#enable }\n  set enable($enable) {\n    const targets = this.#targets\n    const assigned = this.#assigned\n    const deassigned = this.#deassigned\n    assigned.length = 0\n    deassigned.length = 0\n    iterateTargetElements: \n    for(const $targetElement of targets) {\n      const { path, target, enable } = $targetElement\n      const settings = this.settings\n      if(enable === $enable) { continue iterateTargetElements }\n      if($enable === true) {\n        try {\n          this.#assign(target)\n          $targetElement.enable = $enable\n          assigned.push($targetElement)\n          \n        }\n        catch($err) { if(this.settings.errorLog) { console.error($err) } }\n      }\n      else if($enable === false) {\n        try {\n          this.#deassign(target)\n          $targetElement.enable = $enable\n          deassigned.push($targetElement)\n        }\n        catch($err) { if(this.settings.errorLog) { console.error($err) } }\n      }\n    }\n    this.#enable = $enable\n  }\n  get assigned() { return this.#assigned }\n  get deassigned() { return this.#deassigned }\n  get #target() { return this.settings.target }\n  get #targets() {\n    const pretargets = this.#_targets\n    const targets = []\n    if(this.#target) {\n      for(const $target of [].concat(this.#target)) {\n        const pretargetElement = pretargets.find(\n          ($pretarget) => $pretarget?.path === this.path\n        )\n        if(pretargetElement !== undefined) {\n          targets.push(pretargetElement)\n        }\n        else if(pretargetElement === undefined) {\n          targets.push({\n            path: this.path,\n            target: $target,\n            enable: false,\n          })\n        }\n      }\n    }\n    else if(typeOf(this.path) === 'string') {\n      const targetPaths = []\n      if(this.path === this.#scopeKey) {\n        const targetElement = {\n          path: this.path,\n          target: this.#context,\n          enable: false,\n        }\n        targets.push(targetElement)\n      }\n      else {\n        if(this.settings.propertyDirectory) {\n          const propertyDirectory = this.#propertyDirectory\n          const propertyPathMatcher = outmatch(this.path, {\n            separator: '.',\n          })\n          iteratePropertyPaths: \n          for(const $propertyPath of propertyDirectory) {\n            const propertyPathMatch = propertyPathMatcher($propertyPath)\n            if(propertyPathMatch === true) { targetPaths.push($propertyPath) }\n          }\n          if(this.path.charAt(0) === '*') {\n            targetPaths.unshift(this.#scopeKey)\n          }\n        }\n        else {\n          targetPaths.push(this.path)\n        }\n        iterateTargetPaths: \n        for(const $targetPath of targetPaths) {\n          const pretargetElement = pretargets.find(\n            ($pretarget) => $pretarget.path === $targetPath\n          )\n          let target = this.#context\n          let targetElement\n          const pathKeys = $targetPath.split('.')\n          let pathKeysIndex = 0\n          iterateTargetPathKeys: \n          while(pathKeysIndex < pathKeys.length) {\n            let pathKey = pathKeys[pathKeysIndex]\n            if(pathKey === this.#scopeKey) { break iterateTargetPathKeys }\n            iterateTargetAccessors: \n            for(const $targetAccessor of this.settings.accessors) {\n              try { target = $targetAccessor(target, pathKey) }\n              catch($err) { if(this.settings.errorLog) { console.error($err) } }\n              if(target !== undefined) { break iterateTargetAccessors }\n            }\n            pathKeysIndex++\n          }\n          if(target !== undefined) {\n            if(target === pretargetElement?.target) {\n              targetElement = pretargetElement\n            }\n            else if(typeof target === 'object') {\n              targetElement = {\n                path: $targetPath,\n                target: target,\n                enable: false,\n              }\n            }\n          }\n          if(targetElement !== undefined) { targets.push(targetElement) }\n        }\n      }\n    }\n    this.#_targets = targets\n    return this.#_targets\n  }\n  get #scopeKey() { return this.settings.scopeKey }\n  get #assign() {\n    if(this.#_assign !== undefined) { return this.#_assign }\n    this.#_assign = this.settings.methods.assign[this.settings.assign].bind(null, this)\n    return this.#_assign\n  }\n  get #deassign() {\n    if(this.#_deassign !== undefined) { return this.#_deassign }\n    this.#_deassign = this.settings.methods.deassign[this.settings.deassign].bind(null, this)\n    return this.#_deassign\n  }\n  get #transsign() {\n    if(this.#_transsign !== undefined) { return this.#_transsign }\n    this.#_transsign = this.settings.methods.transsign[this.settings.transsign].bind(null, this)\n    return this.#_transsign\n  }\n  get #methods() { return this.settings.methods }\n  get #propertyDirectory() {\n    if(!this.settings.propertyDirectory) { return null }\n    const propertyDirectorySettings = ({\n      accessors: this.settings.accessors\n    }, this.settings.propertyDirectory)\n    return propertyDirectory(this.#context, propertyDirectorySettings)\n  }\n  emit() {\n    const targets = this.#targets\n    const transsigned = this.#transsigned\n    const nontranssigned = this.#nontranssigned\n    transsigned.length = 0\n    nontranssigned.length = 0\n    iterateTargetElements: \n    for(const $targetElement of targets) {\n      const { target } = $targetElement\n      try {\n        this.#transsign(target, ...arguments)\n        transsigned.push($targetElement)\n      }\n      catch($err) { nontranssigned.push($targetElement) }\n    }\n    return this\n  }\n}","import { accessors, recursiveAssign, typeOf } from '../../../coutil/index.js'\nexport default ($settings = {}) => {\n  const Settings = {\n    enable: false,\n    accessors: [accessors.default],\n    propertyDirectory: { scopeKey: $settings.scopeKey, maxDepth: 10 },\n    assign: 'addEventListener', deassign: 'removeEventListener', transsign: 'dispatchEvent',\n    bindListener: true,\n    scopeKey: ':scope',\n    errorLog: false,\n    methods: {\n      assign: {\n        addEventListener: function addEventListener($eventDefinition, $target) {\n          const { type, listener, settings } = $eventDefinition\n          const { options, useCapture } = settings\n          return $target['addEventListener'](type, listener, options || useCapture)\n        },\n        on: function on($eventDefinition, $target) {\n          const { type, listener } = $eventDefinition\n          return $target['on'](type, listener)\n        },\n        once: function once($eventDefinition, $target) {\n          const { type, listener } = $eventDefinition\n          return $target['once'](type, listener)\n        },\n      }, \n      deassign: {\n        removeEventListener: function removeEventListener($eventDefinition, $target) {\n          const { type, listener, settings } = $eventDefinition\n          const { options, useCapture } = settings\n          return $target['removeEventListener'](type, listener, options || useCapture)\n        },\n        off: function off($eventDefinition, $target) {\n          const { type, listener } = $eventDefinition\n          return $target['off'](type, listener)\n        },\n      },\n      transsign: {\n        dispatchEvent: function dispatchEvent($eventDefinition, $target, $event) {\n          return $target['dispatchEvent']($event)\n        },\n        emit: function emit($eventDefinition, $target, $type, ...$arguments) {\n          return $target['emit']($type, ...$arguments)\n        },\n      },\n    },\n  }\n  for(const [$settingKey, $settingValue] of Object.entries($settings)) {\n    switch($settingKey) {\n      case 'propertyDirectory':\n        Settings[$settingKey] = Object.assign(Settings[$settingKey], $settingValue)\n        break\n      case 'accessors':\n        Settings[$settingKey] = $settingValue\n        Settings.propertyDirectory[$settingKey] = $settingValue\n        break\n      case 'methods': \n        Settings[$settingKey] = recursiveAssign(Settings[$settingKey], $settingValue)\n        break\n      case 'enableEvents': break\n      default: \n        Settings[$settingKey] = $settingValue\n        break\n    }\n  }\n  return Settings\n}","import { expandEvents, recursiveAssign } from '../coutil/index.js'\nimport Settings from './settings/index.js'\nimport EventDefinition from './event-definition/index.js'\nexport default class Core extends EventTarget {\n  static implement = function ($target, $settings) {\n    if(!$target || !$settings) { return undefined }\n    const settings = Settings($settings)\n    const events = []\n    Object.defineProperties($target, {\n      [settings.propertyDefinitions.getEvents]: {\n        enumerable: false, writable: false, \n        value: function getEvents() {\n          if(!arguments[0]) { return events }\n          const getEvents = []\n          const $filterEvents = [].concat(arguments[0])\n          iterateFilterEvents: \n          for(const $filterEvent of $filterEvents) {\n            iterateEvents: \n            for(const $event of events) {\n              let match\n              iterateEventFilterProperties: \n              for(const [\n                $filterEventPropertyKey, $filterEventPropertyValue\n              ] of Object.entries($filterEvent)) {\n                let eventFilterMatch\n                if($filterEventPropertyKey === 'listener') {\n                  eventFilterMatch = (\n                    $event.settings[$filterEventPropertyKey] === $filterEventPropertyValue\n                  )\n                }\n                else {\n                  eventFilterMatch = (\n                    $event[$filterEventPropertyKey] === $filterEventPropertyValue\n                  )\n                }\n                if(match !== false) { match = eventFilterMatch }\n                else { break iterateEventFilterProperties }\n              }\n              if(match === true) { getEvents.push($event) }\n            }\n          }\n          return getEvents\n        }\n      },\n      [settings.propertyDefinitions.addEvents]: {\n        enumerable: false, writable: false, \n        value: function addEvents() {\n          if(!arguments.length) { return $target }\n          let $addEvents = expandEvents(arguments[0], settings.scopeKey)\n          let $enableEvents = arguments[1] || false\n          iterateAddEvents: \n          for(let $addEvent of $addEvents) {\n            const event = {}\n            for(const $settingKey of [\n              'accessors', 'assign', 'deassign', 'transsign', 'propertyDirectory'\n            ]) {\n              const settingValue = settings[$settingKey]\n              if(settingValue !== undefined) { event[$settingKey] = settingValue }\n            }\n            recursiveAssign(event, $addEvent)\n            const eventDefinition = new EventDefinition(event, $target)\n            if($enableEvents) { eventDefinition.enable = true }\n            events.push(eventDefinition)\n          }\n          return $target\n        },\n      },\n      [settings.propertyDefinitions.removeEvents]: {\n        enumerable: false, writable: false, \n        value: function removeEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0])\n          if($events.length === 0) return $target\n          let eventsIndex = events.length - 1\n          while(eventsIndex > -1) {\n            const event = events[eventsIndex]\n            if($events.includes(event)) {\n              event.enable = false\n              events.splice(eventsIndex, 1)\n            }\n            eventsIndex--\n          }\n          return $target\n        }\n      },\n      [settings.propertyDefinitions.enableEvents]: {\n        enumerable: false, writable: false, \n        value: function enableEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0])\n          if($events.length === 0) return $target\n          iterateEvents: for(const $event of $events) { $event.enable = true }\n          return $target\n        },\n      },\n      [settings.propertyDefinitions.disableEvents]: {\n        enumerable: false, writable: false, \n        value: function disableEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0])\n          if($events.length === 0) return $target\n          iterateEvents: for(const $event of $events) { $event.enable = false }\n          return $target\n        },\n      },\n      [settings.propertyDefinitions.reenableEvents]: {\n        enumerable: false, writable: false, \n        value: function reenableEvents() {\n          const $events = $target[settings.propertyDefinitions.getEvents](arguments[0])\n          for(const $event of $events) {\n            $event.enable = false\n            $event.enable = true\n          }\n          return $target\n        },\n      },\n      [settings.propertyDefinitions.emitEvents]: {\n        enumerable: false, writable: false, \n        value: function emitEvents($filterEvents, ...$eventParameters) {\n          const $events = $target[settings.propertyDefinitions.getEvents]($filterEvents)\n          for(const $event of $events) {\n            $event.emit(...$eventParameters)\n          }\n          return $target\n        },\n      },\n    })\n    if(settings.events) { $target[settings.propertyDefinitions.addEvents](settings.events) }\n    if(settings.enableEvents === true) { $target[settings.propertyDefinitions.enableEvents]() }\n    return $target\n  }\n  constructor($settings = {}) {\n    super()\n    return Core.implement(this, $settings)\n  }\n}","export default ($settings = {}) => {\n  const Settings = {\n    events: {},\n    enableEvents: false,\n    propertyDefinitions: {\n      getEvents: 'getEvents',\n      addEvents: 'addEvents',\n      removeEvents: 'removeEvents',\n      enableEvents: 'enableEvents',\n      disableEvents: 'disableEvents',\n      reenableEvents: 'reenableEvents',\n      emitEvents: 'emitEvents',\n    },\n  }\n  for(const [$settingKey, $settingValue] of Object.entries($settings)) {\n    switch($settingKey) {\n      case 'propertyDefinitions':\n        Settings[$settingKey] = Object.assign(Settings[$settingKey], $settingValue)\n        break\n      default: \n        Settings[$settingKey] = $settingValue\n        break\n    }\n  }\n  return Settings\n}"],"names":["accessors","default","$target","$property","undefined","get","expandEvents","$propEvents","$scopeKey","Array","isArray","propEvents","$propEventSettings","$propEventListener","Object","entries","propEventSettings","trim","split","path","type","listener","options","length","propEvent","enable","push","Primitives","string","String","number","Number","boolean","Boolean","null","PrimitiveKeys","keys","PrimitiveValues","values","Objects","object","array","ObjectKeys","ObjectValues","Types","assign","TypeKeys","TypeValues","TypeMethods","regularExpressions","quotationEscape","typeOf","$data","prototype","toString","call","slice","toLowerCase","subpaths","$path","RegExp","keypaths","_subpaths","pop","key","root","shift","typeofRoot","parse","typedObjectLiteral","$value","_typedObjectLiteral","typeOfValue","$source","subtarget","$subpath","set","path.parse","target","Options","depth","maxDepth","Accessors","propertyDirectory","$object","$options","_propertyDirectory","$accessor","$key","$subtarget","join","recursiveAssign","$sources","$sourcePropertyKey","$sourcePropertyValue","typeOfTargetPropertyValue","typeOfSourcePropertyValue","expandTree","typeOfProperty","typeOfSource","includes","$sourceKey","$sourceValue","Tree.set","impandTree","Tree.get","recursiveAssignConcat","concat","recursiveFreeze","$propertyKey","$propertyValue","freeze","handleNoCommaBraces","span","separatorI","i","rangeStart","substr","rangeEnd","expand","pattern","TypeError","scanning","openingBraces","closingBraces","handledUntil","results","alternatives","char","substring","j","newResults","k","l","unhandledFrom","negate","supportNegation","supportParens","isNegated","escapeRegExpChar","Pattern","source","excludeDot","separator","separatorSplitter","separatorMatcher","wildcard","str","result","escapeRegExpString","requiredSeparator","optionalSeparator","segments","support","qMark","star","globstar","brackets","extglobs","Segment","isFirst","isLast","end","EXCLUDE_DOT_PATTERN","add","state","addition","addToUnmatch","unmatch","addToMatch","dotHandled","match","convertSegment","segment","openingBracket","closingBracket","openingParens","closingParens","parensHandledUntil","extglobModifiers","scanningForParens","escapeChar","nextChar","State","modifier_1","indexOf","Error","useUnmatch","convert","isMatch","regexp","sample","test","outmatch","arguments","regexpPattern","patterns","predicate","mappedValue","flatMap","positiveResults","negativeResults","negatedPattern","convertedPattern","compile","flags","fn","bind","EventDefinition","settings","context","assigned","deassigned","transsigned","nontranssigned","_targets","_assign","_deassign","_transsign","constructor","$settings","$context","this","Settings","scopeKey","deassign","transsign","bindListener","errorLog","methods","addEventListener","$eventDefinition","useCapture","on","once","removeEventListener","off","dispatchEvent","$event","emit","$type","$arguments","$settingKey","$settingValue","$enable","targets","$targetElement","$err","console","error","pretargets","pretargetElement","find","$pretarget","targetPaths","targetElement","propertyPathMatcher","$propertyPath","charAt","unshift","$targetPath","pathKeys","pathKeysIndex","iterateTargetPathKeys","pathKey","iterateTargetAccessors","$targetAccessor","propertyDirectorySettings","Core","EventTarget","static","events","enableEvents","propertyDefinitions","getEvents","addEvents","removeEvents","disableEvents","reenableEvents","emitEvents","defineProperties","enumerable","writable","value","$filterEvents","$filterEvent","iterateEventFilterProperties","$filterEventPropertyKey","$filterEventPropertyValue","eventFilterMatch","$addEvents","$enableEvents","$addEvent","event","settingValue","eventDefinition","$events","eventsIndex","splice","$eventParameters","super","implement"],"mappings":"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","x_google_ignoreList":[14]}